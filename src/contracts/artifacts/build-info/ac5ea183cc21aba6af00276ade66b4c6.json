{"id":"ac5ea183cc21aba6af00276ade66b4c6","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../Proxy.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../../access/Ownable.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n     * beacon.\n     */\n    constructor(address implementation_) {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view virtual override returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\n        _implementation = newImplementation;\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"src/contracts/interfaces/IV4DistributionModule.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\n/**\n * @title IV4DistributionModule\n * @dev Interface for the distribution module with allocation capabilities\n */\ninterface IV4DistributionModule {\n    /**\n     * @dev Struct for each allocation entry\n     */\n    struct Allocation {\n        address wallet;\n        uint256 amount;\n        string label;\n        bool locked;\n        uint256 unlockTime;\n    }\n    \n    /**\n     * @dev Add a new allocation\n     * @param wallet Recipient wallet address\n     * @param amount Amount of tokens to allocate\n     * @param label Optional label for this allocation (e.g. \"Team\", \"Marketing\")\n     * @param locked Whether the allocation should be time-locked\n     * @param unlockTime Timestamp when tokens become unlocked (0 if not locked)\n     * @return success Whether the allocation was successfully added\n     */\n    function addAllocation(\n        address wallet, \n        uint256 amount, \n        string calldata label,\n        bool locked,\n        uint256 unlockTime\n    ) external returns (bool success);\n    \n    /**\n     * @dev Add multiple allocations at once\n     * @param wallets Array of recipient wallet addresses\n     * @param amounts Array of token amounts\n     * @param labels Array of labels\n     * @param lockStatus Array of lock statuses\n     * @param unlockTimes Array of unlock times\n     * @return success Whether all allocations were successfully added\n     */\n    function addMultipleAllocations(\n        address[] calldata wallets,\n        uint256[] calldata amounts,\n        string[] calldata labels,\n        bool[] calldata lockStatus,\n        uint256[] calldata unlockTimes\n    ) external returns (bool success);\n    \n    /**\n     * @dev Remove an allocation\n     * @param wallet Recipient wallet address to remove\n     * @return success Whether the allocation was successfully removed\n     */\n    function removeAllocation(address wallet) external returns (bool success);\n    \n    /**\n     * @dev Modify an existing allocation\n     * @param wallet Recipient wallet address\n     * @param amount New amount of tokens\n     * @param label New label\n     * @param locked New lock status\n     * @param unlockTime New unlock time\n     * @return success Whether the allocation was successfully modified\n     */\n    function modifyAllocation(\n        address wallet,\n        uint256 amount,\n        string calldata label,\n        bool locked,\n        uint256 unlockTime\n    ) external returns (bool success);\n    \n    /**\n     * @dev Get all allocations\n     * @return allocations Array of allocation details\n     */\n    function getAllAllocations() external view returns (Allocation[] memory allocations);\n    \n    /**\n     * @dev Get allocation for a specific wallet\n     * @param wallet Recipient wallet address\n     * @return allocation The allocation details\n     */\n    function getAllocation(address wallet) external view returns (Allocation memory allocation);\n    \n    /**\n     * @dev Execute the distribution\n     * @return success Whether the distribution was successfully executed\n     */\n    function executeDistribution() external returns (bool success);\n    \n    /**\n     * @dev Unlock tokens for a wallet if the unlock time has passed\n     * @param wallet Address of the wallet to unlock tokens for\n     * @return success Whether the tokens were successfully unlocked\n     */\n    function unlockTokens(address wallet) external returns (bool success);\n} "},"src/contracts/interfaces/IV4Module.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\n/**\n * @title IV4Module\n * @dev Interface for all V4 modules\n */\ninterface IV4Module {\n    /**\n     * @dev Initialize the module\n     * @param tokenAddress Address of the token this module is attached to\n     * @param data Additional initialization data\n     */\n    function initialize(address tokenAddress, bytes calldata data) external;\n    \n    /**\n     * @dev Get the type of this module\n     * @return moduleType Type identifier for this module\n     */\n    function getModuleType() external pure returns (bytes32);\n    \n    /**\n     * @dev Check if this module has a specific function\n     * @param functionSig Function signature to check for\n     * @return hasFunction Whether the module implements the function\n     */\n    function supportsFunction(bytes4 functionSig) external pure returns (bool);\n    \n    /**\n     * @dev Get the token this module is attached to\n     * @return tokenAddress Address of the token\n     */\n    function getToken() external view returns (address);\n} "},"src/contracts/interfaces/IV4SecurityModule.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\n/**\n * @title IV4SecurityModule\n * @dev Interface for the security module with multi-sig capabilities\n */\ninterface IV4SecurityModule {\n    /**\n     * @dev Propose a new owner (multi-sig process step 1)\n     * @param newOwner Address of the proposed new owner\n     * @return proposalId Identifier for the ownership transfer proposal\n     */\n    function proposeOwnershipTransfer(address newOwner) external returns (bytes32);\n    \n    /**\n     * @dev Confirm an ownership transfer proposal (multi-sig process step 2)\n     * @param proposalId Identifier of the proposal to confirm\n     * @return success Whether the ownership was successfully transferred\n     */\n    function confirmOwnershipTransfer(bytes32 proposalId) external returns (bool);\n    \n    /**\n     * @dev Add a new signer to the multi-sig configuration\n     * @param signer Address to add as a signer\n     * @return success Whether the signer was successfully added\n     */\n    function addSigner(address signer) external returns (bool);\n    \n    /**\n     * @dev Remove a signer from the multi-sig configuration\n     * @param signer Address to remove from signers\n     * @return success Whether the signer was successfully removed\n     */\n    function removeSigner(address signer) external returns (bool);\n    \n    /**\n     * @dev Set the required number of signatures for operations\n     * @param threshold Number of required signatures\n     * @return success Whether the threshold was successfully set\n     */\n    function setThreshold(uint256 threshold) external returns (bool);\n    \n    /**\n     * @dev Check if an address is a signer\n     * @param account Address to check\n     * @return isSigner Whether the address is a signer\n     */\n    function isSigner(address account) external view returns (bool);\n    \n    /**\n     * @dev Get the current signature threshold\n     * @return threshold The current signature threshold\n     */\n    function getThreshold() external view returns (uint256);\n    \n    /**\n     * @dev Get all current signers\n     * @return signers Array of current signer addresses\n     */\n    function getSigners() external view returns (address[] memory);\n    \n    /**\n     * @dev Emergency pause for the token\n     * @return success Whether the pause was successful\n     */\n    function emergencyPause() external returns (bool);\n    \n    /**\n     * @dev Unpause the token after emergency\n     * @return success Whether the unpause was successful\n     */\n    function emergencyUnpause() external returns (bool);\n} "},"src/contracts/interfaces/IV4TokenBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\n/**\n * @title IV4TokenBase\n * @dev Interface for the V4 token base\n */\ninterface IV4TokenBase {\n    /**\n     * @dev Initialize the token with basic parameters\n     * @param name_ Token name\n     * @param symbol_ Token symbol\n     * @param initialSupply Initial supply to mint\n     * @param owner_ Address that will receive the initial supply and become the owner\n     */\n    function initialize(\n        string memory name_,\n        string memory symbol_,\n        uint256 initialSupply,\n        address owner_\n    ) external;\n    \n    /**\n     * @dev Add a module to the token\n     * @param moduleAddress Address of the module to add\n     * @param data Initialization data for the module\n     * @return success Whether the module was successfully added\n     */\n    function addModule(address moduleAddress, bytes calldata data) external returns (bool);\n    \n    /**\n     * @dev Remove a module from the token\n     * @param moduleAddress Address of the module to remove\n     * @return success Whether the module was successfully removed\n     */\n    function removeModule(address moduleAddress) external returns (bool);\n    \n    /**\n     * @dev Check if a module is active\n     * @param moduleAddress Address of the module to check\n     * @return isActive Whether the module is active\n     */\n    function isModuleActive(address moduleAddress) external view returns (bool);\n    \n    /**\n     * @dev Get all active modules\n     * @return modules Array of active module addresses\n     */\n    function getModules() external view returns (address[] memory);\n    \n    /**\n     * @dev Execute a function call from a module\n     * @param target Target address for the call\n     * @param data Call data\n     * @return success Whether the call was successful\n     * @return returnData Data returned by the call\n     */\n    function executeFromModule(address target, bytes calldata data) external returns (bool, bytes memory);\n    \n    /**\n     * @dev Pause the token\n     */\n    function pause() external;\n    \n    /**\n     * @dev Unpause the token\n     */\n    function unpause() external;\n    \n    /**\n     * @dev Transfer ownership of the token\n     * @param newOwner Address of the new owner\n     */\n    function transferOwnership(address newOwner) external;\n\n    /**\n     * @dev Get the current owner of the token\n     * @return The address of the current owner\n     */\n    function owner() external view returns (address);\n} "},"src/contracts/V4DistributionModule.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\";\nimport \"./interfaces/IV4DistributionModule.sol\";\nimport \"./interfaces/IV4Module.sol\";\nimport \"./interfaces/IV4TokenBase.sol\";\n\n/**\n * @title V4DistributionModule\n * @dev Implementation of distribution module with allocation capabilities\n */\ncontract V4DistributionModule is \n    Initializable, \n    OwnableUpgradeable, \n    IV4DistributionModule,\n    IV4Module\n{\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n    \n    // Token this module is attached to\n    address private _token;\n    \n    // Allocation tracking\n    EnumerableSetUpgradeable.AddressSet private _allocationWallets;\n    mapping(address => Allocation) private _allocations;\n    uint256 private _totalAllocated;\n    bool private _distributionExecuted;\n    \n    // Version info\n    string public constant VERSION = \"4.0.0\";\n    \n    // Events\n    event AllocationAdded(address indexed wallet, uint256 amount, string label, bool locked, uint256 unlockTime);\n    event AllocationRemoved(address indexed wallet);\n    event AllocationModified(address indexed wallet, uint256 amount, string label, bool locked, uint256 unlockTime);\n    event DistributionExecuted(uint256 totalDistributed, uint256 walletCount);\n    event TokensUnlocked(address indexed wallet, uint256 amount);\n    \n    /**\n     * @dev Constructor that disables initialization on the implementation contract\n     */\n    constructor() {\n        _disableInitializers();\n    }\n    \n    /**\n     * @dev Initialize the module\n     * @param tokenAddress Address of the token this module is attached to\n     * @param data Additional initialization data (owner address)\n     */\n    function initialize(address tokenAddress, bytes calldata data) external override initializer {\n        require(data.length == 32, \"V4DistributionModule: invalid initialization data\");\n        address owner = address(uint160(uint256(bytes32(data))));\n        __Ownable_init();\n        _transferOwnership(owner);\n        \n        require(tokenAddress != address(0), \"V4DistributionModule: token address cannot be zero\");\n        _token = tokenAddress;\n    }\n    \n    /**\n     * @dev Get the type of this module\n     * @return moduleType Type identifier for this module\n     */\n    function getModuleType() external pure override returns (bytes32 moduleType) {\n        return keccak256(\"DISTRIBUTION_MODULE\");\n    }\n    \n    /**\n     * @dev Check if this module has a specific function\n     * @param functionSig Function signature to check for\n     * @return hasFunction Whether the module implements the function\n     */\n    function supportsFunction(bytes4 functionSig) external pure override returns (bool hasFunction) {\n        return \n            functionSig == IV4DistributionModule.addAllocation.selector ||\n            functionSig == IV4DistributionModule.addMultipleAllocations.selector ||\n            functionSig == IV4DistributionModule.removeAllocation.selector ||\n            functionSig == IV4DistributionModule.modifyAllocation.selector ||\n            functionSig == IV4DistributionModule.getAllAllocations.selector ||\n            functionSig == IV4DistributionModule.getAllocation.selector ||\n            functionSig == IV4DistributionModule.executeDistribution.selector ||\n            functionSig == IV4DistributionModule.unlockTokens.selector;\n    }\n    \n    /**\n     * @dev Get the token this module is attached to\n     * @return tokenAddress Address of the token\n     */\n    function getToken() external view override returns (address tokenAddress) {\n        return _token;\n    }\n    \n    /**\n     * @dev Add a new allocation\n     * @param wallet Recipient wallet address\n     * @param amount Amount of tokens to allocate\n     * @param label Optional label for this allocation (e.g. \"Team\", \"Marketing\")\n     * @param locked Whether the allocation should be time-locked\n     * @param unlockTime Timestamp when tokens become unlocked (0 if not locked)\n     * @return success Whether the allocation was successfully added\n     */\n    function addAllocation(\n        address wallet, \n        uint256 amount, \n        string calldata label,\n        bool locked,\n        uint256 unlockTime\n    ) external override onlyOwner returns (bool success) {\n        require(!_distributionExecuted, \"V4DistributionModule: distribution already executed\");\n        require(wallet != address(0), \"V4DistributionModule: wallet cannot be zero address\");\n        require(amount > 0, \"V4DistributionModule: amount must be greater than zero\");\n        require(!_allocationWallets.contains(wallet), \"V4DistributionModule: wallet already has allocation\");\n        \n        if (locked) {\n            require(unlockTime > block.timestamp, \"V4DistributionModule: unlock time must be in the future\");\n        }\n        \n        _allocations[wallet] = Allocation({\n            wallet: wallet,\n            amount: amount,\n            label: label,\n            locked: locked,\n            unlockTime: locked ? unlockTime : 0\n        });\n        \n        _allocationWallets.add(wallet);\n        _totalAllocated += amount;\n        \n        emit AllocationAdded(wallet, amount, label, locked, unlockTime);\n        return true;\n    }\n    \n    /**\n     * @dev Add multiple allocations at once\n     * @param wallets Array of recipient wallet addresses\n     * @param amounts Array of token amounts\n     * @param labels Array of labels\n     * @param lockStatus Array of lock statuses\n     * @param unlockTimes Array of unlock times\n     * @return success Whether all allocations were successfully added\n     */\n    function addMultipleAllocations(\n        address[] calldata wallets,\n        uint256[] calldata amounts,\n        string[] calldata labels,\n        bool[] calldata lockStatus,\n        uint256[] calldata unlockTimes\n    ) external override onlyOwner returns (bool success) {\n        require(!_distributionExecuted, \"V4DistributionModule: distribution already executed\");\n        require(\n            wallets.length == amounts.length && \n            wallets.length == labels.length && \n            wallets.length == lockStatus.length && \n            wallets.length == unlockTimes.length,\n            \"V4DistributionModule: array lengths must match\"\n        );\n        \n        for (uint256 i = 0; i < wallets.length; i++) {\n            require(wallets[i] != address(0), \"V4DistributionModule: wallet cannot be zero address\");\n            require(amounts[i] > 0, \"V4DistributionModule: amount must be greater than zero\");\n            require(!_allocationWallets.contains(wallets[i]), \"V4DistributionModule: wallet already has allocation\");\n            \n            if (lockStatus[i]) {\n                require(unlockTimes[i] > block.timestamp, \"V4DistributionModule: unlock time must be in the future\");\n            }\n            \n            _allocations[wallets[i]] = Allocation({\n                wallet: wallets[i],\n                amount: amounts[i],\n                label: labels[i],\n                locked: lockStatus[i],\n                unlockTime: lockStatus[i] ? unlockTimes[i] : 0\n            });\n            \n            _allocationWallets.add(wallets[i]);\n            _totalAllocated += amounts[i];\n            \n            emit AllocationAdded(wallets[i], amounts[i], labels[i], lockStatus[i], unlockTimes[i]);\n        }\n        \n        return true;\n    }\n    \n    /**\n     * @dev Remove an allocation\n     * @param wallet Recipient wallet address to remove\n     * @return success Whether the allocation was successfully removed\n     */\n    function removeAllocation(address wallet) external override onlyOwner returns (bool success) {\n        require(!_distributionExecuted, \"V4DistributionModule: distribution already executed\");\n        require(_allocationWallets.contains(wallet), \"V4DistributionModule: wallet does not have allocation\");\n        \n        uint256 amount = _allocations[wallet].amount;\n        _totalAllocated -= amount;\n        \n        delete _allocations[wallet];\n        _allocationWallets.remove(wallet);\n        \n        emit AllocationRemoved(wallet);\n        return true;\n    }\n    \n    /**\n     * @dev Modify an existing allocation\n     * @param wallet Recipient wallet address\n     * @param amount New amount of tokens\n     * @param label New label\n     * @param locked New lock status\n     * @param unlockTime New unlock time\n     * @return success Whether the allocation was successfully modified\n     */\n    function modifyAllocation(\n        address wallet,\n        uint256 amount,\n        string calldata label,\n        bool locked,\n        uint256 unlockTime\n    ) external override onlyOwner returns (bool success) {\n        require(!_distributionExecuted, \"V4DistributionModule: distribution already executed\");\n        require(_allocationWallets.contains(wallet), \"V4DistributionModule: wallet does not have allocation\");\n        require(amount > 0, \"V4DistributionModule: amount must be greater than zero\");\n        \n        if (locked) {\n            require(unlockTime > block.timestamp, \"V4DistributionModule: unlock time must be in the future\");\n        }\n        \n        _totalAllocated = _totalAllocated - _allocations[wallet].amount + amount;\n        \n        _allocations[wallet] = Allocation({\n            wallet: wallet,\n            amount: amount,\n            label: label,\n            locked: locked,\n            unlockTime: locked ? unlockTime : 0\n        });\n        \n        emit AllocationModified(wallet, amount, label, locked, unlockTime);\n        return true;\n    }\n    \n    /**\n     * @dev Get all allocations\n     * @return allocations Array of allocation details\n     */\n    function getAllAllocations() external view override returns (Allocation[] memory allocations) {\n        uint256 count = _allocationWallets.length();\n        allocations = new Allocation[](count);\n        \n        for (uint256 i = 0; i < count; i++) {\n            address wallet = _allocationWallets.at(i);\n            allocations[i] = _allocations[wallet];\n        }\n        \n        return allocations;\n    }\n    \n    /**\n     * @dev Get allocation for a specific wallet\n     * @param wallet Recipient wallet address\n     * @return allocation The allocation details\n     */\n    function getAllocation(address wallet) external view override returns (Allocation memory allocation) {\n        require(_allocationWallets.contains(wallet), \"V4DistributionModule: wallet does not have allocation\");\n        return _allocations[wallet];\n    }\n    \n    /**\n     * @dev Execute the distribution\n     * @return success Whether the distribution was successfully executed\n     */\n    function executeDistribution() external override onlyOwner returns (bool success) {\n        require(!_distributionExecuted, \"V4DistributionModule: distribution already executed\");\n        require(_allocationWallets.length() > 0, \"V4DistributionModule: no allocations to distribute\");\n        \n        _distributionExecuted = true;\n        uint256 walletCount = _allocationWallets.length();\n        \n        // Transfer tokens to each wallet\n        for (uint256 i = 0; i < walletCount; i++) {\n            address wallet = _allocationWallets.at(i);\n            Allocation storage allocation = _allocations[wallet];\n            \n            // If tokens are locked, they stay in this contract until unlocked\n            if (allocation.locked) {\n                // Request tokens from the token contract to this module\n                bytes memory mintData = abi.encodeWithSignature(\n                    \"mint(address,uint256)\",\n                    address(this),\n                    allocation.amount\n                );\n                IV4TokenBase(_token).executeFromModule(_token, mintData);\n            } else {\n                // Mint directly to the recipient\n                bytes memory mintData = abi.encodeWithSignature(\n                    \"mint(address,uint256)\",\n                    wallet,\n                    allocation.amount\n                );\n                IV4TokenBase(_token).executeFromModule(_token, mintData);\n            }\n        }\n        \n        emit DistributionExecuted(_totalAllocated, walletCount);\n        return true;\n    }\n    \n    /**\n     * @dev Unlock tokens for a wallet if the unlock time has passed\n     * @param wallet Address of the wallet to unlock tokens for\n     * @return success Whether the tokens were successfully unlocked\n     */\n    function unlockTokens(address wallet) external override returns (bool success) {\n        require(_distributionExecuted, \"V4DistributionModule: distribution not yet executed\");\n        require(_allocationWallets.contains(wallet), \"V4DistributionModule: wallet does not have allocation\");\n        \n        Allocation storage allocation = _allocations[wallet];\n        require(allocation.locked, \"V4DistributionModule: allocation is not locked\");\n        require(block.timestamp >= allocation.unlockTime, \"V4DistributionModule: tokens are still locked\");\n        \n        // Transfer tokens to the recipient\n        (bool transferSuccess,) = _token.call(\n            abi.encodeWithSignature(\n                \"transfer(address,uint256)\",\n                wallet,\n                allocation.amount\n            )\n        );\n        require(transferSuccess, \"V4DistributionModule: token transfer failed\");\n        \n        // Mark as unlocked\n        allocation.locked = false;\n        \n        emit TokensUnlocked(wallet, allocation.amount);\n        return true;\n    }\n} "},"src/contracts/V4Factory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\nimport \"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\";\nimport \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/IV4TokenBase.sol\";\n\n/**\n * @title V4Factory\n * @dev Factory for creating V4 tokens with modular architecture\n */\ncontract V4Factory is Ownable {\n    // Implementation addresses\n    address public tokenImplementation;\n    address public securityModuleImplementation;\n    \n    // Beacon contracts for upgrades\n    UpgradeableBeacon public tokenBeacon;\n    UpgradeableBeacon public securityModuleBeacon;\n    \n    // Events\n    event TokenCreated(address indexed tokenAddress, string name, string symbol, address indexed owner);\n    \n    // Function selectors\n    bytes4 private constant TOKEN_INITIALIZE_SELECTOR = bytes4(keccak256(\"initialize(string,string,uint256,address)\"));\n    bytes4 private constant MODULE_INITIALIZE_SELECTOR = bytes4(keccak256(\"initialize(address,bytes)\"));\n    \n    /**\n     * @dev Initialize the factory with implementation contracts\n     * @param owner_ The owner of the factory\n     * @param tokenImpl_ The token implementation address\n     * @param securityModuleImpl_ The security module implementation address\n     */\n    constructor(\n        address owner_,\n        address tokenImpl_,\n        address securityModuleImpl_\n    ) {\n        _transferOwnership(owner_);\n        \n        tokenImplementation = tokenImpl_;\n        securityModuleImplementation = securityModuleImpl_;\n        \n        tokenBeacon = new UpgradeableBeacon(tokenImplementation);\n        securityModuleBeacon = new UpgradeableBeacon(securityModuleImplementation);\n        \n        tokenBeacon.transferOwnership(owner_);\n        securityModuleBeacon.transferOwnership(owner_);\n    }\n    \n    /**\n     * @dev Create a new V4 token with default modules\n     * @param name Token name\n     * @param symbol Token symbol\n     * @param initialSupply Initial supply to mint\n     * @param owner Owner of the new token\n     * @return tokenAddress Address of the newly created token\n     */\n    function createToken(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply,\n        address owner\n    ) external returns (address tokenAddress) {\n        // Create token proxy\n        bytes memory tokenData = abi.encodeWithSelector(\n            TOKEN_INITIALIZE_SELECTOR,\n            name,\n            symbol,\n            initialSupply,\n            owner\n        );\n        \n        BeaconProxy tokenProxy = new BeaconProxy(\n            address(tokenBeacon),\n            tokenData\n        );\n        tokenAddress = address(tokenProxy);\n        \n        // Create security module\n        bytes32 securityModuleInitData = bytes32(uint256(uint160(owner)));\n        bytes memory securityData = abi.encodeWithSelector(\n            MODULE_INITIALIZE_SELECTOR,\n            tokenAddress,\n            abi.encode(securityModuleInitData)\n        );\n        \n        BeaconProxy securityModuleProxy = new BeaconProxy(\n            address(securityModuleBeacon),\n            securityData\n        );\n        address securityModuleAddress = address(securityModuleProxy);\n        \n        // Add security module to token\n        IV4TokenBase(tokenAddress).addModule(securityModuleAddress, abi.encode(securityModuleInitData));\n        \n        // Transfer token ownership to security module\n        IV4TokenBase(tokenAddress).transferOwnership(securityModuleAddress);\n        \n        emit TokenCreated(tokenAddress, name, symbol, owner);\n        return tokenAddress;\n    }\n} "},"src/contracts/V4SecurityModule.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\";\nimport \"./interfaces/IV4SecurityModule.sol\";\nimport \"./interfaces/IV4Module.sol\";\nimport \"./interfaces/IV4TokenBase.sol\";\n\n/**\n * @title V4SecurityModule\n * @dev Implementation of security module with multi-sig capabilities\n */\ncontract V4SecurityModule is \n    Initializable, \n    OwnableUpgradeable,\n    IV4SecurityModule,\n    IV4Module\n{\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\n    \n    address private _token;\n    EnumerableSetUpgradeable.AddressSet private _signers;\n    uint256 private _threshold;\n    \n    function initialize(address tokenAddress, bytes calldata data) external override initializer {\n        require(data.length == 32, \"V4SecurityModule: invalid initialization data\");\n        address owner = address(uint160(uint256(bytes32(data))));\n        __Ownable_init();\n        _transferOwnership(owner);\n        \n        require(tokenAddress != address(0), \"V4SecurityModule: token address cannot be zero\");\n        _token = tokenAddress;\n        \n        _signers.add(owner);\n        _threshold = 1;\n    }\n    \n    function getModuleType() external pure override returns (bytes32) {\n        return keccak256(\"SECURITY_MODULE\");\n    }\n    \n    function supportsFunction(bytes4 functionSig) external pure override returns (bool) {\n        return \n            functionSig == IV4SecurityModule.proposeOwnershipTransfer.selector ||\n            functionSig == IV4SecurityModule.confirmOwnershipTransfer.selector ||\n            functionSig == IV4SecurityModule.addSigner.selector ||\n            functionSig == IV4SecurityModule.removeSigner.selector ||\n            functionSig == IV4SecurityModule.setThreshold.selector ||\n            functionSig == IV4SecurityModule.isSigner.selector ||\n            functionSig == IV4SecurityModule.getThreshold.selector ||\n            functionSig == IV4SecurityModule.getSigners.selector ||\n            functionSig == IV4SecurityModule.emergencyPause.selector ||\n            functionSig == IV4SecurityModule.emergencyUnpause.selector;\n    }\n    \n    function getToken() external view override returns (address) {\n        return _token;\n    }\n    \n    function proposeOwnershipTransfer(address newOwner) external override returns (bytes32) {\n        require(msg.sender == owner(), \"V4SecurityModule: caller is not owner\");\n        require(newOwner != address(0), \"V4SecurityModule: new owner cannot be zero address\");\n        \n        _transferOwnership(newOwner);\n        \n        bytes memory data = abi.encodeWithSignature(\"transferOwnership(address)\", newOwner);\n        IV4TokenBase(_token).executeFromModule(_token, data);\n        \n        return bytes32(0);\n    }\n    \n    function confirmOwnershipTransfer(bytes32) external pure override returns (bool) {\n        return true;\n    }\n    \n    function addSigner(address signer) external override returns (bool) {\n        require(msg.sender == owner(), \"V4SecurityModule: caller is not owner\");\n        require(!_signers.contains(signer), \"V4SecurityModule: signer already exists\");\n        \n        _signers.add(signer);\n        return true;\n    }\n    \n    function removeSigner(address signer) external override returns (bool) {\n        require(msg.sender == owner(), \"V4SecurityModule: caller is not owner\");\n        require(_signers.contains(signer), \"V4SecurityModule: signer does not exist\");\n        require(_signers.length() > _threshold, \"V4SecurityModule: would break threshold\");\n        require(signer != owner(), \"V4SecurityModule: cannot remove owner\");\n        \n        _signers.remove(signer);\n        return true;\n    }\n    \n    function setThreshold(uint256 threshold) external override returns (bool) {\n        require(msg.sender == owner(), \"V4SecurityModule: caller is not owner\");\n        require(threshold > 0, \"V4SecurityModule: threshold cannot be zero\");\n        require(threshold <= _signers.length(), \"V4SecurityModule: threshold too high\");\n        \n        _threshold = threshold;\n        return true;\n    }\n    \n    function isSigner(address account) external view override returns (bool) {\n        return _signers.contains(account);\n    }\n    \n    function getThreshold() external view override returns (uint256) {\n        return _threshold;\n    }\n    \n    function getSigners() external view override returns (address[] memory) {\n        uint256 length = _signers.length();\n        address[] memory signers = new address[](length);\n        \n        for (uint256 i = 0; i < length; i++) {\n            signers[i] = _signers.at(i);\n        }\n        \n        return signers;\n    }\n    \n    function emergencyPause() external override returns (bool) {\n        require(_signers.contains(msg.sender), \"V4SecurityModule: caller is not signer\");\n        \n        bytes memory data = abi.encodeWithSignature(\"pause()\");\n        IV4TokenBase(_token).executeFromModule(_token, data);\n        \n        return true;\n    }\n    \n    function emergencyUnpause() external override returns (bool) {\n        require(_signers.contains(msg.sender), \"V4SecurityModule: caller is not signer\");\n        \n        bytes memory data = abi.encodeWithSignature(\"unpause()\");\n        IV4TokenBase(_token).executeFromModule(_token, data);\n        \n        return true;\n    }\n} "},"src/contracts/V4TokenBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.22;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"./interfaces/IV4TokenBase.sol\";\nimport \"./interfaces/IV4Module.sol\";\n\n/**\n * @title V4TokenBase\n * @dev Base implementation for V4 tokens with modular architecture\n */\ncontract V4TokenBase is \n    Initializable, \n    ERC20Upgradeable, \n    OwnableUpgradeable,\n    PausableUpgradeable,\n    IV4TokenBase\n{    \n    mapping(address => bool) private _modules;\n    address[] private _moduleList;\n    \n    error ModuleExists();\n    error ModuleDoesNotExist();\n    error PermissionDenied();\n    \n    modifier onlyModule() {\n        if (!_modules[msg.sender]) {\n            revert PermissionDenied();\n        }\n        _;\n    }\n    \n    function initialize(\n        string memory name_,\n        string memory symbol_,\n        uint256 initialSupply,\n        address owner_\n    ) public initializer {\n        __ERC20_init(name_, symbol_);\n        __Ownable_init();\n        __Pausable_init();\n        _transferOwnership(owner_);\n        \n        if (initialSupply > 0) {\n            _mint(owner_, initialSupply);\n        }\n    }\n    \n    function addModule(address moduleAddress, bytes calldata data) external override onlyOwner returns (bool) {\n        if (_modules[moduleAddress]) {\n            revert ModuleExists();\n        }\n        \n        try IV4Module(moduleAddress).initialize(address(this), data) {\n            _modules[moduleAddress] = true;\n            _moduleList.push(moduleAddress);\n            return true;\n        } catch {\n            return false;\n        }\n    }\n    \n    function removeModule(address moduleAddress) external override onlyOwner returns (bool) {\n        if (!_modules[moduleAddress]) {\n            revert ModuleDoesNotExist();\n        }\n        \n        _modules[moduleAddress] = false;\n        \n        // Remove from list\n        for (uint i = 0; i < _moduleList.length; i++) {\n            if (_moduleList[i] == moduleAddress) {\n                _moduleList[i] = _moduleList[_moduleList.length - 1];\n                _moduleList.pop();\n                break;\n            }\n        }\n        \n        return true;\n    }\n    \n    function isModuleActive(address moduleAddress) external view override returns (bool) {\n        return _modules[moduleAddress];\n    }\n    \n    function executeFromModule(address target, bytes calldata data) external override onlyModule returns (bool success, bytes memory returnData) {\n        (success, returnData) = target.call(data);\n        return (success, returnData);\n    }\n    \n    function getModules() external view override returns (address[] memory) {\n        return _moduleList;\n    }\n    \n    function pause() external override onlyModule {\n        _pause();\n    }\n    \n    function unpause() external override onlyModule {\n        _unpause();\n    }\n    \n    function transferOwnership(address newOwner) public override(OwnableUpgradeable, IV4TokenBase) onlyOwner {\n        super.transferOwnership(newOwner);\n    }\n\n    function owner() public view override(OwnableUpgradeable, IV4TokenBase) returns (address) {\n        return super.owner();\n    }\n    \n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override {\n        super._beforeTokenTransfer(from, to, amount);\n        require(!paused(), \"V4TokenBase: token transfer while paused\");\n    }\n} "}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1526],"Initializable":[301],"OwnableUpgradeable":[132]},"id":133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":1527,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":302,"src":"169:63:0","symbolAliases":[{"foreign":{"id":3,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"177:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"Initializable","nameLocations":["769:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"769:13:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"769:13:0"},{"baseName":{"id":8,"name":"ContextUpgradeable","nameLocations":["784:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1526,"src":"784:18:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"784:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"234:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":132,"linearizedBaseContracts":[132,1526,301],"name":"OwnableUpgradeable","nameLocation":"747:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11,"mutability":"mutable","name":"_owner","nameLocation":"825:6:0","nodeType":"VariableDeclaration","scope":132,"src":"809:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":17,"name":"OwnershipTransferred","nameLocation":"844:20:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"881:13:0","nodeType":"VariableDeclaration","scope":17,"src":"865:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"912:8:0","nodeType":"VariableDeclaration","scope":17,"src":"896:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:57:0"},"src":"838:84:0"},{"body":{"id":26,"nodeType":"Block","src":"1076:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":23,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1086:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":25,"nodeType":"ExpressionStatement","src":"1086:26:0"}]},"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"928:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":27,"implemented":true,"kind":"function","modifiers":[{"id":21,"kind":"modifierInvocation","modifierName":{"id":20,"name":"onlyInitializing","nameLocations":["1059:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"1059:16:0"},"nodeType":"ModifierInvocation","src":"1059:16:0"}],"name":"__Ownable_init","nameLocation":"1033:14:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"1047:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":132,"src":"1024:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":37,"nodeType":"Block","src":"1187:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":33,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"1216:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":32,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1197:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":36,"nodeType":"ExpressionStatement","src":"1197:32:0"}]},"id":38,"implemented":true,"kind":"function","modifiers":[{"id":30,"kind":"modifierInvocation","modifierName":{"id":29,"name":"onlyInitializing","nameLocations":["1170:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"1170:16:0"},"nodeType":"ModifierInvocation","src":"1170:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1134:24:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[],"src":"1158:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1187:0:0"},"scope":132,"src":"1125:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":45,"nodeType":"Block","src":"1345:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"1355:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1355:13:0"},{"id":44,"nodeType":"PlaceholderStatement","src":"1378:1:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"1242:77:0","text":" @dev Throws if called by any account other than the owner."},"id":46,"name":"onlyOwner","nameLocation":"1333:9:0","nodeType":"ModifierDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[],"src":"1342:2:0"},"src":"1324:62:0","virtual":false,"visibility":"internal"},{"body":{"id":54,"nodeType":"Block","src":"1517:30:0","statements":[{"expression":{"id":52,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":51,"id":53,"nodeType":"Return","src":"1527:13:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1392:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":55,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1471:5:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1476:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55,"src":"1508:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:9:0"},"scope":132,"src":"1462:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":68,"nodeType":"Block","src":"1665:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":60,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1683:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":62,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"1694:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":59,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1675:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"1675:68:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1553:62:0","text":" @dev Throws if the sender is not the owner."},"id":69,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1629:11:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1640:2:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"1665:0:0"},"scope":132,"src":"1620:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":82,"nodeType":"Block","src":"2139:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":77,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:0","typeDescriptions":{}}},"id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":75,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2149:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2149:30:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"1756:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":83,"implemented":true,"kind":"function","modifiers":[{"id":73,"kind":"modifierInvocation","modifierName":{"id":72,"name":"onlyOwner","nameLocations":["2129:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"2129:9:0"},"nodeType":"ModifierInvocation","src":"2129:9:0"}],"name":"renounceOwnership","nameLocation":"2094:17:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"2111:2:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"2139:0:0"},"scope":132,"src":"2085:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":105,"nodeType":"Block","src":"2405:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":92,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2423:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":94,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:0","typeDescriptions":{}}},"id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2435:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2423:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":91,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2415:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":100,"nodeType":"ExpressionStatement","src":"2415:73:0"},{"expression":{"arguments":[{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2517:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2498:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":104,"nodeType":"ExpressionStatement","src":"2498:28:0"}]},"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2192:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":106,"implemented":true,"kind":"function","modifiers":[{"id":89,"kind":"modifierInvocation","modifierName":{"id":88,"name":"onlyOwner","nameLocations":["2395:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"2395:9:0"},"nodeType":"ModifierInvocation","src":"2395:9:0"}],"name":"transferOwnership","nameLocation":"2344:17:0","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"newOwner","nameLocation":"2370:8:0","nodeType":"VariableDeclaration","scope":106,"src":"2362:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2361:18:0"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"2405:0:0"},"scope":132,"src":"2335:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2750:124:0","statements":[{"assignments":[113],"declarations":[{"constant":false,"id":113,"mutability":"mutable","name":"oldOwner","nameLocation":"2768:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"2760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":115,"initialValue":{"id":114,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2779:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2760:25:0"},{"expression":{"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":116,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2795:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":117,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2804:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2795:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":119,"nodeType":"ExpressionStatement","src":"2795:17:0"},{"eventCall":{"arguments":[{"id":121,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2848:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2858:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":120,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2827:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"EmitStatement","src":"2822:45:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"2539:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":126,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2696:18:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"newOwner","nameLocation":"2723:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2715:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:18:0"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"2750:0:0"},"scope":132,"src":"2687:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2880:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":131,"mutability":"mutable","name":"__gap","nameLocation":"3159:5:0","nodeType":"VariableDeclaration","scope":132,"src":"3139:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":130,"length":{"hexValue":"3439","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3139:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":133,"src":"729:2438:0","usedErrors":[],"usedEvents":[17,147]}],"src":"102:3066:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1475],"Initializable":[301]},"id":302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":134,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":302,"sourceUnit":1476,"src":"138:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"184:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":301,"linearizedBaseContracts":[301],"name":"Initializable","nameLocation":"2412:13:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"2432:109:1","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":139,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:1","nodeType":"VariableDeclaration","scope":301,"src":"2546:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":138,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"2579:91:1","text":" @dev Indicates that the contract is in the process of being initialized."},"id":142,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:1","nodeType":"VariableDeclaration","scope":301,"src":"2675:26:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"2708:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":147,"name":"Initialized","nameLocation":"2809:11:1","nodeType":"EventDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:1","nodeType":"VariableDeclaration","scope":147,"src":"2821:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":144,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:1"},"src":"2803:33:1"},{"body":{"id":202,"nodeType":"Block","src":"3269:483:1","statements":[{"assignments":[151],"declarations":[{"constant":false,"id":151,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:1","nodeType":"VariableDeclaration","scope":202,"src":"3279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":150,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":154,"initialValue":{"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:1","subExpression":{"id":152,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3302:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":156,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3347:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":157,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3365:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:1","subExpression":{"arguments":[{"arguments":[{"id":166,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$301","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$301","typeString":"contract Initializable"}],"id":165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:1","typeDescriptions":{}}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":162,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"3388:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1475_$","typeString":"type(library AddressUpgradeable)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1163,"src":"3388:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":170,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3436:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":155,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"ExpressionStatement","src":"3325:201:1"},{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3536:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":182,"nodeType":"ExpressionStatement","src":"3536:16:1"},{"condition":{"id":183,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3566:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":189,"nodeType":"IfStatement","src":"3562:65:1","trueBody":{"id":188,"nodeType":"Block","src":"3582:45:1","statements":[{"expression":{"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":184,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3596:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"3596:20:1"}]}},{"id":190,"nodeType":"PlaceholderStatement","src":"3636:1:1"},{"condition":{"id":191,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3651:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":201,"nodeType":"IfStatement","src":"3647:99:1","trueBody":{"id":200,"nodeType":"Block","src":"3667:79:1","statements":[{"expression":{"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":192,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3681:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":195,"nodeType":"ExpressionStatement","src":"3681:21:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":196,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"3721:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":199,"nodeType":"EmitStatement","src":"3716:19:1"}]}}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"2842:399:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":203,"name":"initializer","nameLocation":"3255:11:1","nodeType":"ModifierDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"3266:2:1"},"src":"3246:506:1","virtual":false,"visibility":"internal"},{"body":{"id":235,"nodeType":"Block","src":"4863:255:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:1","subExpression":{"id":209,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"4882:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":211,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"4899:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":212,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"4914:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"ExpressionStatement","src":"4873:99:1"},{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":218,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"4982:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":219,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"4997:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":221,"nodeType":"ExpressionStatement","src":"4982:22:1"},{"expression":{"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":222,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"5014:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":225,"nodeType":"ExpressionStatement","src":"5014:20:1"},{"id":226,"nodeType":"PlaceholderStatement","src":"5044:1:1"},{"expression":{"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":227,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"5055:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":230,"nodeType":"ExpressionStatement","src":"5055:21:1"},{"eventCall":{"arguments":[{"id":232,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"5103:7:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":231,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"5091:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":234,"nodeType":"EmitStatement","src":"5086:25:1"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"3758:1062:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":236,"name":"reinitializer","nameLocation":"4834:13:1","nodeType":"ModifierDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"version","nameLocation":"4854:7:1","nodeType":"VariableDeclaration","scope":236,"src":"4848:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":205,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:1"},"src":"4825:293:1","virtual":false,"visibility":"internal"},{"body":{"id":245,"nodeType":"Block","src":"5356:97:1","statements":[{"expression":{"arguments":[{"id":240,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"5374:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":243,"nodeType":"ExpressionStatement","src":"5366:69:1"},{"id":244,"nodeType":"PlaceholderStatement","src":"5445:1:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"5124:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":246,"name":"onlyInitializing","nameLocation":"5337:16:1","nodeType":"ModifierDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[],"src":"5353:2:1"},"src":"5328:125:1","virtual":false,"visibility":"internal"},{"body":{"id":281,"nodeType":"Block","src":"5988:231:1","statements":[{"expression":{"arguments":[{"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:1","subExpression":{"id":251,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"6007:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"ExpressionStatement","src":"5998:66:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":256,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"6078:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":258,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":257,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:1","memberName":"max","nodeType":"MemberAccess","src":"6094:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":280,"nodeType":"IfStatement","src":"6074:139:1","trueBody":{"id":279,"nodeType":"Block","src":"6111:102:1","statements":[{"expression":{"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":263,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"6125:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":265,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:1","memberName":"max","nodeType":"MemberAccess","src":"6140:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":270,"nodeType":"ExpressionStatement","src":"6125:30:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":273,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:1","memberName":"max","nodeType":"MemberAccess","src":"6186:15:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":271,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"6174:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"EmitStatement","src":"6169:33:1"}]}}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"5459:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":282,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:1","nodeType":"FunctionDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[],"src":"5968:2:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[],"src":"5988:0:1"},"scope":301,"src":"5939:280:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":290,"nodeType":"Block","src":"6393:36:1","statements":[{"expression":{"id":288,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"6410:12:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":287,"id":289,"nodeType":"Return","src":"6403:19:1"}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"6225:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"6360:2:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"6386:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":285,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:1"},"scope":301,"src":"6329:100:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":299,"nodeType":"Block","src":"6601:37:1","statements":[{"expression":{"id":297,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"6618:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":296,"id":298,"nodeType":"Return","src":"6611:20:1"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"6435:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":300,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:1","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"6569:2:1"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":300,"src":"6595:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":294,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:1"},"scope":301,"src":"6545:93:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":302,"src":"2394:4246:1","usedErrors":[],"usedEvents":[147]}],"src":"113:6528:1"},"id":1},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1526],"Initializable":[301],"PausableUpgradeable":[429]},"id":430,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":303,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":430,"sourceUnit":1527,"src":"130:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":430,"sourceUnit":302,"src":"172:63:2","symbolAliases":[{"foreign":{"id":305,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"180:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":308,"name":"Initializable","nameLocations":["718:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"718:13:2"},"id":309,"nodeType":"InheritanceSpecifier","src":"718:13:2"},{"baseName":{"id":310,"name":"ContextUpgradeable","nameLocations":["733:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":1526,"src":"733:18:2"},"id":311,"nodeType":"InheritanceSpecifier","src":"733:18:2"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"237:439:2","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":429,"linearizedBaseContracts":[429,1526,301],"name":"PausableUpgradeable","nameLocation":"695:19:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"758:73:2","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":316,"name":"Paused","nameLocation":"842:6:2","nodeType":"EventDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"857:7:2","nodeType":"VariableDeclaration","scope":316,"src":"849:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"848:17:2"},"src":"836:30:2"},{"anonymous":false,"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"872:70:2","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":321,"name":"Unpaused","nameLocation":"953:8:2","nodeType":"EventDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"970:7:2","nodeType":"VariableDeclaration","scope":321,"src":"962:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"961:17:2"},"src":"947:32:2"},{"constant":false,"id":323,"mutability":"mutable","name":"_paused","nameLocation":"998:7:2","nodeType":"VariableDeclaration","scope":429,"src":"985:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":322,"name":"bool","nodeType":"ElementaryTypeName","src":"985:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":332,"nodeType":"Block","src":"1137:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":329,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1147:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":331,"nodeType":"ExpressionStatement","src":"1147:27:2"}]},"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"1012:67:2","text":" @dev Initializes the contract in unpaused state."},"id":333,"implemented":true,"kind":"function","modifiers":[{"id":327,"kind":"modifierInvocation","modifierName":{"id":326,"name":"onlyInitializing","nameLocations":["1120:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"1120:16:2"},"nodeType":"ModifierInvocation","src":"1120:16:2"}],"name":"__Pausable_init","nameLocation":"1093:15:2","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"1108:2:2"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[],"src":"1137:0:2"},"scope":429,"src":"1084:97:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":342,"nodeType":"Block","src":"1250:32:2","statements":[{"expression":{"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":338,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1260:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1270:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1260:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":341,"nodeType":"ExpressionStatement","src":"1260:15:2"}]},"id":343,"implemented":true,"kind":"function","modifiers":[{"id":336,"kind":"modifierInvocation","modifierName":{"id":335,"name":"onlyInitializing","nameLocations":["1233:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"1233:16:2"},"nodeType":"ModifierInvocation","src":"1233:16:2"}],"name":"__Pausable_init_unchained","nameLocation":"1196:25:2","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"1221:2:2"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"1250:0:2"},"scope":429,"src":"1187:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":350,"nodeType":"Block","src":"1493:47:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":346,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"1503:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1503:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"1503:19:2"},{"id":349,"nodeType":"PlaceholderStatement","src":"1532:1:2"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"1288:175:2","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":351,"name":"whenNotPaused","nameLocation":"1477:13:2","nodeType":"ModifierDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"1490:2:2"},"src":"1468:72:2","virtual":false,"visibility":"internal"},{"body":{"id":358,"nodeType":"Block","src":"1740:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":354,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"1750:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"1750:16:2"},{"id":357,"nodeType":"PlaceholderStatement","src":"1776:1:2"}]},"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"1546:167:2","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":359,"name":"whenPaused","nameLocation":"1727:10:2","nodeType":"ModifierDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"1737:2:2"},"src":"1718:66:2","virtual":false,"visibility":"internal"},{"body":{"id":367,"nodeType":"Block","src":"1932:31:2","statements":[{"expression":{"id":365,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1949:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":364,"id":366,"nodeType":"Return","src":"1942:14:2"}]},"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"1790:84:2","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":368,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1888:6:2","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"1894:2:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"1926:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"1926:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1925:6:2"},"scope":429,"src":"1879:84:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":379,"nodeType":"Block","src":"2082:55:2","statements":[{"expression":{"arguments":[{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2100:9:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":373,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"2101:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2111:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2092:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"2092:38:2"}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"1969:57:2","text":" @dev Throws if the contract is paused."},"id":380,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2040:17:2","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2057:2:2"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[],"src":"2082:0:2"},"scope":429,"src":"2031:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":390,"nodeType":"Block","src":"2257:58:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":385,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"2275:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2275:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2285:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2267:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"2267:41:2"}]},"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"2143:61:2","text":" @dev Throws if the contract is not paused."},"id":391,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2218:14:2","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"2232:2:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"2257:0:2"},"scope":429,"src":"2209:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":406,"nodeType":"Block","src":"2499:66:2","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"2509:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2519:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2509:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":400,"nodeType":"ExpressionStatement","src":"2509:14:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2545:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":401,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2538:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"EmitStatement","src":"2533:25:2"}]},"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"2321:124:2","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":407,"implemented":true,"kind":"function","modifiers":[{"id":395,"kind":"modifierInvocation","modifierName":{"id":394,"name":"whenNotPaused","nameLocations":["2485:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":351,"src":"2485:13:2"},"nodeType":"ModifierInvocation","src":"2485:13:2"}],"name":"_pause","nameLocation":"2459:6:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"2465:2:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"2499:0:2"},"scope":429,"src":"2450:115:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":422,"nodeType":"Block","src":"2745:69:2","statements":[{"expression":{"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":413,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"2755:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2765:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2755:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":416,"nodeType":"ExpressionStatement","src":"2755:15:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":418,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2794:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":417,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"2785:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"EmitStatement","src":"2780:27:2"}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"2571:121:2","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":423,"implemented":true,"kind":"function","modifiers":[{"id":411,"kind":"modifierInvocation","modifierName":{"id":410,"name":"whenPaused","nameLocations":["2734:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":359,"src":"2734:10:2"},"nodeType":"ModifierInvocation","src":"2734:10:2"}],"name":"_unpause","nameLocation":"2706:8:2","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"2714:2:2"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"2745:0:2"},"scope":429,"src":"2697:117:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"2820:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":428,"mutability":"mutable","name":"__gap","nameLocation":"3099:5:2","nodeType":"VariableDeclaration","scope":429,"src":"3079:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3079:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":427,"length":{"hexValue":"3439","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3087:2:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3079:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":430,"src":"677:2430:2","usedErrors":[],"usedEvents":[147,316,321]}],"src":"105:3003:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1526],"ERC20Upgradeable":[1042],"IERC20MetadataUpgradeable":[1145],"IERC20Upgradeable":[1120],"Initializable":[301]},"id":1043,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":431,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1043,"sourceUnit":1121,"src":"130:33:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1043,"sourceUnit":1146,"src":"164:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1043,"sourceUnit":1527,"src":"217:44:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1043,"sourceUnit":302,"src":"262:66:3","symbolAliases":[{"foreign":{"id":435,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"270:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":438,"name":"Initializable","nameLocations":["1661:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"1661:13:3"},"id":439,"nodeType":"InheritanceSpecifier","src":"1661:13:3"},{"baseName":{"id":440,"name":"ContextUpgradeable","nameLocations":["1676:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1526,"src":"1676:18:3"},"id":441,"nodeType":"InheritanceSpecifier","src":"1676:18:3"},{"baseName":{"id":442,"name":"IERC20Upgradeable","nameLocations":["1696:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1120,"src":"1696:17:3"},"id":443,"nodeType":"InheritanceSpecifier","src":"1696:17:3"},{"baseName":{"id":444,"name":"IERC20MetadataUpgradeable","nameLocations":["1715:25:3"],"nodeType":"IdentifierPath","referencedDeclaration":1145,"src":"1715:25:3"},"id":445,"nodeType":"InheritanceSpecifier","src":"1715:25:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"330:1301:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1042,"linearizedBaseContracts":[1042,1145,1120,1526,301],"name":"ERC20Upgradeable","nameLocation":"1641:16:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":449,"mutability":"mutable","name":"_balances","nameLocation":"1783:9:3","nodeType":"VariableDeclaration","scope":1042,"src":"1747:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":448,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1747:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":455,"mutability":"mutable","name":"_allowances","nameLocation":"1855:11:3","nodeType":"VariableDeclaration","scope":1042,"src":"1799:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":454,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"1807:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1799:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":453,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1818:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":457,"mutability":"mutable","name":"_totalSupply","nameLocation":"1889:12:3","nodeType":"VariableDeclaration","scope":1042,"src":"1873:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":459,"mutability":"mutable","name":"_name","nameLocation":"1923:5:3","nodeType":"VariableDeclaration","scope":1042,"src":"1908:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":458,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":461,"mutability":"mutable","name":"_symbol","nameLocation":"1949:7:3","nodeType":"VariableDeclaration","scope":1042,"src":"1934:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":460,"name":"string","nodeType":"ElementaryTypeName","src":"1934:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":476,"nodeType":"Block","src":"2231:55:3","statements":[{"expression":{"arguments":[{"id":472,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2264:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":473,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"2271:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":471,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2241:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2241:38:3"}]},"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1963:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":477,"implemented":true,"kind":"function","modifiers":[{"id":469,"kind":"modifierInvocation","modifierName":{"id":468,"name":"onlyInitializing","nameLocations":["2214:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"2214:16:3"},"nodeType":"ModifierInvocation","src":"2214:16:3"}],"name":"__ERC20_init","nameLocation":"2148:12:3","nodeType":"FunctionDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"name_","nameLocation":"2175:5:3","nodeType":"VariableDeclaration","scope":477,"src":"2161:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":463,"name":"string","nodeType":"ElementaryTypeName","src":"2161:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"symbol_","nameLocation":"2196:7:3","nodeType":"VariableDeclaration","scope":477,"src":"2182:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":465,"name":"string","nodeType":"ElementaryTypeName","src":"2182:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2160:44:3"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"2231:0:3"},"scope":1042,"src":"2139:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":494,"nodeType":"Block","src":"2394:57:3","statements":[{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"2404:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":487,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2412:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2404:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":489,"nodeType":"ExpressionStatement","src":"2404:13:3"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"2427:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":491,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2437:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2427:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":493,"nodeType":"ExpressionStatement","src":"2427:17:3"}]},"id":495,"implemented":true,"kind":"function","modifiers":[{"id":484,"kind":"modifierInvocation","modifierName":{"id":483,"name":"onlyInitializing","nameLocations":["2377:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"2377:16:3"},"nodeType":"ModifierInvocation","src":"2377:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2301:22:3","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"name_","nameLocation":"2338:5:3","nodeType":"VariableDeclaration","scope":495,"src":"2324:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":478,"name":"string","nodeType":"ElementaryTypeName","src":"2324:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"symbol_","nameLocation":"2359:7:3","nodeType":"VariableDeclaration","scope":495,"src":"2345:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":480,"name":"string","nodeType":"ElementaryTypeName","src":"2345:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2323:44:3"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2394:0:3"},"scope":1042,"src":"2292:159:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1132],"body":{"id":504,"nodeType":"Block","src":"2585:29:3","statements":[{"expression":{"id":502,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"2602:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":501,"id":503,"nodeType":"Return","src":"2595:12:3"}]},"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"2457:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2525:4:3","nodeType":"FunctionDefinition","overrides":{"id":498,"nodeType":"OverrideSpecifier","overrides":[],"src":"2552:8:3"},"parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2529:2:3"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":505,"src":"2570:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":499,"name":"string","nodeType":"ElementaryTypeName","src":"2570:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2569:15:3"},"scope":1042,"src":"2516:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1138],"body":{"id":514,"nodeType":"Block","src":"2798:31:3","statements":[{"expression":{"id":512,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"2815:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":511,"id":513,"nodeType":"Return","src":"2808:14:3"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2620:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":515,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2736:6:3","nodeType":"FunctionDefinition","overrides":{"id":508,"nodeType":"OverrideSpecifier","overrides":[],"src":"2765:8:3"},"parameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"2742:2:3"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":515,"src":"2783:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":509,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2782:15:3"},"scope":1042,"src":"2727:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1144],"body":{"id":524,"nodeType":"Block","src":"3527:26:3","statements":[{"expression":{"hexValue":"3138","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3544:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":521,"id":523,"nodeType":"Return","src":"3537:9:3"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"2835:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":525,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3471:8:3","nodeType":"FunctionDefinition","overrides":{"id":518,"nodeType":"OverrideSpecifier","overrides":[],"src":"3502:8:3"},"parameters":{"id":517,"nodeType":"ParameterList","parameters":[],"src":"3479:2:3"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":525,"src":"3520:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":519,"name":"uint8","nodeType":"ElementaryTypeName","src":"3520:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3519:7:3"},"scope":1042,"src":"3462:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1069],"body":{"id":534,"nodeType":"Block","src":"3683:36:3","statements":[{"expression":{"id":532,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"3700:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":531,"id":533,"nodeType":"Return","src":"3693:19:3"}]},"documentation":{"id":526,"nodeType":"StructuredDocumentation","src":"3559:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":535,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3622:11:3","nodeType":"FunctionDefinition","overrides":{"id":528,"nodeType":"OverrideSpecifier","overrides":[],"src":"3656:8:3"},"parameters":{"id":527,"nodeType":"ParameterList","parameters":[],"src":"3633:2:3"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":535,"src":"3674:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"3674:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3673:9:3"},"scope":1042,"src":"3613:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1077],"body":{"id":548,"nodeType":"Block","src":"3860:42:3","statements":[{"expression":{"baseExpression":{"id":544,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"3877:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":546,"indexExpression":{"id":545,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"3887:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":543,"id":547,"nodeType":"Return","src":"3870:25:3"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"3725:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":549,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3786:9:3","nodeType":"FunctionDefinition","overrides":{"id":540,"nodeType":"OverrideSpecifier","overrides":[],"src":"3833:8:3"},"parameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"account","nameLocation":"3804:7:3","nodeType":"VariableDeclaration","scope":549,"src":"3796:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"3796:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3795:17:3"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":549,"src":"3851:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"3851:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:9:3"},"scope":1042,"src":"3777:125:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1087],"body":{"id":573,"nodeType":"Block","src":"4183:104:3","statements":[{"assignments":[561],"declarations":[{"constant":false,"id":561,"mutability":"mutable","name":"owner","nameLocation":"4201:5:3","nodeType":"VariableDeclaration","scope":573,"src":"4193:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"4193:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":564,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":562,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"4209:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4209:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4193:28:3"},{"expression":{"arguments":[{"id":566,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4241:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":567,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"4248:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":568,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4252:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":565,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"4231:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":570,"nodeType":"ExpressionStatement","src":"4231:28:3"},{"expression":{"hexValue":"74727565","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4276:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":559,"id":572,"nodeType":"Return","src":"4269:11:3"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"3908:185:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4107:8:3","nodeType":"FunctionDefinition","overrides":{"id":556,"nodeType":"OverrideSpecifier","overrides":[],"src":"4159:8:3"},"parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"to","nameLocation":"4124:2:3","nodeType":"VariableDeclaration","scope":574,"src":"4116:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"4116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"amount","nameLocation":"4136:6:3","nodeType":"VariableDeclaration","scope":574,"src":"4128:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"4128:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:28:3"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"4177:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":557,"name":"bool","nodeType":"ElementaryTypeName","src":"4177:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4176:6:3"},"scope":1042,"src":"4098:189:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1097],"body":{"id":591,"nodeType":"Block","src":"4443:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":585,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4460:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":586,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"4472:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4460:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":589,"indexExpression":{"id":588,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4479:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4460:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":584,"id":590,"nodeType":"Return","src":"4453:34:3"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"4293:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":592,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4354:9:3","nodeType":"FunctionDefinition","overrides":{"id":581,"nodeType":"OverrideSpecifier","overrides":[],"src":"4416:8:3"},"parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"owner","nameLocation":"4372:5:3","nodeType":"VariableDeclaration","scope":592,"src":"4364:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"spender","nameLocation":"4387:7:3","nodeType":"VariableDeclaration","scope":592,"src":"4379:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"4379:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4363:32:3"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":592,"src":"4434:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4434:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4433:9:3"},"scope":1042,"src":"4345:149:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1107],"body":{"id":616,"nodeType":"Block","src":"4891:108:3","statements":[{"assignments":[604],"declarations":[{"constant":false,"id":604,"mutability":"mutable","name":"owner","nameLocation":"4909:5:3","nodeType":"VariableDeclaration","scope":616,"src":"4901:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":607,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":605,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"4917:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4901:28:3"},{"expression":{"arguments":[{"id":609,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4948:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"4955:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4964:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":608,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"4939:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4939:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"4939:32:3"},{"expression":{"hexValue":"74727565","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4988:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":602,"id":615,"nodeType":"Return","src":"4981:11:3"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"4500:297:3","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4811:7:3","nodeType":"FunctionDefinition","overrides":{"id":599,"nodeType":"OverrideSpecifier","overrides":[],"src":"4867:8:3"},"parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"spender","nameLocation":"4827:7:3","nodeType":"VariableDeclaration","scope":617,"src":"4819:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"4819:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"4844:6:3","nodeType":"VariableDeclaration","scope":617,"src":"4836:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4836:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4818:33:3"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"4885:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":600,"name":"bool","nodeType":"ElementaryTypeName","src":"4885:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4884:6:3"},"scope":1042,"src":"4802:197:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1119],"body":{"id":649,"nodeType":"Block","src":"5664:153:3","statements":[{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"spender","nameLocation":"5682:7:3","nodeType":"VariableDeclaration","scope":649,"src":"5674:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"5674:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":632,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"5692:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5692:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5674:30:3"},{"expression":{"arguments":[{"id":636,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5730:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5736:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5745:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":635,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5714:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5714:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":640,"nodeType":"ExpressionStatement","src":"5714:38:3"},{"expression":{"arguments":[{"id":642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5772:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5778:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5782:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":641,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"5762:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5762:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":646,"nodeType":"ExpressionStatement","src":"5762:27:3"},{"expression":{"hexValue":"74727565","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5806:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":629,"id":648,"nodeType":"Return","src":"5799:11:3"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"5005:551:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":650,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5570:12:3","nodeType":"FunctionDefinition","overrides":{"id":626,"nodeType":"OverrideSpecifier","overrides":[],"src":"5640:8:3"},"parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"from","nameLocation":"5591:4:3","nodeType":"VariableDeclaration","scope":650,"src":"5583:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"5583:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"to","nameLocation":"5605:2:3","nodeType":"VariableDeclaration","scope":650,"src":"5597:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"amount","nameLocation":"5617:6:3","nodeType":"VariableDeclaration","scope":650,"src":"5609:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"5609:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5582:42:3"},"returnParameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":650,"src":"5658:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":627,"name":"bool","nodeType":"ElementaryTypeName","src":"5658:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5657:6:3"},"scope":1042,"src":"5561:256:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":678,"nodeType":"Block","src":"6306:140:3","statements":[{"assignments":[661],"declarations":[{"constant":false,"id":661,"mutability":"mutable","name":"owner","nameLocation":"6324:5:3","nodeType":"VariableDeclaration","scope":678,"src":"6316:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"6316:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":664,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":662,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"6332:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6332:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6316:28:3"},{"expression":{"arguments":[{"id":666,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"6363:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"6370:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":669,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"6389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"6396:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":668,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"6379:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":672,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6407:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6379:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":665,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"6354:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"ExpressionStatement","src":"6354:64:3"},{"expression":{"hexValue":"74727565","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6435:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":659,"id":677,"nodeType":"Return","src":"6428:11:3"}]},"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"5823:384:3","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":679,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6221:17:3","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"spender","nameLocation":"6247:7:3","nodeType":"VariableDeclaration","scope":679,"src":"6239:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"6239:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"addedValue","nameLocation":"6264:10:3","nodeType":"VariableDeclaration","scope":679,"src":"6256:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"6256:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6238:37:3"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":679,"src":"6300:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":657,"name":"bool","nodeType":"ElementaryTypeName","src":"6300:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6299:6:3"},"scope":1042,"src":"6212:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":719,"nodeType":"Block","src":"7032:328:3","statements":[{"assignments":[690],"declarations":[{"constant":false,"id":690,"mutability":"mutable","name":"owner","nameLocation":"7050:5:3","nodeType":"VariableDeclaration","scope":719,"src":"7042:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":693,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":691,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"7058:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7058:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7042:28:3"},{"assignments":[695],"declarations":[{"constant":false,"id":695,"mutability":"mutable","name":"currentAllowance","nameLocation":"7088:16:3","nodeType":"VariableDeclaration","scope":719,"src":"7080:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"7080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":700,"initialValue":{"arguments":[{"id":697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"7117:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7124:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":696,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"7107:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7107:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7080:52:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7150:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":703,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"7170:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7150:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7187:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7142:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7142:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"ExpressionStatement","src":"7142:85:3"},{"id":716,"nodeType":"UncheckedBlock","src":"7237:95:3","statements":[{"expression":{"arguments":[{"id":709,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"7270:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7277:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"7286:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":712,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"7305:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7286:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":708,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7261:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"7261:60:3"}]},{"expression":{"hexValue":"74727565","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7349:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":688,"id":718,"nodeType":"Return","src":"7342:11:3"}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"6452:476:3","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":720,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6942:17:3","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"spender","nameLocation":"6968:7:3","nodeType":"VariableDeclaration","scope":720,"src":"6960:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"6960:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"subtractedValue","nameLocation":"6985:15:3","nodeType":"VariableDeclaration","scope":720,"src":"6977:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"6977:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6959:42:3"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":720,"src":"7026:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":686,"name":"bool","nodeType":"ElementaryTypeName","src":"7026:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7025:6:3"},"scope":1042,"src":"6933:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":796,"nodeType":"Block","src":"7892:710:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"7910:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7926:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7918:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"7918:7:3","typeDescriptions":{}}},"id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7910:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7902:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7902:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"ExpressionStatement","src":"7902:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":741,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"7988:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8002:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7994:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:3","typeDescriptions":{}}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7994:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7988:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7980:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7980:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"ExpressionStatement","src":"7980:64:3"},{"expression":{"arguments":[{"id":751,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8076:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":752,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"8082:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8086:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"8055:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8055:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"8055:38:3"},{"assignments":[757],"declarations":[{"constant":false,"id":757,"mutability":"mutable","name":"fromBalance","nameLocation":"8112:11:3","nodeType":"VariableDeclaration","scope":796,"src":"8104:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"8104:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":761,"initialValue":{"baseExpression":{"id":758,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"8126:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":760,"indexExpression":{"id":759,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8136:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8126:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8104:37:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8159:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":764,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8174:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8159:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8182:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8151:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"8151:72:3"},{"id":783,"nodeType":"UncheckedBlock","src":"8233:273:3","statements":[{"expression":{"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":769,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"8257:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":771,"indexExpression":{"id":770,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8267:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8257:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":772,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8275:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8289:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8275:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8257:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":776,"nodeType":"ExpressionStatement","src":"8257:38:3"},{"expression":{"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":777,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"8472:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":779,"indexExpression":{"id":778,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"8482:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8472:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":780,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8489:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8472:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":782,"nodeType":"ExpressionStatement","src":"8472:23:3"}]},{"eventCall":{"arguments":[{"id":785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8530:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"8536:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8540:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":784,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8521:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"EmitStatement","src":"8516:31:3"},{"expression":{"arguments":[{"id":791,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8578:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"8584:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"8588:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"8558:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":795,"nodeType":"ExpressionStatement","src":"8558:37:3"}]},"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"7366:443:3","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":797,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7823:9:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"from","nameLocation":"7841:4:3","nodeType":"VariableDeclaration","scope":797,"src":"7833:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"7833:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"to","nameLocation":"7855:2:3","nodeType":"VariableDeclaration","scope":797,"src":"7847:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"7847:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"amount","nameLocation":"7867:6:3","nodeType":"VariableDeclaration","scope":797,"src":"7859:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"7859:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7832:42:3"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[],"src":"7892:0:3"},"scope":1042,"src":"7814:788:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"8943:470:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"8961:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8980:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8972:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"8972:7:3","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8972:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8961:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8984:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8953:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8953:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"8953:65:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9058:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9050:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"9050:7:3","typeDescriptions":{}}},"id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9050:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"9062:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9071:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"9029:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"9029:49:3"},{"expression":{"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":824,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"9089:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":825,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9105:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9089:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":827,"nodeType":"ExpressionStatement","src":"9089:22:3"},{"id":834,"nodeType":"UncheckedBlock","src":"9121:175:3","statements":[{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":828,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"9257:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":830,"indexExpression":{"id":829,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"9267:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9257:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9279:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9257:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":833,"nodeType":"ExpressionStatement","src":"9257:28:3"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9319:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"9319:7:3","typeDescriptions":{}}},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9319:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"9331:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9340:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":835,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"9310:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9310:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"EmitStatement","src":"9305:42:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9386:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9378:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"9378:7:3","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9378:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":849,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"9390:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9399:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":844,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"9358:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9358:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"9358:48:3"}]},"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"8608:265:3","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8887:5:3","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"account","nameLocation":"8901:7:3","nodeType":"VariableDeclaration","scope":854,"src":"8893:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"8893:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"amount","nameLocation":"8918:6:3","nodeType":"VariableDeclaration","scope":854,"src":"8910:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"8910:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8892:33:3"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"8943:0:3"},"scope":1042,"src":"8878:535:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":925,"nodeType":"Block","src":"9798:594:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":863,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"9816:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9835:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9827:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"9827:7:3","typeDescriptions":{}}},"id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9827:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9816:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9839:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":862,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9808:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9808:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"9808:67:3"},{"expression":{"arguments":[{"id":873,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"9907:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9916:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"9916:7:3","typeDescriptions":{}}},"id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9916:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":878,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"9928:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":872,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"9886:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9886:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"9886:49:3"},{"assignments":[882],"declarations":[{"constant":false,"id":882,"mutability":"mutable","name":"accountBalance","nameLocation":"9954:14:3","nodeType":"VariableDeclaration","scope":925,"src":"9946:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"9946:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":886,"initialValue":{"baseExpression":{"id":883,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"9971:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":885,"indexExpression":{"id":884,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"9981:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9971:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9946:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"10007:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":889,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10025:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10007:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10033:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9999:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"9999:71:3"},{"id":906,"nodeType":"UncheckedBlock","src":"10080:194:3","statements":[{"expression":{"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":894,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"10104:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":896,"indexExpression":{"id":895,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10114:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10104:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"10125:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10142:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10125:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10104:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":901,"nodeType":"ExpressionStatement","src":"10104:44:3"},{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":902,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"10241:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":903,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10257:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10241:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":905,"nodeType":"ExpressionStatement","src":"10241:22:3"}]},{"eventCall":{"arguments":[{"id":908,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10298:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10307:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"10307:7:3","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10307:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10319:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":907,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"10289:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10289:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"EmitStatement","src":"10284:42:3"},{"expression":{"arguments":[{"id":917,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10357:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10374:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10366:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"10366:7:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10366:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10378:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":916,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"10337:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10337:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"10337:48:3"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"9419:309:3","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9742:5:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"account","nameLocation":"9756:7:3","nodeType":"VariableDeclaration","scope":926,"src":"9748:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"9748:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"amount","nameLocation":"9773:6:3","nodeType":"VariableDeclaration","scope":926,"src":"9765:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"9765:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9747:33:3"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"9798:0:3"},"scope":1042,"src":"9733:659:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"10898:257:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":937,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"10916:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10933:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10925:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"10925:7:3","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10925:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10916:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10937:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":936,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10908:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10908:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"10908:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":947,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"10994:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11005:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"11005:7:3","typeDescriptions":{}}},"id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11005:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10994:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11017:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10986:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10986:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"10986:68:3"},{"expression":{"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":956,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"11065:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":959,"indexExpression":{"id":957,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"11077:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11065:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":960,"indexExpression":{"id":958,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"11084:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11065:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":961,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"11095:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11065:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":963,"nodeType":"ExpressionStatement","src":"11065:36:3"},{"eventCall":{"arguments":[{"id":965,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"11125:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"11132:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"11141:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":964,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"11116:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11116:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"EmitStatement","src":"11111:37:3"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"10398:412:3","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10824:8:3","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"owner","nameLocation":"10841:5:3","nodeType":"VariableDeclaration","scope":971,"src":"10833:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"10833:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"spender","nameLocation":"10856:7:3","nodeType":"VariableDeclaration","scope":971,"src":"10848:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"10848:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"amount","nameLocation":"10873:6:3","nodeType":"VariableDeclaration","scope":971,"src":"10865:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"10865:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10832:48:3"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"10898:0:3"},"scope":1042,"src":"10815:340:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"11526:321:3","statements":[{"assignments":[982],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"currentAllowance","nameLocation":"11544:16:3","nodeType":"VariableDeclaration","scope":1013,"src":"11536:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"11536:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":987,"initialValue":{"arguments":[{"id":984,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11573:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11580:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":983,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"11563:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11563:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11536:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":988,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11602:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11627:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"11627:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":989,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11622:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11622:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11636:3:3","memberName":"max","nodeType":"MemberAccess","src":"11622:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11602:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"IfStatement","src":"11598:243:3","trueBody":{"id":1011,"nodeType":"Block","src":"11641:200:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11663:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":997,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"11683:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11663:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11691:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11655:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"ExpressionStatement","src":"11655:68:3"},{"id":1010,"nodeType":"UncheckedBlock","src":"11737:94:3","statements":[{"expression":{"arguments":[{"id":1003,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11774:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"11781:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1005,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11790:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1006,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"11809:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11790:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1002,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"11765:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11765:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"ExpressionStatement","src":"11765:51:3"}]}]}}]},"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"11161:270:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11445:15:3","nodeType":"FunctionDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"owner","nameLocation":"11469:5:3","nodeType":"VariableDeclaration","scope":1014,"src":"11461:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"11461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"spender","nameLocation":"11484:7:3","nodeType":"VariableDeclaration","scope":1014,"src":"11476:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"11476:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"amount","nameLocation":"11501:6:3","nodeType":"VariableDeclaration","scope":1014,"src":"11493:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11460:48:3"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"11526:0:3"},"scope":1042,"src":"11436:411:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1024,"nodeType":"Block","src":"12520:2:3","statements":[]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"11853:573:3","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1025,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12440:20:3","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"from","nameLocation":"12469:4:3","nodeType":"VariableDeclaration","scope":1025,"src":"12461:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"12461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"to","nameLocation":"12483:2:3","nodeType":"VariableDeclaration","scope":1025,"src":"12475:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"12475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"amount","nameLocation":"12495:6:3","nodeType":"VariableDeclaration","scope":1025,"src":"12487:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"12487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12460:42:3"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"12520:0:3"},"scope":1042,"src":"12431:91:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1035,"nodeType":"Block","src":"13198:2:3","statements":[]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"12528:577:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13119:19:3","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"from","nameLocation":"13147:4:3","nodeType":"VariableDeclaration","scope":1036,"src":"13139:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"13139:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"to","nameLocation":"13161:2:3","nodeType":"VariableDeclaration","scope":1036,"src":"13153:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"13153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"amount","nameLocation":"13173:6:3","nodeType":"VariableDeclaration","scope":1036,"src":"13165:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"13165:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13138:42:3"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"13198:0:3"},"scope":1042,"src":"13110:90:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"13206:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1041,"mutability":"mutable","name":"__gap","nameLocation":"13485:5:3","nodeType":"VariableDeclaration","scope":1042,"src":"13465:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"13465:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1040,"length":{"hexValue":"3435","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13473:2:3","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13465:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":1043,"src":"1632:11861:3","usedErrors":[],"usedEvents":[147,1054,1063]}],"src":"105:13389:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[1120]},"id":1121,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1044,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1120,"linearizedBaseContracts":[1120],"name":"IERC20Upgradeable","nameLocation":"212:17:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1046,"nodeType":"StructuredDocumentation","src":"236:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1054,"name":"Transfer","nameLocation":"405:8:4","nodeType":"EventDefinition","parameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:4","nodeType":"VariableDeclaration","scope":1054,"src":"414:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1050,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:4","nodeType":"VariableDeclaration","scope":1054,"src":"436:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:4","nodeType":"VariableDeclaration","scope":1054,"src":"456:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:4"},"src":"399:72:4"},{"anonymous":false,"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"477:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1063,"name":"Approval","nameLocation":"636:8:4","nodeType":"EventDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:4","nodeType":"VariableDeclaration","scope":1063,"src":"645:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:4","nodeType":"VariableDeclaration","scope":1063,"src":"668:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1058,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1061,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:4","nodeType":"VariableDeclaration","scope":1063,"src":"693:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:4"},"src":"630:78:4"},{"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"714:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1069,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:4","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"805:2:4"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1069,"src":"831:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:4"},"scope":1120,"src":"785:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"846:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1077,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:4","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"account","nameLocation":"950:7:4","nodeType":"VariableDeclaration","scope":1077,"src":"942:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:4"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"982:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:4"},"scope":1120,"src":"923:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"997:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1087,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":1087,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"amount","nameLocation":"1242:6:4","nodeType":"VariableDeclaration","scope":1087,"src":"1234:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:4"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1087,"src":"1268:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:4"},"scope":1120,"src":"1204:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"1280:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1097,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:4","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"owner","nameLocation":"1576:5:4","nodeType":"VariableDeclaration","scope":1097,"src":"1568:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"spender","nameLocation":"1591:7:4","nodeType":"VariableDeclaration","scope":1097,"src":"1583:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:4"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1097,"src":"1623:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:4"},"scope":1120,"src":"1549:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"1638:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1107,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:4","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"spender","nameLocation":"2310:7:4","nodeType":"VariableDeclaration","scope":1107,"src":"2302:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"amount","nameLocation":"2327:6:4","nodeType":"VariableDeclaration","scope":1107,"src":"2319:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:4"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1107,"src":"2353:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1104,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:4"},"scope":1120,"src":"2285:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"2365:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1119,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:4","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"from","nameLocation":"2687:4:4","nodeType":"VariableDeclaration","scope":1119,"src":"2679:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1112,"mutability":"mutable","name":"to","nameLocation":"2701:2:4","nodeType":"VariableDeclaration","scope":1119,"src":"2693:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"amount","nameLocation":"2713:6:4","nodeType":"VariableDeclaration","scope":1119,"src":"2705:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:42:4"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1119,"src":"2739:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:4"},"scope":1120,"src":"2657:88:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1121,"src":"202:2545:4","usedErrors":[],"usedEvents":[1054,1063]}],"src":"106:2642:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[1145],"IERC20Upgradeable":[1120]},"id":1146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1122,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":1123,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1146,"sourceUnit":1121,"src":"135:34:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1125,"name":"IERC20Upgradeable","nameLocations":["327:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":1120,"src":"327:17:5"},"id":1126,"nodeType":"InheritanceSpecifier","src":"327:17:5"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"171:116:5","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1145,"linearizedBaseContracts":[1145,1120],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"351:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1132,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:5","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[],"src":"423:2:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"449:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1129,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:5"},"scope":1145,"src":"410:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"470:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1138,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:5","nodeType":"FunctionDefinition","parameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"546:2:5"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1138,"src":"572:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1135,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:5"},"scope":1145,"src":"531:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"593:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1144,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:5","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[],"src":"680:2:5"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1144,"src":"706:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1141,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:5"},"scope":1145,"src":"663:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1146,"src":"288:427:5","usedErrors":[],"usedEvents":[1054,1063]}],"src":"110:606:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1475]},"id":1476,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1147,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1475,"linearizedBaseContracts":[1475],"name":"AddressUpgradeable","nameLocation":"202:18:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1162,"nodeType":"Block","src":"1489:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1156,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"1713:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:6","memberName":"code","nodeType":"MemberAccess","src":"1713:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:6","memberName":"length","nodeType":"MemberAccess","src":"1713:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1155,"id":1161,"nodeType":"Return","src":"1706:30:6"}]},"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"227:1191:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:6","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"account","nameLocation":"1451:7:6","nodeType":"VariableDeclaration","scope":1163,"src":"1443:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:6"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1163,"src":"1483:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1153,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:6"},"scope":1475,"src":"1423:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1196,"nodeType":"Block","src":"2729:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1174,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1475","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1475","typeString":"library AddressUpgradeable"}],"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:6","typeDescriptions":{}}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1177,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2772:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1171,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"ExpressionStatement","src":"2739:73:6"},{"assignments":[1183,null],"declarations":[{"constant":false,"id":1183,"mutability":"mutable","name":"success","nameLocation":"2829:7:6","nodeType":"VariableDeclaration","scope":1196,"src":"2824:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1182,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1190,"initialValue":{"arguments":[{"hexValue":"","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1184,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"2842:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:6","memberName":"call","nodeType":"MemberAccess","src":"2842:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1186,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"2864:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:6"},{"expression":{"arguments":[{"id":1192,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"2893:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"2885:78:6"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"1749:904:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:6","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:6","nodeType":"VariableDeclaration","scope":1197,"src":"2677:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"amount","nameLocation":"2712:6:6","nodeType":"VariableDeclaration","scope":1197,"src":"2704:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:6"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"2729:0:6"},"scope":1475,"src":"2658:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"3801:96:6","statements":[{"expression":{"arguments":[{"id":1208,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"3840:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"3848:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1207,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1255,1299],"referencedDeclaration":1299,"src":"3818:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1206,"id":1213,"nodeType":"Return","src":"3811:79:6"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2976:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:6","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"target","nameLocation":"3742:6:6","nodeType":"VariableDeclaration","scope":1215,"src":"3734:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"data","nameLocation":"3763:4:6","nodeType":"VariableDeclaration","scope":1215,"src":"3750:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1201,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:6"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3787:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1204,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:6"},"scope":1475,"src":"3712:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1234,"nodeType":"Block","src":"4266:76:6","statements":[{"expression":{"arguments":[{"id":1228,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"4305:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1229,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"4313:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1231,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"4322:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1227,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1255,1299],"referencedDeclaration":1299,"src":"4283:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1226,"id":1233,"nodeType":"Return","src":"4276:59:6"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3903:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1235,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:6","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"target","nameLocation":"4158:6:6","nodeType":"VariableDeclaration","scope":1235,"src":"4150:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"data","nameLocation":"4187:4:6","nodeType":"VariableDeclaration","scope":1235,"src":"4174:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1219,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:6","nodeType":"VariableDeclaration","scope":1235,"src":"4201:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1221,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:6"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"4252:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1224,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:6"},"scope":1475,"src":"4119:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1254,"nodeType":"Block","src":"4817:111:6","statements":[{"expression":{"arguments":[{"id":1248,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4856:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1249,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4864:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"4870:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1247,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1255,1299],"referencedDeclaration":1299,"src":"4834:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1246,"id":1253,"nodeType":"Return","src":"4827:94:6"}]},"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"4348:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1255,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:6","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"target","nameLocation":"4743:6:6","nodeType":"VariableDeclaration","scope":1255,"src":"4735:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"data","nameLocation":"4764:4:6","nodeType":"VariableDeclaration","scope":1255,"src":"4751:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1239,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"4778:5:6","nodeType":"VariableDeclaration","scope":1255,"src":"4770:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:6"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1255,"src":"4803:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1244,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:6"},"scope":1475,"src":"4704:224:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1298,"nodeType":"Block","src":"5355:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1272,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1475","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1475","typeString":"library AddressUpgradeable"}],"id":1271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:6","typeDescriptions":{}}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"5398:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1279,"nodeType":"ExpressionStatement","src":"5365:81:6"},{"assignments":[1281,1283],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"success","nameLocation":"5462:7:6","nodeType":"VariableDeclaration","scope":1298,"src":"5457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1280,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:6","nodeType":"VariableDeclaration","scope":1298,"src":"5471:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1282,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1290,"initialValue":{"arguments":[{"id":1288,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"5524:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1284,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"5498:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:6","memberName":"call","nodeType":"MemberAccess","src":"5498:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"5517:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:6"},{"expression":{"arguments":[{"id":1292,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"5573:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"5581:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1294,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"5590:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1295,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"5602:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1291,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"5546:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1268,"id":1297,"nodeType":"Return","src":"5539:76:6"}]},"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"4934:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1299,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:6","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"target","nameLocation":"5224:6:6","nodeType":"VariableDeclaration","scope":1299,"src":"5216:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"data","nameLocation":"5253:4:6","nodeType":"VariableDeclaration","scope":1299,"src":"5240:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1259,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"value","nameLocation":"5275:5:6","nodeType":"VariableDeclaration","scope":1299,"src":"5267:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:6","nodeType":"VariableDeclaration","scope":1299,"src":"5290:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1263,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:6"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1299,"src":"5341:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1266,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:6"},"scope":1475,"src":"5176:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1315,"nodeType":"Block","src":"5899:97:6","statements":[{"expression":{"arguments":[{"id":1310,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"5935:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1311,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"5943:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1309,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1316,1345],"referencedDeclaration":1345,"src":"5916:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1308,"id":1314,"nodeType":"Return","src":"5909:80:6"}]},"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"5628:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:6","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"target","nameLocation":"5835:6:6","nodeType":"VariableDeclaration","scope":1316,"src":"5827:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"data","nameLocation":"5856:4:6","nodeType":"VariableDeclaration","scope":1316,"src":"5843:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:6"},"returnParameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1316,"src":"5885:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1306,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:6"},"scope":1475,"src":"5799:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1344,"nodeType":"Block","src":"6338:168:6","statements":[{"assignments":[1329,1331],"declarations":[{"constant":false,"id":1329,"mutability":"mutable","name":"success","nameLocation":"6354:7:6","nodeType":"VariableDeclaration","scope":1344,"src":"6349:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1328,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:6","nodeType":"VariableDeclaration","scope":1344,"src":"6363:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1330,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1336,"initialValue":{"arguments":[{"id":1334,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"6408:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1332,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6390:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:6"},{"expression":{"arguments":[{"id":1338,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6457:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1339,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6465:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1340,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6474:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1341,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"6486:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1337,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6430:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1327,"id":1343,"nodeType":"Return","src":"6423:76:6"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"6002:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:6","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"target","nameLocation":"6225:6:6","nodeType":"VariableDeclaration","scope":1345,"src":"6217:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"data","nameLocation":"6254:4:6","nodeType":"VariableDeclaration","scope":1345,"src":"6241:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:6","nodeType":"VariableDeclaration","scope":1345,"src":"6268:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1322,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:6"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1345,"src":"6324:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1325,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:6"},"scope":1475,"src":"6180:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"6782:101:6","statements":[{"expression":{"arguments":[{"id":1356,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6820:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"6828:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1355,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1362,1391],"referencedDeclaration":1391,"src":"6799:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1354,"id":1360,"nodeType":"Return","src":"6792:84:6"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"6512:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:6","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"target","nameLocation":"6723:6:6","nodeType":"VariableDeclaration","scope":1362,"src":"6715:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"data","nameLocation":"6744:4:6","nodeType":"VariableDeclaration","scope":1362,"src":"6731:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1349,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:6"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"6768:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1352,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:6"},"scope":1475,"src":"6685:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1390,"nodeType":"Block","src":"7224:170:6","statements":[{"assignments":[1375,1377],"declarations":[{"constant":false,"id":1375,"mutability":"mutable","name":"success","nameLocation":"7240:7:6","nodeType":"VariableDeclaration","scope":1390,"src":"7235:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1374,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:6","nodeType":"VariableDeclaration","scope":1390,"src":"7249:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1376,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1382,"initialValue":{"arguments":[{"id":1380,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7296:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1378,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"7276:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:6"},{"expression":{"arguments":[{"id":1384,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"7345:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1385,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"7353:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1386,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"7362:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1387,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7374:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1383,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"7318:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1373,"id":1389,"nodeType":"Return","src":"7311:76:6"}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"6889:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:6","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"target","nameLocation":"7116:6:6","nodeType":"VariableDeclaration","scope":1391,"src":"7108:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"data","nameLocation":"7145:4:6","nodeType":"VariableDeclaration","scope":1391,"src":"7132:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:6","nodeType":"VariableDeclaration","scope":1391,"src":"7159:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1368,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:6"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1391,"src":"7210:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1371,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:6"},"scope":1475,"src":"7069:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1429,"nodeType":"Block","src":"7876:434:6","statements":[{"condition":{"id":1405,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"7890:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1427,"nodeType":"Block","src":"8246:58:6","statements":[{"expression":{"arguments":[{"id":1423,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"8268:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1424,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"8280:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1422,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"8260:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"ExpressionStatement","src":"8260:33:6"}]},"id":1428,"nodeType":"IfStatement","src":"7886:418:6","trueBody":{"id":1421,"nodeType":"Block","src":"7899:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1406,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"7917:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:6","memberName":"length","nodeType":"MemberAccess","src":"7917:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"7913:286:6","trueBody":{"id":1417,"nodeType":"Block","src":"7941:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1412,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"8143:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1411,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"8132:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"ExpressionStatement","src":"8124:60:6"}]}},{"expression":{"id":1419,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"8219:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1404,"id":1420,"nodeType":"Return","src":"8212:17:6"}]}}]},"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"7400:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:6","nodeType":"FunctionDefinition","parameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"target","nameLocation":"7735:6:6","nodeType":"VariableDeclaration","scope":1430,"src":"7727:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"success","nameLocation":"7756:7:6","nodeType":"VariableDeclaration","scope":1430,"src":"7751:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1395,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:6","nodeType":"VariableDeclaration","scope":1430,"src":"7773:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:6","nodeType":"VariableDeclaration","scope":1430,"src":"7806:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1399,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:6"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1430,"src":"7862:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1402,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:6"},"scope":1475,"src":"7682:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1453,"nodeType":"Block","src":"8691:135:6","statements":[{"condition":{"id":1442,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"8705:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1451,"nodeType":"Block","src":"8762:58:6","statements":[{"expression":{"arguments":[{"id":1447,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"8784:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1448,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"8796:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1446,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"8776:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"ExpressionStatement","src":"8776:33:6"}]},"id":1452,"nodeType":"IfStatement","src":"8701:119:6","trueBody":{"id":1445,"nodeType":"Block","src":"8714:42:6","statements":[{"expression":{"id":1443,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"8735:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1441,"id":1444,"nodeType":"Return","src":"8728:17:6"}]}}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"8316:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:6","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"success","nameLocation":"8571:7:6","nodeType":"VariableDeclaration","scope":1454,"src":"8566:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1432,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:6","nodeType":"VariableDeclaration","scope":1454,"src":"8588:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1434,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:6","nodeType":"VariableDeclaration","scope":1454,"src":"8621:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1436,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:6"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1454,"src":"8677:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1439,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:6"},"scope":1475,"src":"8531:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1473,"nodeType":"Block","src":"8915:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1461,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8991:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:6","memberName":"length","nodeType":"MemberAccess","src":"8991:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1471,"nodeType":"Block","src":"9321:45:6","statements":[{"expression":{"arguments":[{"id":1468,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"9342:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1467,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"9335:20:6"}]},"id":1472,"nodeType":"IfStatement","src":"8987:379:6","trueBody":{"id":1466,"nodeType":"Block","src":"9014:301:6","statements":[{"AST":{"nativeSrc":"9172:133:6","nodeType":"YulBlock","src":"9172:133:6","statements":[{"nativeSrc":"9190:40:6","nodeType":"YulVariableDeclaration","src":"9190:40:6","value":{"arguments":[{"name":"returndata","nativeSrc":"9219:10:6","nodeType":"YulIdentifier","src":"9219:10:6"}],"functionName":{"name":"mload","nativeSrc":"9213:5:6","nodeType":"YulIdentifier","src":"9213:5:6"},"nativeSrc":"9213:17:6","nodeType":"YulFunctionCall","src":"9213:17:6"},"variables":[{"name":"returndata_size","nativeSrc":"9194:15:6","nodeType":"YulTypedName","src":"9194:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9258:2:6","nodeType":"YulLiteral","src":"9258:2:6","type":"","value":"32"},{"name":"returndata","nativeSrc":"9262:10:6","nodeType":"YulIdentifier","src":"9262:10:6"}],"functionName":{"name":"add","nativeSrc":"9254:3:6","nodeType":"YulIdentifier","src":"9254:3:6"},"nativeSrc":"9254:19:6","nodeType":"YulFunctionCall","src":"9254:19:6"},{"name":"returndata_size","nativeSrc":"9275:15:6","nodeType":"YulIdentifier","src":"9275:15:6"}],"functionName":{"name":"revert","nativeSrc":"9247:6:6","nodeType":"YulIdentifier","src":"9247:6:6"},"nativeSrc":"9247:44:6","nodeType":"YulFunctionCall","src":"9247:44:6"},"nativeSrc":"9247:44:6","nodeType":"YulExpressionStatement","src":"9247:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1456,"isOffset":false,"isSlot":false,"src":"9219:10:6","valueSize":1},{"declaration":1456,"isOffset":false,"isSlot":false,"src":"9262:10:6","valueSize":1}],"id":1465,"nodeType":"InlineAssembly","src":"9163:142:6"}]}}]},"id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:6","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:6","nodeType":"VariableDeclaration","scope":1474,"src":"8849:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1455,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:6","nodeType":"VariableDeclaration","scope":1474,"src":"8874:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1457,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:6"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[],"src":"8915:0:6"},"scope":1475,"src":"8832:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1476,"src":"194:9180:6","usedErrors":[],"usedEvents":[]}],"src":"101:9274:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1526],"Initializable":[301]},"id":1527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1477,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1527,"sourceUnit":302,"src":"125:63:7","symbolAliases":[{"foreign":{"id":1478,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"133:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1481,"name":"Initializable","nameLocations":["727:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"727:13:7"},"id":1482,"nodeType":"InheritanceSpecifier","src":"727:13:7"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"190:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1526,"linearizedBaseContracts":[1526,301],"name":"ContextUpgradeable","nameLocation":"705:18:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1487,"nodeType":"Block","src":"799:7:7","statements":[]},"id":1488,"implemented":true,"kind":"function","modifiers":[{"id":1485,"kind":"modifierInvocation","modifierName":{"id":1484,"name":"onlyInitializing","nameLocations":["782:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"782:16:7"},"nodeType":"ModifierInvocation","src":"782:16:7"}],"name":"__Context_init","nameLocation":"756:14:7","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[],"src":"770:2:7"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[],"src":"799:0:7"},"scope":1526,"src":"747:59:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1493,"nodeType":"Block","src":"874:7:7","statements":[]},"id":1494,"implemented":true,"kind":"function","modifiers":[{"id":1491,"kind":"modifierInvocation","modifierName":{"id":1490,"name":"onlyInitializing","nameLocations":["857:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"857:16:7"},"nodeType":"ModifierInvocation","src":"857:16:7"}],"name":"__Context_init_unchained","nameLocation":"821:24:7","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[],"src":"845:2:7"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"874:0:7"},"scope":1526,"src":"812:69:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"948:34:7","statements":[{"expression":{"expression":{"id":1499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:7","memberName":"sender","nodeType":"MemberAccess","src":"965:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1498,"id":1501,"nodeType":"Return","src":"958:17:7"}]},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:7","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"905:2:7"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"939:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:7"},"scope":1526,"src":"886:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1511,"nodeType":"Block","src":"1055:32:7","statements":[{"expression":{"expression":{"id":1508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:7","memberName":"data","nodeType":"MemberAccess","src":"1072:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1507,"id":1510,"nodeType":"Return","src":"1065:15:7"}]},"id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:7","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"1005:2:7"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"1039:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:7"},"scope":1526,"src":"988:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1519,"nodeType":"Block","src":"1165:25:7","statements":[{"expression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1516,"id":1518,"nodeType":"Return","src":"1175:8:7"}]},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:7","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"1122:2:7"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1520,"src":"1156:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:7"},"scope":1526,"src":"1093:97:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"1196:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1525,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:7","nodeType":"VariableDeclaration","scope":1526,"src":"1455:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"length":{"hexValue":"3530","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1527,"src":"687:796:7","usedErrors":[],"usedEvents":[147]}],"src":"101:1383:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","exportedSymbols":{"EnumerableSetUpgradeable":[2139]},"id":2140,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1528,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSetUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"230:1098:8","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2139,"linearizedBaseContracts":[2139],"name":"EnumerableSetUpgradeable","nameLocation":"1337:24:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSetUpgradeable.Set","id":1537,"members":[{"constant":false,"id":1532,"mutability":"mutable","name":"_values","nameLocation":"1872:7:8","nodeType":"VariableDeclaration","scope":1537,"src":"1862:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1862:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1531,"nodeType":"ArrayTypeName","src":"1862:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"_indexes","nameLocation":"2040:8:8","nodeType":"VariableDeclaration","scope":1537,"src":"2012:36:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":1535,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1533,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2020:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2012:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1815:3:8","nodeType":"StructDefinition","scope":2139,"src":"1808:247:8","visibility":"public"},{"body":{"id":1578,"nodeType":"Block","src":"2294:335:8","statements":[{"condition":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2308:22:8","subExpression":{"arguments":[{"id":1549,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2319:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},{"id":1550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2324:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1548,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"2309:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1576,"nodeType":"Block","src":"2586:37:8","statements":[{"expression":{"hexValue":"66616c7365","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2607:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1547,"id":1575,"nodeType":"Return","src":"2600:12:8"}]},"id":1577,"nodeType":"IfStatement","src":"2304:319:8","trueBody":{"id":1573,"nodeType":"Block","src":"2332:248:8","statements":[{"expression":{"arguments":[{"id":1558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2363:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":1553,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2346:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"2346:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:4:8","memberName":"push","nodeType":"MemberAccess","src":"2346:16:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2346:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1560,"nodeType":"ExpressionStatement","src":"2346:23:8"},{"expression":{"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1561,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2504:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2508:8:8","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"2504:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1565,"indexExpression":{"id":1563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"2517:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2504:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":1566,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2526:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2530:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"2526:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:6:8","memberName":"length","nodeType":"MemberAccess","src":"2526:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2504:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1570,"nodeType":"ExpressionStatement","src":"2504:40:8"},{"expression":{"hexValue":"74727565","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2565:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1547,"id":1572,"nodeType":"Return","src":"2558:11:8"}]}}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"2061:159:8","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2234:4:8","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"set","nameLocation":"2251:3:8","nodeType":"VariableDeclaration","scope":1579,"src":"2239:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"Set","nameLocations":["2239:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"2239:3:8"},"referencedDeclaration":1537,"src":"2239:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"value","nameLocation":"2264:5:8","nodeType":"VariableDeclaration","scope":1579,"src":"2256:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2256:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2238:32:8"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"2288:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1545,"name":"bool","nodeType":"ElementaryTypeName","src":"2288:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2287:6:8"},"scope":2139,"src":"2225:404:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1662,"nodeType":"Block","src":"2869:1316:8","statements":[{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"valueIndex","nameLocation":"2987:10:8","nodeType":"VariableDeclaration","scope":1662,"src":"2979:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1596,"initialValue":{"baseExpression":{"expression":{"id":1592,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3000:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3004:8:8","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"3000:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1595,"indexExpression":{"id":1594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"3013:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3000:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2979:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"3034:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3048:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3034:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1660,"nodeType":"Block","src":"4142:37:8","statements":[{"expression":{"hexValue":"66616c7365","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4163:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1589,"id":1659,"nodeType":"Return","src":"4156:12:8"}]},"id":1661,"nodeType":"IfStatement","src":"3030:1149:8","trueBody":{"id":1657,"nodeType":"Block","src":"3051:1085:8","statements":[{"assignments":[1601],"declarations":[{"constant":false,"id":1601,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3411:13:8","nodeType":"VariableDeclaration","scope":1657,"src":"3403:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"3403:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"3427:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3427:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3403:38:8"},{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"lastIndex","nameLocation":"3463:9:8","nodeType":"VariableDeclaration","scope":1657,"src":"3455:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1613,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1608,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3475:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3479:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"3475:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3487:6:8","memberName":"length","nodeType":"MemberAccess","src":"3475:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3496:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3475:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3455:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3516:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1615,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"3529:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3516:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1641,"nodeType":"IfStatement","src":"3512:398:8","trueBody":{"id":1640,"nodeType":"Block","src":"3544:366:8","statements":[{"assignments":[1618],"declarations":[{"constant":false,"id":1618,"mutability":"mutable","name":"lastValue","nameLocation":"3570:9:8","nodeType":"VariableDeclaration","scope":1640,"src":"3562:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3562:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1623,"initialValue":{"baseExpression":{"expression":{"id":1619,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3582:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3586:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"3582:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1622,"indexExpression":{"id":1621,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3594:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3582:22:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3562:42:8"},{"expression":{"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1624,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3704:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3708:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"3704:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1628,"indexExpression":{"id":1626,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"3716:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:26:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1629,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3704:38:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1631,"nodeType":"ExpressionStatement","src":"3704:38:8"},{"expression":{"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1632,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3816:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3820:8:8","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"3816:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1636,"indexExpression":{"id":1634,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"3829:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3816:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1637,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"3842:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3816:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1639,"nodeType":"ExpressionStatement","src":"3816:36:8"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1642,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"3988:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3992:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"3988:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4000:3:8","memberName":"pop","nodeType":"MemberAccess","src":"3988:15:8","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3988:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1648,"nodeType":"ExpressionStatement","src":"3988:17:8"},{"expression":{"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4073:26:8","subExpression":{"baseExpression":{"expression":{"id":1649,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"4080:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4084:8:8","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"4080:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1652,"indexExpression":{"id":1651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"4093:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4080:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1654,"nodeType":"ExpressionStatement","src":"4073:26:8"},{"expression":{"hexValue":"74727565","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1589,"id":1656,"nodeType":"Return","src":"4114:11:8"}]}}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"2635:157:8","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2806:7:8","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"set","nameLocation":"2826:3:8","nodeType":"VariableDeclaration","scope":1663,"src":"2814:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1582,"nodeType":"UserDefinedTypeName","pathNode":{"id":1581,"name":"Set","nameLocations":["2814:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"2814:3:8"},"referencedDeclaration":1537,"src":"2814:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"value","nameLocation":"2839:5:8","nodeType":"VariableDeclaration","scope":1663,"src":"2831:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2831:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2813:32:8"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"2863:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1587,"name":"bool","nodeType":"ElementaryTypeName","src":"2863:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2862:6:8"},"scope":2139,"src":"2797:1388:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1681,"nodeType":"Block","src":"4345:48:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1674,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"4362:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4366:8:8","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"4362:12:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1677,"indexExpression":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"4375:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4362:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1673,"id":1680,"nodeType":"Return","src":"4355:31:8"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"4191:70:8","text":" @dev Returns true if the value is in the set. O(1)."},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4275:9:8","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"set","nameLocation":"4297:3:8","nodeType":"VariableDeclaration","scope":1682,"src":"4285:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1666,"nodeType":"UserDefinedTypeName","pathNode":{"id":1665,"name":"Set","nameLocations":["4285:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"4285:3:8"},"referencedDeclaration":1537,"src":"4285:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"value","nameLocation":"4310:5:8","nodeType":"VariableDeclaration","scope":1682,"src":"4302:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4284:32:8"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"4339:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1671,"name":"bool","nodeType":"ElementaryTypeName","src":"4339:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4338:6:8"},"scope":2139,"src":"4266:127:8","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1695,"nodeType":"Block","src":"4539:42:8","statements":[{"expression":{"expression":{"expression":{"id":1691,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"4556:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"4556:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4568:6:8","memberName":"length","nodeType":"MemberAccess","src":"4556:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1690,"id":1694,"nodeType":"Return","src":"4549:25:8"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"4399:70:8","text":" @dev Returns the number of values on the set. O(1)."},"id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4483:7:8","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"set","nameLocation":"4503:3:8","nodeType":"VariableDeclaration","scope":1696,"src":"4491:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1685,"nodeType":"UserDefinedTypeName","pathNode":{"id":1684,"name":"Set","nameLocations":["4491:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"4491:3:8"},"referencedDeclaration":1537,"src":"4491:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"4490:17:8"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"4530:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4529:9:8"},"scope":2139,"src":"4474:107:8","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1712,"nodeType":"Block","src":"4999:42:8","statements":[{"expression":{"baseExpression":{"expression":{"id":1707,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"5016:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"5016:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":1710,"indexExpression":{"id":1709,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5028:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5016:18:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1706,"id":1711,"nodeType":"Return","src":"5009:25:8"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"4587:331:8","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4932:3:8","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"set","nameLocation":"4948:3:8","nodeType":"VariableDeclaration","scope":1713,"src":"4936:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1699,"nodeType":"UserDefinedTypeName","pathNode":{"id":1698,"name":"Set","nameLocations":["4936:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"4936:3:8"},"referencedDeclaration":1537,"src":"4936:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"index","nameLocation":"4961:5:8","nodeType":"VariableDeclaration","scope":1713,"src":"4953:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4935:32:8"},"returnParameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"4990:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4990:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4989:9:8"},"scope":2139,"src":"4923:118:8","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1726,"nodeType":"Block","src":"5655:35:8","statements":[{"expression":{"expression":{"id":1723,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"5672:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set storage pointer"}},"id":1724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5676:7:8","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"5672:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":1722,"id":1725,"nodeType":"Return","src":"5665:18:8"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"5047:529:8","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5590:7:8","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"set","nameLocation":"5610:3:8","nodeType":"VariableDeclaration","scope":1727,"src":"5598:15:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1716,"nodeType":"UserDefinedTypeName","pathNode":{"id":1715,"name":"Set","nameLocations":["5598:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"5598:3:8"},"referencedDeclaration":1537,"src":"5598:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"src":"5597:17:8"},"returnParameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"5637:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1719,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5637:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1720,"nodeType":"ArrayTypeName","src":"5637:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5636:18:8"},"scope":2139,"src":"5581:109:8","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSetUpgradeable.Bytes32Set","id":1731,"members":[{"constant":false,"id":1730,"mutability":"mutable","name":"_inner","nameLocation":"5747:6:8","nodeType":"VariableDeclaration","scope":1731,"src":"5743:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1729,"nodeType":"UserDefinedTypeName","pathNode":{"id":1728,"name":"Set","nameLocations":["5743:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"5743:3:8"},"referencedDeclaration":1537,"src":"5743:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5722:10:8","nodeType":"StructDefinition","scope":2139,"src":"5715:45:8","visibility":"public"},{"body":{"id":1748,"nodeType":"Block","src":"6006:47:8","statements":[{"expression":{"arguments":[{"expression":{"id":1743,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"6028:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"6028:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"6040:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1742,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"6023:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6023:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1741,"id":1747,"nodeType":"Return","src":"6016:30:8"}]},"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"5766:159:8","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1749,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5939:3:8","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"set","nameLocation":"5962:3:8","nodeType":"VariableDeclaration","scope":1749,"src":"5943:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1734,"nodeType":"UserDefinedTypeName","pathNode":{"id":1733,"name":"Bytes32Set","nameLocations":["5943:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1731,"src":"5943:10:8"},"referencedDeclaration":1731,"src":"5943:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"value","nameLocation":"5975:5:8","nodeType":"VariableDeclaration","scope":1749,"src":"5967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5942:39:8"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"6000:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1739,"name":"bool","nodeType":"ElementaryTypeName","src":"6000:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5999:6:8"},"scope":2139,"src":"5930:123:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1766,"nodeType":"Block","src":"6300:50:8","statements":[{"expression":{"arguments":[{"expression":{"id":1761,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"6325:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1762,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"6325:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"6337:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1760,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"6317:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1759,"id":1765,"nodeType":"Return","src":"6310:33:8"}]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"6059:157:8","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6230:6:8","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"set","nameLocation":"6256:3:8","nodeType":"VariableDeclaration","scope":1767,"src":"6237:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1752,"nodeType":"UserDefinedTypeName","pathNode":{"id":1751,"name":"Bytes32Set","nameLocations":["6237:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1731,"src":"6237:10:8"},"referencedDeclaration":1731,"src":"6237:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"value","nameLocation":"6269:5:8","nodeType":"VariableDeclaration","scope":1767,"src":"6261:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6261:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6236:39:8"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"6294:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1757,"name":"bool","nodeType":"ElementaryTypeName","src":"6294:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6293:6:8"},"scope":2139,"src":"6221:129:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1784,"nodeType":"Block","src":"6517:52:8","statements":[{"expression":{"arguments":[{"expression":{"id":1779,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6544:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6548:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"6544:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"6556:5:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1778,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"6534:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6534:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1777,"id":1783,"nodeType":"Return","src":"6527:35:8"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"6356:70:8","text":" @dev Returns true if the value is in the set. O(1)."},"id":1785,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6440:8:8","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"set","nameLocation":"6468:3:8","nodeType":"VariableDeclaration","scope":1785,"src":"6449:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1770,"nodeType":"UserDefinedTypeName","pathNode":{"id":1769,"name":"Bytes32Set","nameLocations":["6449:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1731,"src":"6449:10:8"},"referencedDeclaration":1731,"src":"6449:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"value","nameLocation":"6481:5:8","nodeType":"VariableDeclaration","scope":1785,"src":"6473:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6473:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6448:39:8"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1785,"src":"6511:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1775,"name":"bool","nodeType":"ElementaryTypeName","src":"6511:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6510:6:8"},"scope":2139,"src":"6431:138:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1799,"nodeType":"Block","src":"6722:43:8","statements":[{"expression":{"arguments":[{"expression":{"id":1795,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"6747:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6751:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"6747:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1794,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"6739:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6739:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1793,"id":1798,"nodeType":"Return","src":"6732:26:8"}]},"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"6575:70:8","text":" @dev Returns the number of values in the set. O(1)."},"id":1800,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6659:6:8","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"set","nameLocation":"6685:3:8","nodeType":"VariableDeclaration","scope":1800,"src":"6666:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1788,"nodeType":"UserDefinedTypeName","pathNode":{"id":1787,"name":"Bytes32Set","nameLocations":["6666:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1731,"src":"6666:10:8"},"referencedDeclaration":1731,"src":"6666:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"6665:24:8"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1800,"src":"6713:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6712:9:8"},"scope":2139,"src":"6650:115:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"7190:46:8","statements":[{"expression":{"arguments":[{"expression":{"id":1812,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"7211:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7215:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"7211:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1814,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"7223:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1811,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"7207:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7207:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1810,"id":1816,"nodeType":"Return","src":"7200:29:8"}]},"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"6771:331:8","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7116:2:8","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"set","nameLocation":"7138:3:8","nodeType":"VariableDeclaration","scope":1818,"src":"7119:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1803,"nodeType":"UserDefinedTypeName","pathNode":{"id":1802,"name":"Bytes32Set","nameLocations":["7119:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1731,"src":"7119:10:8"},"referencedDeclaration":1731,"src":"7119:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"index","nameLocation":"7151:5:8","nodeType":"VariableDeclaration","scope":1818,"src":"7143:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"7143:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7118:39:8"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"7181:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7181:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7180:9:8"},"scope":2139,"src":"7107:129:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1847,"nodeType":"Block","src":"7857:219:8","statements":[{"assignments":[1832],"declarations":[{"constant":false,"id":1832,"mutability":"mutable","name":"store","nameLocation":"7884:5:8","nodeType":"VariableDeclaration","scope":1847,"src":"7867:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1830,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7867:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1831,"nodeType":"ArrayTypeName","src":"7867:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1837,"initialValue":{"arguments":[{"expression":{"id":1834,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"7900:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set storage pointer"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7904:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1730,"src":"7900:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1833,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"7892:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7892:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7867:44:8"},{"assignments":[1842],"declarations":[{"constant":false,"id":1842,"mutability":"mutable","name":"result","nameLocation":"7938:6:8","nodeType":"VariableDeclaration","scope":1847,"src":"7921:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7921:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1841,"nodeType":"ArrayTypeName","src":"7921:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1843,"nodeType":"VariableDeclarationStatement","src":"7921:23:8"},{"AST":{"nativeSrc":"8007:39:8","nodeType":"YulBlock","src":"8007:39:8","statements":[{"nativeSrc":"8021:15:8","nodeType":"YulAssignment","src":"8021:15:8","value":{"name":"store","nativeSrc":"8031:5:8","nodeType":"YulIdentifier","src":"8031:5:8"},"variableNames":[{"name":"result","nativeSrc":"8021:6:8","nodeType":"YulIdentifier","src":"8021:6:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1842,"isOffset":false,"isSlot":false,"src":"8021:6:8","valueSize":1},{"declaration":1832,"isOffset":false,"isSlot":false,"src":"8031:5:8","valueSize":1}],"id":1844,"nodeType":"InlineAssembly","src":"7998:48:8"},{"expression":{"id":1845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"8063:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":1827,"id":1846,"nodeType":"Return","src":"8056:13:8"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"7242:529:8","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":1848,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7785:6:8","nodeType":"FunctionDefinition","parameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"set","nameLocation":"7811:3:8","nodeType":"VariableDeclaration","scope":1848,"src":"7792:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"},"typeName":{"id":1821,"nodeType":"UserDefinedTypeName","pathNode":{"id":1820,"name":"Bytes32Set","nameLocations":["7792:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1731,"src":"7792:10:8"},"referencedDeclaration":1731,"src":"7792:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$1731_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Bytes32Set"}},"visibility":"internal"}],"src":"7791:24:8"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1848,"src":"7839:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7839:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1825,"nodeType":"ArrayTypeName","src":"7839:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7838:18:8"},"scope":2139,"src":"7776:300:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.AddressSet","id":1852,"members":[{"constant":false,"id":1851,"mutability":"mutable","name":"_inner","nameLocation":"8133:6:8","nodeType":"VariableDeclaration","scope":1852,"src":"8129:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":1850,"nodeType":"UserDefinedTypeName","pathNode":{"id":1849,"name":"Set","nameLocations":["8129:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"8129:3:8"},"referencedDeclaration":1537,"src":"8129:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8108:10:8","nodeType":"StructDefinition","scope":2139,"src":"8101:45:8","visibility":"public"},{"body":{"id":1878,"nodeType":"Block","src":"8392:74:8","statements":[{"expression":{"arguments":[{"expression":{"id":1864,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8414:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"8414:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8450:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8442:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1870,"name":"uint160","nodeType":"ElementaryTypeName","src":"8442:7:8","typeDescriptions":{}}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8442:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8434:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:8","typeDescriptions":{}}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8434:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8426:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8426:7:8","typeDescriptions":{}}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8426:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1863,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"8409:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8409:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1862,"id":1877,"nodeType":"Return","src":"8402:57:8"}]},"documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"8152:159:8","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8325:3:8","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"set","nameLocation":"8348:3:8","nodeType":"VariableDeclaration","scope":1879,"src":"8329:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1855,"nodeType":"UserDefinedTypeName","pathNode":{"id":1854,"name":"AddressSet","nameLocations":["8329:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"8329:10:8"},"referencedDeclaration":1852,"src":"8329:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"value","nameLocation":"8361:5:8","nodeType":"VariableDeclaration","scope":1879,"src":"8353:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8328:39:8"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1879,"src":"8386:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1860,"name":"bool","nodeType":"ElementaryTypeName","src":"8386:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8385:6:8"},"scope":2139,"src":"8316:150:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1905,"nodeType":"Block","src":"8713:77:8","statements":[{"expression":{"arguments":[{"expression":{"id":1891,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"8738:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"8738:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"8774:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8766:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1897,"name":"uint160","nodeType":"ElementaryTypeName","src":"8766:7:8","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8758:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"8758:7:8","typeDescriptions":{}}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8758:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8750:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8750:7:8","typeDescriptions":{}}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8750:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1890,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"8730:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8730:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1889,"id":1904,"nodeType":"Return","src":"8723:60:8"}]},"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"8472:157:8","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8643:6:8","nodeType":"FunctionDefinition","parameters":{"id":1886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"set","nameLocation":"8669:3:8","nodeType":"VariableDeclaration","scope":1906,"src":"8650:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1882,"nodeType":"UserDefinedTypeName","pathNode":{"id":1881,"name":"AddressSet","nameLocations":["8650:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"8650:10:8"},"referencedDeclaration":1852,"src":"8650:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1885,"mutability":"mutable","name":"value","nameLocation":"8682:5:8","nodeType":"VariableDeclaration","scope":1906,"src":"8674:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8649:39:8"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1906,"src":"8707:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1887,"name":"bool","nodeType":"ElementaryTypeName","src":"8707:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8706:6:8"},"scope":2139,"src":"8634:156:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1932,"nodeType":"Block","src":"8957:79:8","statements":[{"expression":{"arguments":[{"expression":{"id":1918,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"8984:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8988:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"8984:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":1926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"9020:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9012:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1924,"name":"uint160","nodeType":"ElementaryTypeName","src":"9012:7:8","typeDescriptions":{}}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9012:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9004:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:8","typeDescriptions":{}}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9004:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8996:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1920,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8996:7:8","typeDescriptions":{}}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1917,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"8974:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1916,"id":1931,"nodeType":"Return","src":"8967:62:8"}]},"documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"8796:70:8","text":" @dev Returns true if the value is in the set. O(1)."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8880:8:8","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"set","nameLocation":"8908:3:8","nodeType":"VariableDeclaration","scope":1933,"src":"8889:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1909,"nodeType":"UserDefinedTypeName","pathNode":{"id":1908,"name":"AddressSet","nameLocations":["8889:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"8889:10:8"},"referencedDeclaration":1852,"src":"8889:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1912,"mutability":"mutable","name":"value","nameLocation":"8921:5:8","nodeType":"VariableDeclaration","scope":1933,"src":"8913:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1911,"name":"address","nodeType":"ElementaryTypeName","src":"8913:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8888:39:8"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1933,"src":"8951:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1914,"name":"bool","nodeType":"ElementaryTypeName","src":"8951:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8950:6:8"},"scope":2139,"src":"8871:165:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1947,"nodeType":"Block","src":"9189:43:8","statements":[{"expression":{"arguments":[{"expression":{"id":1943,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"9214:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9218:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"9214:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1942,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9206:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9206:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1941,"id":1946,"nodeType":"Return","src":"9199:26:8"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"9042:70:8","text":" @dev Returns the number of values in the set. O(1)."},"id":1948,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9126:6:8","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"set","nameLocation":"9152:3:8","nodeType":"VariableDeclaration","scope":1948,"src":"9133:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1936,"nodeType":"UserDefinedTypeName","pathNode":{"id":1935,"name":"AddressSet","nameLocations":["9133:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"9133:10:8"},"referencedDeclaration":1852,"src":"9133:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"9132:24:8"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1948,"src":"9180:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"9180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9179:9:8"},"scope":2139,"src":"9117:115:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1974,"nodeType":"Block","src":"9657:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1966,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"9702:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"9702:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":1968,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"9714:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1965,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"9698:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9690:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"9690:7:8","typeDescriptions":{}}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9690:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9682:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1961,"name":"uint160","nodeType":"ElementaryTypeName","src":"9682:7:8","typeDescriptions":{}}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9674:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1959,"name":"address","nodeType":"ElementaryTypeName","src":"9674:7:8","typeDescriptions":{}}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9674:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1958,"id":1973,"nodeType":"Return","src":"9667:56:8"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"9238:331:8","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":1975,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9583:2:8","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"set","nameLocation":"9605:3:8","nodeType":"VariableDeclaration","scope":1975,"src":"9586:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1951,"nodeType":"UserDefinedTypeName","pathNode":{"id":1950,"name":"AddressSet","nameLocations":["9586:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"9586:10:8"},"referencedDeclaration":1852,"src":"9586:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"index","nameLocation":"9618:5:8","nodeType":"VariableDeclaration","scope":1975,"src":"9610:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"9610:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9585:39:8"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1975,"src":"9648:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9647:9:8"},"scope":2139,"src":"9574:156:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2004,"nodeType":"Block","src":"10351:219:8","statements":[{"assignments":[1989],"declarations":[{"constant":false,"id":1989,"mutability":"mutable","name":"store","nameLocation":"10378:5:8","nodeType":"VariableDeclaration","scope":2004,"src":"10361:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10361:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1988,"nodeType":"ArrayTypeName","src":"10361:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1994,"initialValue":{"arguments":[{"expression":{"id":1991,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"10394:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet storage pointer"}},"id":1992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"10394:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":1990,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"10386:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10386:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10361:44:8"},{"assignments":[1999],"declarations":[{"constant":false,"id":1999,"mutability":"mutable","name":"result","nameLocation":"10432:6:8","nodeType":"VariableDeclaration","scope":2004,"src":"10415:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"10415:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1998,"nodeType":"ArrayTypeName","src":"10415:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2000,"nodeType":"VariableDeclarationStatement","src":"10415:23:8"},{"AST":{"nativeSrc":"10501:39:8","nodeType":"YulBlock","src":"10501:39:8","statements":[{"nativeSrc":"10515:15:8","nodeType":"YulAssignment","src":"10515:15:8","value":{"name":"store","nativeSrc":"10525:5:8","nodeType":"YulIdentifier","src":"10525:5:8"},"variableNames":[{"name":"result","nativeSrc":"10515:6:8","nodeType":"YulIdentifier","src":"10515:6:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1999,"isOffset":false,"isSlot":false,"src":"10515:6:8","valueSize":1},{"declaration":1989,"isOffset":false,"isSlot":false,"src":"10525:5:8","valueSize":1}],"id":2001,"nodeType":"InlineAssembly","src":"10492:48:8"},{"expression":{"id":2002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"10557:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":1984,"id":2003,"nodeType":"Return","src":"10550:13:8"}]},"documentation":{"id":1976,"nodeType":"StructuredDocumentation","src":"9736:529:8","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2005,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10279:6:8","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"set","nameLocation":"10305:3:8","nodeType":"VariableDeclaration","scope":2005,"src":"10286:22:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":1978,"nodeType":"UserDefinedTypeName","pathNode":{"id":1977,"name":"AddressSet","nameLocations":["10286:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"10286:10:8"},"referencedDeclaration":1852,"src":"10286:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"internal"}],"src":"10285:24:8"},"returnParameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"10333:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1982,"nodeType":"ArrayTypeName","src":"10333:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10332:18:8"},"scope":2139,"src":"10270:300:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSetUpgradeable.UintSet","id":2009,"members":[{"constant":false,"id":2008,"mutability":"mutable","name":"_inner","nameLocation":"10621:6:8","nodeType":"VariableDeclaration","scope":2009,"src":"10617:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"},"typeName":{"id":2007,"nodeType":"UserDefinedTypeName","pathNode":{"id":2006,"name":"Set","nameLocations":["10617:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":1537,"src":"10617:3:8"},"referencedDeclaration":1537,"src":"10617:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage_ptr","typeString":"struct EnumerableSetUpgradeable.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10599:7:8","nodeType":"StructDefinition","scope":2139,"src":"10592:42:8","visibility":"public"},{"body":{"id":2029,"nodeType":"Block","src":"10877:56:8","statements":[{"expression":{"arguments":[{"expression":{"id":2021,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"10899:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10903:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"10899:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":2025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"10919:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10911:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10911:7:8","typeDescriptions":{}}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10911:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2020,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"10894:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10894:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2019,"id":2028,"nodeType":"Return","src":"10887:39:8"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"10640:159:8","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10813:3:8","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"set","nameLocation":"10833:3:8","nodeType":"VariableDeclaration","scope":2030,"src":"10817:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2012,"nodeType":"UserDefinedTypeName","pathNode":{"id":2011,"name":"UintSet","nameLocations":["10817:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"10817:7:8"},"referencedDeclaration":2009,"src":"10817:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"value","nameLocation":"10846:5:8","nodeType":"VariableDeclaration","scope":2030,"src":"10838:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10838:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10816:36:8"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2030,"src":"10871:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2017,"name":"bool","nodeType":"ElementaryTypeName","src":"10871:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10870:6:8"},"scope":2139,"src":"10804:129:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"11177:59:8","statements":[{"expression":{"arguments":[{"expression":{"id":2042,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"11202:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"11202:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":2046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"11222:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11214:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11214:7:8","typeDescriptions":{}}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11214:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2041,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11194:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11194:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2040,"id":2049,"nodeType":"Return","src":"11187:42:8"}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"10939:157:8","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11110:6:8","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"set","nameLocation":"11133:3:8","nodeType":"VariableDeclaration","scope":2051,"src":"11117:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2033,"nodeType":"UserDefinedTypeName","pathNode":{"id":2032,"name":"UintSet","nameLocations":["11117:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"11117:7:8"},"referencedDeclaration":2009,"src":"11117:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"value","nameLocation":"11146:5:8","nodeType":"VariableDeclaration","scope":2051,"src":"11138:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2035,"name":"uint256","nodeType":"ElementaryTypeName","src":"11138:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11116:36:8"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"11171:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2038,"name":"bool","nodeType":"ElementaryTypeName","src":"11171:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11170:6:8"},"scope":2139,"src":"11101:135:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"11400:61:8","statements":[{"expression":{"arguments":[{"expression":{"id":2063,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"11427:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11431:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"11427:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"arguments":[{"id":2067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"11447:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11439:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11439:7:8","typeDescriptions":{}}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11439:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2062,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"11417:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11417:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2061,"id":2070,"nodeType":"Return","src":"11410:44:8"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"11242:70:8","text":" @dev Returns true if the value is in the set. O(1)."},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11326:8:8","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"set","nameLocation":"11351:3:8","nodeType":"VariableDeclaration","scope":2072,"src":"11335:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2054,"nodeType":"UserDefinedTypeName","pathNode":{"id":2053,"name":"UintSet","nameLocations":["11335:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"11335:7:8"},"referencedDeclaration":2009,"src":"11335:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"value","nameLocation":"11364:5:8","nodeType":"VariableDeclaration","scope":2072,"src":"11356:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"11356:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11334:36:8"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"11394:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2059,"name":"bool","nodeType":"ElementaryTypeName","src":"11394:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11393:6:8"},"scope":2139,"src":"11317:144:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"11611:43:8","statements":[{"expression":{"arguments":[{"expression":{"id":2082,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"11636:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2083,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"11636:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2081,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"11628:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2080,"id":2085,"nodeType":"Return","src":"11621:26:8"}]},"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"11467:70:8","text":" @dev Returns the number of values in the set. O(1)."},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11551:6:8","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"set","nameLocation":"11574:3:8","nodeType":"VariableDeclaration","scope":2087,"src":"11558:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2075,"nodeType":"UserDefinedTypeName","pathNode":{"id":2074,"name":"UintSet","nameLocations":["11558:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"11558:7:8"},"referencedDeclaration":2009,"src":"11558:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"11557:21:8"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"11602:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"11602:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11601:9:8"},"scope":2139,"src":"11542:112:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2107,"nodeType":"Block","src":"12076:55:8","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2101,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"12105:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12109:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"12105:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}},{"id":2103,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"12117:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2100,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"12101:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12101:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12093:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"12093:7:8","typeDescriptions":{}}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12093:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2097,"id":2106,"nodeType":"Return","src":"12086:38:8"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"11660:331:8","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2108,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"12005:2:8","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"set","nameLocation":"12024:3:8","nodeType":"VariableDeclaration","scope":2108,"src":"12008:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2090,"nodeType":"UserDefinedTypeName","pathNode":{"id":2089,"name":"UintSet","nameLocations":["12008:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"12008:7:8"},"referencedDeclaration":2009,"src":"12008:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"},{"constant":false,"id":2093,"mutability":"mutable","name":"index","nameLocation":"12037:5:8","nodeType":"VariableDeclaration","scope":2108,"src":"12029:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"12029:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12007:36:8"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2108,"src":"12067:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"12067:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12066:9:8"},"scope":2139,"src":"11996:135:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"12749:219:8","statements":[{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"store","nameLocation":"12776:5:8","nodeType":"VariableDeclaration","scope":2137,"src":"12759:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12759:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2121,"nodeType":"ArrayTypeName","src":"12759:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2127,"initialValue":{"arguments":[{"expression":{"id":2124,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"12792:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet storage pointer"}},"id":2125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12796:6:8","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2008,"src":"12792:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$1537_storage","typeString":"struct EnumerableSetUpgradeable.Set storage ref"}],"id":2123,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"12784:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$1537_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12784:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12759:44:8"},{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"result","nameLocation":"12830:6:8","nodeType":"VariableDeclaration","scope":2137,"src":"12813:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"12813:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ArrayTypeName","src":"12813:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2133,"nodeType":"VariableDeclarationStatement","src":"12813:23:8"},{"AST":{"nativeSrc":"12899:39:8","nodeType":"YulBlock","src":"12899:39:8","statements":[{"nativeSrc":"12913:15:8","nodeType":"YulAssignment","src":"12913:15:8","value":{"name":"store","nativeSrc":"12923:5:8","nodeType":"YulIdentifier","src":"12923:5:8"},"variableNames":[{"name":"result","nativeSrc":"12913:6:8","nodeType":"YulIdentifier","src":"12913:6:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2132,"isOffset":false,"isSlot":false,"src":"12913:6:8","valueSize":1},{"declaration":2122,"isOffset":false,"isSlot":false,"src":"12923:5:8","valueSize":1}],"id":2134,"nodeType":"InlineAssembly","src":"12890:48:8"},{"expression":{"id":2135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"12955:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2117,"id":2136,"nodeType":"Return","src":"12948:13:8"}]},"documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"12137:529:8","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12680:6:8","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"set","nameLocation":"12703:3:8","nodeType":"VariableDeclaration","scope":2138,"src":"12687:19:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"},"typeName":{"id":2111,"nodeType":"UserDefinedTypeName","pathNode":{"id":2110,"name":"UintSet","nameLocations":["12687:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"12687:7:8"},"referencedDeclaration":2009,"src":"12687:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2009_storage_ptr","typeString":"struct EnumerableSetUpgradeable.UintSet"}},"visibility":"internal"}],"src":"12686:21:8"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"12731:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"12731:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"nodeType":"ArrayTypeName","src":"12731:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12730:18:8"},"scope":2139,"src":"12671:297:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2140,"src":"1329:11641:8","usedErrors":[],"usedEvents":[]}],"src":"205:12766:8"},"id":8},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3150],"Ownable":[2252]},"id":2253,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2141,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2253,"sourceUnit":3151,"src":"127:30:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2144,"name":"Context","nameLocations":["683:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"683:7:9"},"id":2145,"nodeType":"InheritanceSpecifier","src":"683:7:9"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"159:494:9","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2252,"linearizedBaseContracts":[2252,3150],"name":"Ownable","nameLocation":"672:7:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2147,"mutability":"mutable","name":"_owner","nameLocation":"713:6:9","nodeType":"VariableDeclaration","scope":2252,"src":"697:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2146,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2153,"name":"OwnershipTransferred","nameLocation":"732:20:9","nodeType":"EventDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:9","nodeType":"VariableDeclaration","scope":2153,"src":"753:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2148,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2151,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:9","nodeType":"VariableDeclaration","scope":2153,"src":"784:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:9"},"src":"726:84:9"},{"body":{"id":2162,"nodeType":"Block","src":"926:49:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2158,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"955:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2157,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"936:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2161,"nodeType":"ExpressionStatement","src":"936:32:9"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"816:91:9","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":2163,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2155,"nodeType":"ParameterList","parameters":[],"src":"923:2:9"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"926:0:9"},"scope":2252,"src":"912:63:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2170,"nodeType":"Block","src":"1084:41:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2166,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"1094:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2168,"nodeType":"ExpressionStatement","src":"1094:13:9"},{"id":2169,"nodeType":"PlaceholderStatement","src":"1117:1:9"}]},"documentation":{"id":2164,"nodeType":"StructuredDocumentation","src":"981:77:9","text":" @dev Throws if called by any account other than the owner."},"id":2171,"name":"onlyOwner","nameLocation":"1072:9:9","nodeType":"ModifierDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[],"src":"1081:2:9"},"src":"1063:62:9","virtual":false,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"1256:30:9","statements":[{"expression":{"id":2177,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1273:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2176,"id":2178,"nodeType":"Return","src":"1266:13:9"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"1131:65:9","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:9","nodeType":"FunctionDefinition","parameters":{"id":2173,"nodeType":"ParameterList","parameters":[],"src":"1215:2:9"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"1247:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:9"},"scope":2252,"src":"1201:85:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2193,"nodeType":"Block","src":"1404:85:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2185,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"1422:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2187,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"1433:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"1414:68:9"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"1292:62:9","text":" @dev Throws if the sender is not the owner."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:9","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[],"src":"1379:2:9"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[],"src":"1404:0:9"},"scope":2252,"src":"1359:130:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2207,"nodeType":"Block","src":"1878:47:9","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2201,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:9","typeDescriptions":{}}},"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2200,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1888:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2206,"nodeType":"ExpressionStatement","src":"1888:30:9"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"1495:324:9","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2208,"implemented":true,"kind":"function","modifiers":[{"id":2198,"kind":"modifierInvocation","modifierName":{"id":2197,"name":"onlyOwner","nameLocations":["1868:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"1868:9:9"},"nodeType":"ModifierInvocation","src":"1868:9:9"}],"name":"renounceOwnership","nameLocation":"1833:17:9","nodeType":"FunctionDefinition","parameters":{"id":2196,"nodeType":"ParameterList","parameters":[],"src":"1850:2:9"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[],"src":"1878:0:9"},"scope":2252,"src":"1824:101:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2230,"nodeType":"Block","src":"2144:128:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2162:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:9","typeDescriptions":{}}},"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":2216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2225,"nodeType":"ExpressionStatement","src":"2154:73:9"},{"expression":{"arguments":[{"id":2227,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2256:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2226,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2237:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"ExpressionStatement","src":"2237:28:9"}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"1931:138:9","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2231,"implemented":true,"kind":"function","modifiers":[{"id":2214,"kind":"modifierInvocation","modifierName":{"id":2213,"name":"onlyOwner","nameLocations":["2134:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"2134:9:9"},"nodeType":"ModifierInvocation","src":"2134:9:9"}],"name":"transferOwnership","nameLocation":"2083:17:9","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:9","nodeType":"VariableDeclaration","scope":2231,"src":"2101:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:9"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[],"src":"2144:0:9"},"scope":2252,"src":"2074:198:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2250,"nodeType":"Block","src":"2489:124:9","statements":[{"assignments":[2238],"declarations":[{"constant":false,"id":2238,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:9","nodeType":"VariableDeclaration","scope":2250,"src":"2499:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2240,"initialValue":{"id":2239,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2518:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:9"},{"expression":{"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2241,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"2534:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2242,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"2543:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2244,"nodeType":"ExpressionStatement","src":"2534:17:9"},{"eventCall":{"arguments":[{"id":2246,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"2587:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2247,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"2597:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2245,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2566:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"EmitStatement","src":"2561:45:9"}]},"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"2278:143:9","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:9","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:9","nodeType":"VariableDeclaration","scope":2251,"src":"2454:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:9"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[],"src":"2489:0:9"},"scope":2252,"src":"2426:187:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2253,"src":"654:1961:9","usedErrors":[],"usedEvents":[2153]}],"src":"102:2514:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2273]},"id":2274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2254,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"132:133:10","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":2273,"linearizedBaseContracts":[2273],"name":"IERC1967","nameLocation":"276:8:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"291:68:10","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2260,"name":"Upgraded","nameLocation":"370:8:10","nodeType":"EventDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"395:14:10","nodeType":"VariableDeclaration","scope":2260,"src":"379:30:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"379:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"378:32:10"},"src":"364:47:10"},{"anonymous":false,"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"417:67:10","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2267,"name":"AdminChanged","nameLocation":"495:12:10","nodeType":"EventDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"516:13:10","nodeType":"VariableDeclaration","scope":2267,"src":"508:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2262,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2265,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"539:8:10","nodeType":"VariableDeclaration","scope":2267,"src":"531:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"507:41:10"},"src":"489:60:10"},{"anonymous":false,"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"555:59:10","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2272,"name":"BeaconUpgraded","nameLocation":"625:14:10","nodeType":"EventDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"656:6:10","nodeType":"VariableDeclaration","scope":2272,"src":"640:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:24:10"},"src":"619:45:10"}],"scope":2274,"src":"266:400:10","usedErrors":[],"usedEvents":[2260,2267,2272]}],"src":"107:560:10"},"id":10},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[2283]},"id":2284,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"138:203:11","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":2283,"linearizedBaseContracts":[2283],"name":"IERC1822Proxiable","nameLocation":"352:17:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"376:438:11","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":2282,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"828:13:11","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[],"src":"841:2:11"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2282,"src":"867:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"867:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"866:9:11"},"scope":2283,"src":"819:57:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2284,"src":"342:536:11","usedErrors":[],"usedEvents":[]}],"src":"113:766:11"},"id":11},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","exportedSymbols":{"Address":[3120],"ERC1967Upgrade":[2587],"IBeacon":[2715],"IERC1822Proxiable":[2283],"IERC1967":[2273],"StorageSlot":[3260]},"id":2588,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2285,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:12"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":2286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2588,"sourceUnit":2716,"src":"141:31:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":2287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2588,"sourceUnit":2274,"src":"173:39:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":2288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2588,"sourceUnit":2284,"src":"213:45:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2289,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2588,"sourceUnit":3121,"src":"259:33:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":2290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2588,"sourceUnit":3261,"src":"293:37:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2292,"name":"IERC1967","nameLocations":["553:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2273,"src":"553:8:12"},"id":2293,"nodeType":"InheritanceSpecifier","src":"553:8:12"}],"canonicalName":"ERC1967Upgrade","contractDependencies":[],"contractKind":"contract","documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"332:184:12","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":2587,"linearizedBaseContracts":[2587,2273],"name":"ERC1967Upgrade","nameLocation":"535:14:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2296,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"672:14:12","nodeType":"VariableDeclaration","scope":2587,"src":"647:108:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"647:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"689:66:12","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"762:214:12","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":2300,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1007:20:12","nodeType":"VariableDeclaration","scope":2587,"src":"981:115:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"981:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:66:12","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"1237:78:12","statements":[{"expression":{"expression":{"arguments":[{"id":2308,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1281:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2306,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"1254:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3260_$","typeString":"type(library StorageSlot)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1266:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"1254:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3156_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1254:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3156_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1303:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"1254:54:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2305,"id":2311,"nodeType":"Return","src":"1247:61:12"}]},"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"1103:67:12","text":" @dev Returns the current implementation address."},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1184:18:12","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[],"src":"1202:2:12"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"1228:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2303,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:9:12"},"scope":2587,"src":"1175:140:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2336,"nodeType":"Block","src":"1469:196:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2322,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"1506:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2320,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1487:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3120_$","typeString":"type(library Address)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2808,"src":"1487:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1487:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1526:47:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":2319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1479:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1479:95:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2326,"nodeType":"ExpressionStatement","src":"1479:95:12"},{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2330,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"1611:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2327,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"1584:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3260_$","typeString":"type(library StorageSlot)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1596:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"1584:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3156_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3156_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1633:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"1584:54:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2333,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"1641:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1584:74:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2335,"nodeType":"ExpressionStatement","src":"1584:74:12"}]},"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"1321:80:12","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":2337,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1415:18:12","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"newImplementation","nameLocation":"1442:17:12","nodeType":"VariableDeclaration","scope":2337,"src":"1434:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"1434:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1433:27:12"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"1469:0:12"},"scope":2587,"src":"1406:259:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2351,"nodeType":"Block","src":"1827:96:12","statements":[{"expression":{"arguments":[{"id":2344,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"1856:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2343,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"1837:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2346,"nodeType":"ExpressionStatement","src":"1837:37:12"},{"eventCall":{"arguments":[{"id":2348,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"1898:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2347,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"1889:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1889:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"EmitStatement","src":"1884:32:12"}]},"documentation":{"id":2338,"nodeType":"StructuredDocumentation","src":"1671:95:12","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":2352,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"1780:10:12","nodeType":"FunctionDefinition","parameters":{"id":2341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"newImplementation","nameLocation":"1799:17:12","nodeType":"VariableDeclaration","scope":2352,"src":"1791:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1790:27:12"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[],"src":"1827:0:12"},"scope":2587,"src":"1771:152:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2381,"nodeType":"Block","src":"2155:167:12","statements":[{"expression":{"arguments":[{"id":2363,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"2176:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2362,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2165:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2165:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2365,"nodeType":"ExpressionStatement","src":"2165:29:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2366,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"2208:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2213:6:12","memberName":"length","nodeType":"MemberAccess","src":"2208:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2222:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2208:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2370,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"2227:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2380,"nodeType":"IfStatement","src":"2204:112:12","trueBody":{"id":2379,"nodeType":"Block","src":"2238:78:12","statements":[{"expression":{"arguments":[{"id":2375,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"2281:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2376,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"2300:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2372,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"2252:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3120_$","typeString":"type(library Address)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"2252:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2252:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2378,"nodeType":"ExpressionStatement","src":"2252:53:12"}]}}]},"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"1929:123:12","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2066:17:12","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"newImplementation","nameLocation":"2092:17:12","nodeType":"VariableDeclaration","scope":2382,"src":"2084:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"2084:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"data","nameLocation":"2124:4:12","nodeType":"VariableDeclaration","scope":2382,"src":"2111:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2356,"name":"bytes","nodeType":"ElementaryTypeName","src":"2111:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"forceCall","nameLocation":"2135:9:12","nodeType":"VariableDeclaration","scope":2382,"src":"2130:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2358,"name":"bool","nodeType":"ElementaryTypeName","src":"2130:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2083:62:12"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[],"src":"2155:0:12"},"scope":2587,"src":"2057:265:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"2596:820:12","statements":[{"condition":{"expression":{"arguments":[{"id":2394,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"2937:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2392,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"2910:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3260_$","typeString":"type(library StorageSlot)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2922:14:12","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":3193,"src":"2910:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$3159_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3159_storage_ptr","typeString":"struct StorageSlot.BooleanSlot storage pointer"}},"id":2396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2953:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"2910:48:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2432,"nodeType":"Block","src":"3028:382:12","statements":[{"clauses":[{"block":{"id":2417,"nodeType":"Block","src":"3122:115:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2411,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"3148:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2412,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"3156:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3178:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":2410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3140:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3140:82:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2416,"nodeType":"ExpressionStatement","src":"3140:82:12"}]},"errorName":"","id":2418,"nodeType":"TryCatchClause","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"slot","nameLocation":"3116:4:12","nodeType":"VariableDeclaration","scope":2418,"src":"3108:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:14:12"},"src":"3099:138:12"},{"block":{"id":2423,"nodeType":"Block","src":"3244:89:12","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3269:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":2419,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3262:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3262:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2422,"nodeType":"ExpressionStatement","src":"3262:56:12"}]},"errorName":"","id":2424,"nodeType":"TryCatchClause","src":"3238:95:12"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2403,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"3064:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2402,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"3046:17:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$2283_$","typeString":"type(contract IERC1822Proxiable)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$2283","typeString":"contract IERC1822Proxiable"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3083:13:12","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":2282,"src":"3046:50:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:52:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2425,"nodeType":"TryStatement","src":"3042:291:12"},{"expression":{"arguments":[{"id":2427,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"3364:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2428,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"3383:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2429,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"3389:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2426,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"3346:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3346:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2431,"nodeType":"ExpressionStatement","src":"3346:53:12"}]},"id":2433,"nodeType":"IfStatement","src":"2906:504:12","trueBody":{"id":2401,"nodeType":"Block","src":"2960:62:12","statements":[{"expression":{"arguments":[{"id":2398,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"2993:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2397,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"2974:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2400,"nodeType":"ExpressionStatement","src":"2974:37:12"}]}}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"2328:161:12","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2503:21:12","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"newImplementation","nameLocation":"2533:17:12","nodeType":"VariableDeclaration","scope":2435,"src":"2525:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"data","nameLocation":"2565:4:12","nodeType":"VariableDeclaration","scope":2435,"src":"2552:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2386,"name":"bytes","nodeType":"ElementaryTypeName","src":"2552:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"forceCall","nameLocation":"2576:9:12","nodeType":"VariableDeclaration","scope":2435,"src":"2571:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2388,"name":"bool","nodeType":"ElementaryTypeName","src":"2571:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2524:62:12"},"returnParameters":{"id":2391,"nodeType":"ParameterList","parameters":[],"src":"2596:0:12"},"scope":2587,"src":"2494:922:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"3422:189:12","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":2439,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3642:11:12","nodeType":"VariableDeclaration","scope":2587,"src":"3616:106:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:66:12","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2451,"nodeType":"Block","src":"3837:69:12","statements":[{"expression":{"expression":{"arguments":[{"id":2447,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"3881:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2445,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"3854:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3260_$","typeString":"type(library StorageSlot)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3866:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"3854:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3156_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3156_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3894:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"3854:45:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2444,"id":2450,"nodeType":"Return","src":"3847:52:12"}]},"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"3729:50:12","text":" @dev Returns the current admin."},"id":2452,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"3793:9:12","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[],"src":"3802:2:12"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2452,"src":"3828:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2442,"name":"address","nodeType":"ElementaryTypeName","src":"3828:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3827:9:12"},"scope":2587,"src":"3784:122:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2477,"nodeType":"Block","src":"4033:156:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"4051:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4071:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4063:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:12","typeDescriptions":{}}},"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4063:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4051:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4075:40:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":2458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4043:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"ExpressionStatement","src":"4043:73:12"},{"expression":{"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2471,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4153:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2468,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"4126:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3260_$","typeString":"type(library StorageSlot)"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4138:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"4126:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3156_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4126:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3156_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4166:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"4126:45:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2474,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"4174:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4126:56:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2476,"nodeType":"ExpressionStatement","src":"4126:56:12"}]},"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"3912:71:12","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":2478,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3997:9:12","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"newAdmin","nameLocation":"4015:8:12","nodeType":"VariableDeclaration","scope":2478,"src":"4007:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4006:18:12"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[],"src":"4033:0:12"},"scope":2587,"src":"3988:201:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2494,"nodeType":"Block","src":"4349:86:12","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2485,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4377:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2487,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4390:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2484,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"4364:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4364:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"EmitStatement","src":"4359:40:12"},{"expression":{"arguments":[{"id":2491,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4419:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2490,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4409:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4409:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2493,"nodeType":"ExpressionStatement","src":"4409:19:12"}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"4195:100:12","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4309:12:12","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"newAdmin","nameLocation":"4330:8:12","nodeType":"VariableDeclaration","scope":2495,"src":"4322:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"4322:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4321:18:12"},"returnParameters":{"id":2483,"nodeType":"ParameterList","parameters":[],"src":"4349:0:12"},"scope":2587,"src":"4300:135:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"4441:232:12","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":2499,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"4704:12:12","nodeType":"VariableDeclaration","scope":2587,"src":"4678:107:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4678:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4719:66:12","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"4902:70:12","statements":[{"expression":{"expression":{"arguments":[{"id":2507,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"4946:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2505,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"4919:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3260_$","typeString":"type(library StorageSlot)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4931:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"4919:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3156_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3156_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4960:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"4919:46:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2504,"id":2510,"nodeType":"Return","src":"4912:53:12"}]},"documentation":{"id":2500,"nodeType":"StructuredDocumentation","src":"4792:51:12","text":" @dev Returns the current beacon."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"4857:10:12","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[],"src":"4867:2:12"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"4893:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"4893:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4892:9:12"},"scope":2587,"src":"4848:124:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2547,"nodeType":"Block","src":"5101:324:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2521,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5138:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2519,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5119:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3120_$","typeString":"type(library Address)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5127:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2808,"src":"5119:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5119:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5150:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":2518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5111:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5111:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2525,"nodeType":"ExpressionStatement","src":"5111:79:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2530,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5248:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2529,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"5240:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2715_$","typeString":"type(contract IBeacon)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2715","typeString":"contract IBeacon"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5259:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"5240:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2527,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5221:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3120_$","typeString":"type(library Address)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5229:10:12","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2808,"src":"5221:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5221:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5290:50:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":2526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5200:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:150:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2537,"nodeType":"ExpressionStatement","src":"5200:150:12"},{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2541,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"5387:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2538,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"5360:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3260_$","typeString":"type(library StorageSlot)"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5372:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3182,"src":"5360:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3156_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5360:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3156_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5401:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"5360:46:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2544,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5409:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5360:58:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2546,"nodeType":"ExpressionStatement","src":"5360:58:12"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"4978:71:12","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5063:10:12","nodeType":"FunctionDefinition","parameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"newBeacon","nameLocation":"5082:9:12","nodeType":"VariableDeclaration","scope":2548,"src":"5074:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5073:19:12"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[],"src":"5101:0:12"},"scope":2587,"src":"5054:371:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2585,"nodeType":"Block","src":"5824:217:12","statements":[{"expression":{"arguments":[{"id":2559,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"5845:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2558,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"5834:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2561,"nodeType":"ExpressionStatement","src":"5834:21:12"},{"eventCall":{"arguments":[{"id":2563,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"5885:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2562,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"5870:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5870:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2565,"nodeType":"EmitStatement","src":"5865:30:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2566,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"5909:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5914:6:12","memberName":"length","nodeType":"MemberAccess","src":"5909:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5923:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5909:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2570,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"5928:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5909:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2584,"nodeType":"IfStatement","src":"5905:130:12","trueBody":{"id":2583,"nodeType":"Block","src":"5939:96:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2576,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"5990:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2575,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"5982:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2715_$","typeString":"type(contract IBeacon)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2715","typeString":"contract IBeacon"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:14:12","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"5982:33:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5982:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2580,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"6019:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2572,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5953:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3120_$","typeString":"type(library Address)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5961:20:12","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"5953:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5953:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2582,"nodeType":"ExpressionStatement","src":"5953:71:12"}]}}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"5431:292:12","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":2586,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"5737:23:12","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"newBeacon","nameLocation":"5769:9:12","nodeType":"VariableDeclaration","scope":2586,"src":"5761:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"5761:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"data","nameLocation":"5793:4:12","nodeType":"VariableDeclaration","scope":2586,"src":"5780:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2552,"name":"bytes","nodeType":"ElementaryTypeName","src":"5780:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"forceCall","nameLocation":"5804:9:12","nodeType":"VariableDeclaration","scope":2586,"src":"5799:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2554,"name":"bool","nodeType":"ElementaryTypeName","src":"5799:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5760:54:12"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[],"src":"5824:0:12"},"scope":2587,"src":"5728:313:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2588,"src":"517:5526:12","usedErrors":[],"usedEvents":[2260,2267,2272]}],"src":"116:5928:12"},"id":12},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[2639]},"id":2640,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2589,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":2590,"nodeType":"StructuredDocumentation","src":"124:598:13","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":2639,"linearizedBaseContracts":[2639],"name":"Proxy","nameLocation":"741:5:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2597,"nodeType":"Block","src":"1008:835:13","statements":[{"AST":{"nativeSrc":"1027:810:13","nodeType":"YulBlock","src":"1027:810:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1280:1:13","nodeType":"YulLiteral","src":"1280:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1283:1:13","nodeType":"YulLiteral","src":"1283:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1286:12:13","nodeType":"YulIdentifier","src":"1286:12:13"},"nativeSrc":"1286:14:13","nodeType":"YulFunctionCall","src":"1286:14:13"}],"functionName":{"name":"calldatacopy","nativeSrc":"1267:12:13","nodeType":"YulIdentifier","src":"1267:12:13"},"nativeSrc":"1267:34:13","nodeType":"YulFunctionCall","src":"1267:34:13"},"nativeSrc":"1267:34:13","nodeType":"YulExpressionStatement","src":"1267:34:13"},{"nativeSrc":"1428:74:13","nodeType":"YulVariableDeclaration","src":"1428:74:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1455:3:13","nodeType":"YulIdentifier","src":"1455:3:13"},"nativeSrc":"1455:5:13","nodeType":"YulFunctionCall","src":"1455:5:13"},{"name":"implementation","nativeSrc":"1462:14:13","nodeType":"YulIdentifier","src":"1462:14:13"},{"kind":"number","nativeSrc":"1478:1:13","nodeType":"YulLiteral","src":"1478:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1481:12:13","nodeType":"YulIdentifier","src":"1481:12:13"},"nativeSrc":"1481:14:13","nodeType":"YulFunctionCall","src":"1481:14:13"},{"kind":"number","nativeSrc":"1497:1:13","nodeType":"YulLiteral","src":"1497:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1500:1:13","nodeType":"YulLiteral","src":"1500:1:13","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1442:12:13","nodeType":"YulIdentifier","src":"1442:12:13"},"nativeSrc":"1442:60:13","nodeType":"YulFunctionCall","src":"1442:60:13"},"variables":[{"name":"result","nativeSrc":"1432:6:13","nodeType":"YulTypedName","src":"1432:6:13","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1570:1:13","nodeType":"YulLiteral","src":"1570:1:13","type":"","value":"0"},{"kind":"number","nativeSrc":"1573:1:13","nodeType":"YulLiteral","src":"1573:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1576:14:13","nodeType":"YulIdentifier","src":"1576:14:13"},"nativeSrc":"1576:16:13","nodeType":"YulFunctionCall","src":"1576:16:13"}],"functionName":{"name":"returndatacopy","nativeSrc":"1555:14:13","nodeType":"YulIdentifier","src":"1555:14:13"},"nativeSrc":"1555:38:13","nodeType":"YulFunctionCall","src":"1555:38:13"},"nativeSrc":"1555:38:13","nodeType":"YulExpressionStatement","src":"1555:38:13"},{"cases":[{"body":{"nativeSrc":"1688:59:13","nodeType":"YulBlock","src":"1688:59:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1713:1:13","nodeType":"YulLiteral","src":"1713:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1716:14:13","nodeType":"YulIdentifier","src":"1716:14:13"},"nativeSrc":"1716:16:13","nodeType":"YulFunctionCall","src":"1716:16:13"}],"functionName":{"name":"revert","nativeSrc":"1706:6:13","nodeType":"YulIdentifier","src":"1706:6:13"},"nativeSrc":"1706:27:13","nodeType":"YulFunctionCall","src":"1706:27:13"},"nativeSrc":"1706:27:13","nodeType":"YulExpressionStatement","src":"1706:27:13"}]},"nativeSrc":"1681:66:13","nodeType":"YulCase","src":"1681:66:13","value":{"kind":"number","nativeSrc":"1686:1:13","nodeType":"YulLiteral","src":"1686:1:13","type":"","value":"0"}},{"body":{"nativeSrc":"1768:59:13","nodeType":"YulBlock","src":"1768:59:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1793:1:13","nodeType":"YulLiteral","src":"1793:1:13","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1796:14:13","nodeType":"YulIdentifier","src":"1796:14:13"},"nativeSrc":"1796:16:13","nodeType":"YulFunctionCall","src":"1796:16:13"}],"functionName":{"name":"return","nativeSrc":"1786:6:13","nodeType":"YulIdentifier","src":"1786:6:13"},"nativeSrc":"1786:27:13","nodeType":"YulFunctionCall","src":"1786:27:13"},"nativeSrc":"1786:27:13","nodeType":"YulExpressionStatement","src":"1786:27:13"}]},"nativeSrc":"1760:67:13","nodeType":"YulCase","src":"1760:67:13","value":"default"}],"expression":{"name":"result","nativeSrc":"1614:6:13","nodeType":"YulIdentifier","src":"1614:6:13"},"nativeSrc":"1607:220:13","nodeType":"YulSwitch","src":"1607:220:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2593,"isOffset":false,"isSlot":false,"src":"1462:14:13","valueSize":1}],"id":2596,"nodeType":"InlineAssembly","src":"1018:819:13"}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"753:190:13","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":2598,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:13","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"implementation","nameLocation":"975:14:13","nodeType":"VariableDeclaration","scope":2598,"src":"967:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:13"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"1008:0:13"},"scope":2639,"src":"948:895:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"1849:173:13","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"id":2604,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2036:15:13","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[],"src":"2051:2:13"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"2085:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2084:9:13"},"scope":2639,"src":"2027:67:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2616,"nodeType":"Block","src":"2360:72:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2608,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"2370:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2610,"nodeType":"ExpressionStatement","src":"2370:17:13"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2612,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"2407:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2611,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"2397:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2615,"nodeType":"ExpressionStatement","src":"2397:28:13"}]},"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"2100:217:13","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":2617,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2331:9:13","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"2340:2:13"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[],"src":"2360:0:13"},"scope":2639,"src":"2322:110:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"2665:28:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2621,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"2675:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2623,"nodeType":"ExpressionStatement","src":"2675:11:13"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"2438:186:13","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":2625,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[],"src":"2637:2:13"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[],"src":"2665:0:13"},"scope":2639,"src":"2629:64:13","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":2632,"nodeType":"Block","src":"2888:28:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2629,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"2898:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2631,"nodeType":"ExpressionStatement","src":"2898:11:13"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"2699:149:13","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"id":2633,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[],"src":"2860:2:13"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[],"src":"2888:0:13"},"scope":2639,"src":"2853:63:13","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":2637,"nodeType":"Block","src":"3242:2:13","statements":[]},"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"2922:271:13","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."},"id":2638,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"3207:15:13","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[],"src":"3222:2:13"},"returnParameters":{"id":2636,"nodeType":"ParameterList","parameters":[],"src":"3242:0:13"},"scope":2639,"src":"3198:46:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2640,"src":"723:2523:13","usedErrors":[],"usedEvents":[]}],"src":"99:3148:13"},"id":13},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","exportedSymbols":{"Address":[3120],"BeaconProxy":[2705],"ERC1967Upgrade":[2587],"IBeacon":[2715],"IERC1822Proxiable":[2283],"IERC1967":[2273],"Proxy":[2639],"StorageSlot":[3260]},"id":2706,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2641,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:14"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"./IBeacon.sol","id":2642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2706,"sourceUnit":2716,"src":"137:23:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":2643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2706,"sourceUnit":2640,"src":"161:22:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol","file":"../ERC1967/ERC1967Upgrade.sol","id":2644,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2706,"sourceUnit":2588,"src":"184:39:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2646,"name":"Proxy","nameLocations":["604:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":2639,"src":"604:5:14"},"id":2647,"nodeType":"InheritanceSpecifier","src":"604:5:14"},{"baseName":{"id":2648,"name":"ERC1967Upgrade","nameLocations":["611:14:14"],"nodeType":"IdentifierPath","referencedDeclaration":2587,"src":"611:14:14"},"id":2649,"nodeType":"InheritanceSpecifier","src":"611:14:14"}],"canonicalName":"BeaconProxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"225:354:14","text":" @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"},"fullyImplemented":true,"id":2705,"linearizedBaseContracts":[2705,2587,2273,2639],"name":"BeaconProxy","nameLocation":"589:11:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2663,"nodeType":"Block","src":"1115:61:14","statements":[{"expression":{"arguments":[{"id":2658,"name":"beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"1149:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2659,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"1157:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1163:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2657,"name":"_upgradeBeaconToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"1125:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"ExpressionStatement","src":"1125:44:14"}]},"documentation":{"id":2650,"nodeType":"StructuredDocumentation","src":"632:423:14","text":" @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."},"id":2664,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"beacon","nameLocation":"1080:6:14","nodeType":"VariableDeclaration","scope":2664,"src":"1072:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"1072:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"data","nameLocation":"1101:4:14","nodeType":"VariableDeclaration","scope":2664,"src":"1088:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2653,"name":"bytes","nodeType":"ElementaryTypeName","src":"1088:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1071:35:14"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[],"src":"1115:0:14"},"scope":2705,"src":"1060:116:14","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":2673,"nodeType":"Block","src":"1305:36:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2670,"name":"_getBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1322:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2669,"id":2672,"nodeType":"Return","src":"1315:19:14"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"1182:59:14","text":" @dev Returns the current beacon address."},"id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"_beacon","nameLocation":"1255:7:14","nodeType":"FunctionDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[],"src":"1262:2:14"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"1296:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1295:9:14"},"scope":2705,"src":"1246:95:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2604],"body":{"id":2688,"nodeType":"Block","src":"1520:62:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2682,"name":"_getBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1545:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1545:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2681,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1537:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2715_$","typeString":"type(contract IBeacon)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1537:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2715","typeString":"contract IBeacon"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:14","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"1537:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1537:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2680,"id":2687,"nodeType":"Return","src":"1530:45:14"}]},"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"1347:92:14","text":" @dev Returns the current implementation address of the associated beacon."},"id":2689,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1453:15:14","nodeType":"FunctionDefinition","overrides":{"id":2677,"nodeType":"OverrideSpecifier","overrides":[],"src":"1493:8:14"},"parameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"1468:2:14"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2689,"src":"1511:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1510:9:14"},"scope":2705,"src":"1444:138:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2703,"nodeType":"Block","src":"2032:61:14","statements":[{"expression":{"arguments":[{"id":2698,"name":"beacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"2066:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2699,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"2074:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2080:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2697,"name":"_upgradeBeaconToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"2042:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2042:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2702,"nodeType":"ExpressionStatement","src":"2042:44:14"}]},"documentation":{"id":2690,"nodeType":"StructuredDocumentation","src":"1588:367:14","text":" @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"1969:10:14","nodeType":"FunctionDefinition","parameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"beacon","nameLocation":"1988:6:14","nodeType":"VariableDeclaration","scope":2704,"src":"1980:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"data","nameLocation":"2009:4:14","nodeType":"VariableDeclaration","scope":2704,"src":"1996:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2693,"name":"bytes","nodeType":"ElementaryTypeName","src":"1996:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1979:35:14"},"returnParameters":{"id":2696,"nodeType":"ParameterList","parameters":[],"src":"2032:0:14"},"scope":2705,"src":"1960:133:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2706,"src":"580:1515:14","usedErrors":[],"usedEvents":[2260,2267,2272]}],"src":"112:1984:14"},"id":14},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2715]},"id":2716,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2707,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"118:79:15","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2715,"linearizedBaseContracts":[2715],"name":"IBeacon","nameLocation":"208:7:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"222:162:15","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2714,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"398:14:15","nodeType":"FunctionDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[],"src":"412:2:15"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"438:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:9:15"},"scope":2715,"src":"389:58:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2716,"src":"198:251:15","usedErrors":[],"usedEvents":[]}],"src":"93:357:15"},"id":15},"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol","exportedSymbols":{"Address":[3120],"Context":[3150],"IBeacon":[2715],"Ownable":[2252],"UpgradeableBeacon":[2790]},"id":2791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2717,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:16"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"./IBeacon.sol","id":2718,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2791,"sourceUnit":2716,"src":"128:23:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"../../access/Ownable.sol","id":2719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2791,"sourceUnit":2253,"src":"152:34:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2720,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2791,"sourceUnit":3121,"src":"187:33:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2722,"name":"IBeacon","nameLocations":["573:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2715,"src":"573:7:16"},"id":2723,"nodeType":"InheritanceSpecifier","src":"573:7:16"},{"baseName":{"id":2724,"name":"Ownable","nameLocations":["582:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2252,"src":"582:7:16"},"id":2725,"nodeType":"InheritanceSpecifier","src":"582:7:16"}],"canonicalName":"UpgradeableBeacon","contractDependencies":[],"contractKind":"contract","documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"222:320:16","text":" @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."},"fullyImplemented":true,"id":2790,"linearizedBaseContracts":[2790,2252,3150,2715],"name":"UpgradeableBeacon","nameLocation":"552:17:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2727,"mutability":"mutable","name":"_implementation","nameLocation":"612:15:16","nodeType":"VariableDeclaration","scope":2790,"src":"596:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2726,"name":"address","nodeType":"ElementaryTypeName","src":"596:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"634:90:16","text":" @dev Emitted when the implementation returned by the beacon is changed."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2732,"name":"Upgraded","nameLocation":"735:8:16","nodeType":"EventDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"760:14:16","nodeType":"VariableDeclaration","scope":2732,"src":"744:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"743:32:16"},"src":"729:47:16"},{"body":{"id":2742,"nodeType":"Block","src":"968:52:16","statements":[{"expression":{"arguments":[{"id":2739,"name":"implementation_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"997:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2738,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"978:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"978:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2741,"nodeType":"ExpressionStatement","src":"978:35:16"}]},"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"782:144:16","text":" @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."},"id":2743,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"implementation_","nameLocation":"951:15:16","nodeType":"VariableDeclaration","scope":2743,"src":"943:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"943:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"942:25:16"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[],"src":"968:0:16"},"scope":2790,"src":"931:89:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2714],"body":{"id":2752,"nodeType":"Block","src":"1171:39:16","statements":[{"expression":{"id":2750,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"1188:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2749,"id":2751,"nodeType":"Return","src":"1181:22:16"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"1026:67:16","text":" @dev Returns the current implementation address."},"functionSelector":"5c60da1b","id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"1107:14:16","nodeType":"FunctionDefinition","overrides":{"id":2746,"nodeType":"OverrideSpecifier","overrides":[],"src":"1144:8:16"},"parameters":{"id":2745,"nodeType":"ParameterList","parameters":[],"src":"1121:2:16"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2753,"src":"1162:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"1162:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1161:9:16"},"scope":2790,"src":"1098:112:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2769,"nodeType":"Block","src":"1540:96:16","statements":[{"expression":{"arguments":[{"id":2762,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"1569:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2761,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"1550:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1550:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2764,"nodeType":"ExpressionStatement","src":"1550:37:16"},{"eventCall":{"arguments":[{"id":2766,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"1611:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2765,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"1602:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2768,"nodeType":"EmitStatement","src":"1597:32:16"}]},"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"1216:248:16","text":" @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."},"functionSelector":"3659cfe6","id":2770,"implemented":true,"kind":"function","modifiers":[{"id":2759,"kind":"modifierInvocation","modifierName":{"id":2758,"name":"onlyOwner","nameLocations":["1530:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2171,"src":"1530:9:16"},"nodeType":"ModifierInvocation","src":"1530:9:16"}],"name":"upgradeTo","nameLocation":"1478:9:16","nodeType":"FunctionDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"newImplementation","nameLocation":"1496:17:16","nodeType":"VariableDeclaration","scope":2770,"src":"1488:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2755,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1487:27:16"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"1540:0:16"},"scope":2790,"src":"1469:167:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2788,"nodeType":"Block","src":"1874:163:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2779,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"1911:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2777,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"1892:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3120_$","typeString":"type(library Address)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1900:10:16","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2808,"src":"1892:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1931:53:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6","typeString":"literal_string \"UpgradeableBeacon: implementation is not a contract\""},"value":"UpgradeableBeacon: implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6","typeString":"literal_string \"UpgradeableBeacon: implementation is not a contract\""}],"id":2776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1884:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1884:101:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2783,"nodeType":"ExpressionStatement","src":"1884:101:16"},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2784,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"1995:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2785,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"2013:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1995:35:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2787,"nodeType":"ExpressionStatement","src":"1995:35:16"}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"1642:164:16","text":" @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."},"id":2789,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1820:18:16","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"newImplementation","nameLocation":"1847:17:16","nodeType":"VariableDeclaration","scope":2789,"src":"1839:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"1839:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:27:16"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[],"src":"1874:0:16"},"scope":2790,"src":"1811:226:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2791,"src":"543:1496:16","usedErrors":[],"usedEvents":[2153,2732]}],"src":"103:1937:16"},"id":16},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3120]},"id":3121,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2792,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"126:67:17","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3120,"linearizedBaseContracts":[3120],"name":"Address","nameLocation":"202:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2807,"nodeType":"Block","src":"1478:254:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2801,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"1702:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:17","memberName":"code","nodeType":"MemberAccess","src":"1702:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:17","memberName":"length","nodeType":"MemberAccess","src":"1702:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2800,"id":2806,"nodeType":"Return","src":"1695:30:17"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"216:1191:17","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:17","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"account","nameLocation":"1440:7:17","nodeType":"VariableDeclaration","scope":2808,"src":"1432:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:17"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2808,"src":"1472:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2798,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:17"},"scope":3120,"src":"1412:320:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2841,"nodeType":"Block","src":"2718:241:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2819,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3120","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3120","typeString":"library Address"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:17","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:17","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2822,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2761:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2826,"nodeType":"ExpressionStatement","src":"2728:73:17"},{"assignments":[2828,null],"declarations":[{"constant":false,"id":2828,"mutability":"mutable","name":"success","nameLocation":"2818:7:17","nodeType":"VariableDeclaration","scope":2841,"src":"2813:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2827,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2835,"initialValue":{"arguments":[{"hexValue":"","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2829,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2831:9:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:17","memberName":"call","nodeType":"MemberAccess","src":"2831:14:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"2853:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:17"},{"expression":{"arguments":[{"id":2837,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"2882:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2840,"nodeType":"ExpressionStatement","src":"2874:78:17"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"1738:904:17","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2842,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:17","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:17","nodeType":"VariableDeclaration","scope":2842,"src":"2666:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"amount","nameLocation":"2701:6:17","nodeType":"VariableDeclaration","scope":2842,"src":"2693:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:17"},"returnParameters":{"id":2815,"nodeType":"ParameterList","parameters":[],"src":"2718:0:17"},"scope":3120,"src":"2647:312:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2859,"nodeType":"Block","src":"3790:96:17","statements":[{"expression":{"arguments":[{"id":2853,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"3829:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2854,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"3837:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2852,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2900,2944],"referencedDeclaration":2944,"src":"3807:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2851,"id":2858,"nodeType":"Return","src":"3800:79:17"}]},"documentation":{"id":2843,"nodeType":"StructuredDocumentation","src":"2965:731:17","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:17","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"target","nameLocation":"3731:6:17","nodeType":"VariableDeclaration","scope":2860,"src":"3723:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2844,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2847,"mutability":"mutable","name":"data","nameLocation":"3752:4:17","nodeType":"VariableDeclaration","scope":2860,"src":"3739:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2846,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:17"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2860,"src":"3776:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2849,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:17"},"scope":3120,"src":"3701:185:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2879,"nodeType":"Block","src":"4255:76:17","statements":[{"expression":{"arguments":[{"id":2873,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"4294:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2874,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"4302:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2876,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"4311:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2872,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2900,2944],"referencedDeclaration":2944,"src":"4272:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2871,"id":2878,"nodeType":"Return","src":"4265:59:17"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"3892:211:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:17","nodeType":"FunctionDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"target","nameLocation":"4147:6:17","nodeType":"VariableDeclaration","scope":2880,"src":"4139:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"data","nameLocation":"4176:4:17","nodeType":"VariableDeclaration","scope":2880,"src":"4163:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2864,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:17","nodeType":"VariableDeclaration","scope":2880,"src":"4190:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2866,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:17"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2880,"src":"4241:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2869,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:17"},"scope":3120,"src":"4108:223:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2899,"nodeType":"Block","src":"4806:111:17","statements":[{"expression":{"arguments":[{"id":2893,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"4845:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2894,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"4853:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4859:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2892,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2900,2944],"referencedDeclaration":2944,"src":"4823:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2891,"id":2898,"nodeType":"Return","src":"4816:94:17"}]},"documentation":{"id":2881,"nodeType":"StructuredDocumentation","src":"4337:351:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2900,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:17","nodeType":"FunctionDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"target","nameLocation":"4732:6:17","nodeType":"VariableDeclaration","scope":2900,"src":"4724:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"data","nameLocation":"4753:4:17","nodeType":"VariableDeclaration","scope":2900,"src":"4740:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2884,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"value","nameLocation":"4767:5:17","nodeType":"VariableDeclaration","scope":2900,"src":"4759:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:17"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2900,"src":"4792:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2889,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:17"},"scope":3120,"src":"4693:224:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2943,"nodeType":"Block","src":"5344:267:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2917,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3120","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3120","typeString":"library Address"}],"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:17","typeDescriptions":{}}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:17","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"5387:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2924,"nodeType":"ExpressionStatement","src":"5354:81:17"},{"assignments":[2926,2928],"declarations":[{"constant":false,"id":2926,"mutability":"mutable","name":"success","nameLocation":"5451:7:17","nodeType":"VariableDeclaration","scope":2943,"src":"5446:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2925,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:17","nodeType":"VariableDeclaration","scope":2943,"src":"5460:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2927,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2935,"initialValue":{"arguments":[{"id":2933,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"5513:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2929,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"5487:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:17","memberName":"call","nodeType":"MemberAccess","src":"5487:11:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"5506:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:17"},{"expression":{"arguments":[{"id":2937,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"5562:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2938,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"5570:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2939,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"5579:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2940,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"5591:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2936,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"5535:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2913,"id":2942,"nodeType":"Return","src":"5528:76:17"}]},"documentation":{"id":2901,"nodeType":"StructuredDocumentation","src":"4923:237:17","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2944,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:17","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"target","nameLocation":"5213:6:17","nodeType":"VariableDeclaration","scope":2944,"src":"5205:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2902,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"data","nameLocation":"5242:4:17","nodeType":"VariableDeclaration","scope":2944,"src":"5229:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2904,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"value","nameLocation":"5264:5:17","nodeType":"VariableDeclaration","scope":2944,"src":"5256:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2906,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:17","nodeType":"VariableDeclaration","scope":2944,"src":"5279:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2908,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:17"},"returnParameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2944,"src":"5330:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2911,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:17"},"scope":3120,"src":"5165:446:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2960,"nodeType":"Block","src":"5888:97:17","statements":[{"expression":{"arguments":[{"id":2955,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"5924:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2956,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5932:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2954,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2961,2990],"referencedDeclaration":2990,"src":"5905:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2953,"id":2959,"nodeType":"Return","src":"5898:80:17"}]},"documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"5617:166:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:17","nodeType":"FunctionDefinition","parameters":{"id":2950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"target","nameLocation":"5824:6:17","nodeType":"VariableDeclaration","scope":2961,"src":"5816:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2946,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2949,"mutability":"mutable","name":"data","nameLocation":"5845:4:17","nodeType":"VariableDeclaration","scope":2961,"src":"5832:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2948,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:17"},"returnParameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2961,"src":"5874:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2951,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:17"},"scope":3120,"src":"5788:197:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"6327:168:17","statements":[{"assignments":[2974,2976],"declarations":[{"constant":false,"id":2974,"mutability":"mutable","name":"success","nameLocation":"6343:7:17","nodeType":"VariableDeclaration","scope":2989,"src":"6338:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2973,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:17","nodeType":"VariableDeclaration","scope":2989,"src":"6352:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2975,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2981,"initialValue":{"arguments":[{"id":2979,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"6397:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2977,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"6379:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:17","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:17","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:17"},{"expression":{"arguments":[{"id":2983,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"6446:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2984,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"6454:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2985,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"6463:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2986,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"6475:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2982,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"6419:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2972,"id":2988,"nodeType":"Return","src":"6412:76:17"}]},"documentation":{"id":2962,"nodeType":"StructuredDocumentation","src":"5991:173:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:17","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"target","nameLocation":"6214:6:17","nodeType":"VariableDeclaration","scope":2990,"src":"6206:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"data","nameLocation":"6243:4:17","nodeType":"VariableDeclaration","scope":2990,"src":"6230:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2965,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:17","nodeType":"VariableDeclaration","scope":2990,"src":"6257:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2967,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:17"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2990,"src":"6313:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2970,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:17"},"scope":3120,"src":"6169:326:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"6771:101:17","statements":[{"expression":{"arguments":[{"id":3001,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"6809:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3002,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"6817:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3000,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3007,3036],"referencedDeclaration":3036,"src":"6788:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2999,"id":3005,"nodeType":"Return","src":"6781:84:17"}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"6501:168:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:17","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"target","nameLocation":"6712:6:17","nodeType":"VariableDeclaration","scope":3007,"src":"6704:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"data","nameLocation":"6733:4:17","nodeType":"VariableDeclaration","scope":3007,"src":"6720:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2994,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:17"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"6757:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2997,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:17"},"scope":3120,"src":"6674:198:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3035,"nodeType":"Block","src":"7213:170:17","statements":[{"assignments":[3020,3022],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"success","nameLocation":"7229:7:17","nodeType":"VariableDeclaration","scope":3035,"src":"7224:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3019,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:17","nodeType":"VariableDeclaration","scope":3035,"src":"7238:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3021,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3027,"initialValue":{"arguments":[{"id":3025,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"7285:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3023,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7265:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:17","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:17","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:17"},{"expression":{"arguments":[{"id":3029,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7334:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3030,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"7342:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3031,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"7351:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3032,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"7363:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3028,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7307:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3018,"id":3034,"nodeType":"Return","src":"7300:76:17"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"6878:175:17","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:17","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"target","nameLocation":"7105:6:17","nodeType":"VariableDeclaration","scope":3036,"src":"7097:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3009,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"data","nameLocation":"7134:4:17","nodeType":"VariableDeclaration","scope":3036,"src":"7121:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3011,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:17","nodeType":"VariableDeclaration","scope":3036,"src":"7148:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3013,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:17"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3036,"src":"7199:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3016,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:17"},"scope":3120,"src":"7058:325:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3074,"nodeType":"Block","src":"7865:434:17","statements":[{"condition":{"id":3050,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"7879:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3072,"nodeType":"Block","src":"8235:58:17","statements":[{"expression":{"arguments":[{"id":3068,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"8257:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3069,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"8269:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3067,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"8249:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3071,"nodeType":"ExpressionStatement","src":"8249:33:17"}]},"id":3073,"nodeType":"IfStatement","src":"7875:418:17","trueBody":{"id":3066,"nodeType":"Block","src":"7888:341:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3051,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"7906:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:17","memberName":"length","nodeType":"MemberAccess","src":"7906:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"nodeType":"IfStatement","src":"7902:286:17","trueBody":{"id":3062,"nodeType":"Block","src":"7930:258:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3057,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"8132:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3056,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"8121:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3055,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3061,"nodeType":"ExpressionStatement","src":"8113:60:17"}]}},{"expression":{"id":3064,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"8208:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3049,"id":3065,"nodeType":"Return","src":"8201:17:17"}]}}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"7389:277:17","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3075,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:17","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"target","nameLocation":"7724:6:17","nodeType":"VariableDeclaration","scope":3075,"src":"7716:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3038,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"success","nameLocation":"7745:7:17","nodeType":"VariableDeclaration","scope":3075,"src":"7740:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3040,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3043,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:17","nodeType":"VariableDeclaration","scope":3075,"src":"7762:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3042,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:17","nodeType":"VariableDeclaration","scope":3075,"src":"7795:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3044,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:17"},"returnParameters":{"id":3049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3075,"src":"7851:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3047,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:17"},"scope":3120,"src":"7671:628:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3098,"nodeType":"Block","src":"8680:135:17","statements":[{"condition":{"id":3087,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"8694:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3096,"nodeType":"Block","src":"8751:58:17","statements":[{"expression":{"arguments":[{"id":3092,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"8773:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3093,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"8785:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3091,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"8765:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3095,"nodeType":"ExpressionStatement","src":"8765:33:17"}]},"id":3097,"nodeType":"IfStatement","src":"8690:119:17","trueBody":{"id":3090,"nodeType":"Block","src":"8703:42:17","statements":[{"expression":{"id":3088,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"8724:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3086,"id":3089,"nodeType":"Return","src":"8717:17:17"}]}}]},"documentation":{"id":3076,"nodeType":"StructuredDocumentation","src":"8305:210:17","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:17","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3078,"mutability":"mutable","name":"success","nameLocation":"8560:7:17","nodeType":"VariableDeclaration","scope":3099,"src":"8555:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3077,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:17","nodeType":"VariableDeclaration","scope":3099,"src":"8577:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3079,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3082,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:17","nodeType":"VariableDeclaration","scope":3099,"src":"8610:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3081,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:17"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3099,"src":"8666:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3084,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:17"},"scope":3120,"src":"8520:295:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3118,"nodeType":"Block","src":"8904:457:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3106,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"8980:10:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:17","memberName":"length","nodeType":"MemberAccess","src":"8980:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3116,"nodeType":"Block","src":"9310:45:17","statements":[{"expression":{"arguments":[{"id":3113,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"9331:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3112,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3115,"nodeType":"ExpressionStatement","src":"9324:20:17"}]},"id":3117,"nodeType":"IfStatement","src":"8976:379:17","trueBody":{"id":3111,"nodeType":"Block","src":"9003:301:17","statements":[{"AST":{"nativeSrc":"9161:133:17","nodeType":"YulBlock","src":"9161:133:17","statements":[{"nativeSrc":"9179:40:17","nodeType":"YulVariableDeclaration","src":"9179:40:17","value":{"arguments":[{"name":"returndata","nativeSrc":"9208:10:17","nodeType":"YulIdentifier","src":"9208:10:17"}],"functionName":{"name":"mload","nativeSrc":"9202:5:17","nodeType":"YulIdentifier","src":"9202:5:17"},"nativeSrc":"9202:17:17","nodeType":"YulFunctionCall","src":"9202:17:17"},"variables":[{"name":"returndata_size","nativeSrc":"9183:15:17","nodeType":"YulTypedName","src":"9183:15:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9247:2:17","nodeType":"YulLiteral","src":"9247:2:17","type":"","value":"32"},{"name":"returndata","nativeSrc":"9251:10:17","nodeType":"YulIdentifier","src":"9251:10:17"}],"functionName":{"name":"add","nativeSrc":"9243:3:17","nodeType":"YulIdentifier","src":"9243:3:17"},"nativeSrc":"9243:19:17","nodeType":"YulFunctionCall","src":"9243:19:17"},{"name":"returndata_size","nativeSrc":"9264:15:17","nodeType":"YulIdentifier","src":"9264:15:17"}],"functionName":{"name":"revert","nativeSrc":"9236:6:17","nodeType":"YulIdentifier","src":"9236:6:17"},"nativeSrc":"9236:44:17","nodeType":"YulFunctionCall","src":"9236:44:17"},"nativeSrc":"9236:44:17","nodeType":"YulExpressionStatement","src":"9236:44:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3101,"isOffset":false,"isSlot":false,"src":"9208:10:17","valueSize":1},{"declaration":3101,"isOffset":false,"isSlot":false,"src":"9251:10:17","valueSize":1}],"id":3110,"nodeType":"InlineAssembly","src":"9152:142:17"}]}}]},"id":3119,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:17","nodeType":"FunctionDefinition","parameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:17","nodeType":"VariableDeclaration","scope":3119,"src":"8838:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3100,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:17","nodeType":"VariableDeclaration","scope":3119,"src":"8863:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3102,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:17"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[],"src":"8904:0:17"},"scope":3120,"src":"8821:540:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3121,"src":"194:9169:17","usedErrors":[],"usedEvents":[]}],"src":"101:9263:17"},"id":17},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3150]},"id":3151,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3122,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:18"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"126:496:18","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3150,"linearizedBaseContracts":[3150],"name":"Context","nameLocation":"641:7:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3131,"nodeType":"Block","src":"717:34:18","statements":[{"expression":{"expression":{"id":3128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:18","memberName":"sender","nodeType":"MemberAccess","src":"734:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3127,"id":3130,"nodeType":"Return","src":"727:17:18"}]},"id":3132,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:18","nodeType":"FunctionDefinition","parameters":{"id":3124,"nodeType":"ParameterList","parameters":[],"src":"674:2:18"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3132,"src":"708:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:18"},"scope":3150,"src":"655:96:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3140,"nodeType":"Block","src":"824:32:18","statements":[{"expression":{"expression":{"id":3137,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:18","memberName":"data","nodeType":"MemberAccess","src":"841:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3136,"id":3139,"nodeType":"Return","src":"834:15:18"}]},"id":3141,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:18","nodeType":"FunctionDefinition","parameters":{"id":3133,"nodeType":"ParameterList","parameters":[],"src":"774:2:18"},"returnParameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3141,"src":"808:14:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3134,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:18"},"scope":3150,"src":"757:99:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3148,"nodeType":"Block","src":"934:25:18","statements":[{"expression":{"hexValue":"30","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3145,"id":3147,"nodeType":"Return","src":"944:8:18"}]},"id":3149,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:18","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[],"src":"891:2:18"},"returnParameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3149,"src":"925:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:18"},"scope":3150,"src":"862:97:18","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3151,"src":"623:338:18","usedErrors":[],"usedEvents":[]}],"src":"101:861:18"},"id":18},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3260]},"id":3261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3152,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"218:1201:19","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":3260,"linearizedBaseContracts":[3260],"name":"StorageSlot","nameLocation":"1428:11:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3156,"members":[{"constant":false,"id":3155,"mutability":"mutable","name":"value","nameLocation":"1483:5:19","nodeType":"VariableDeclaration","scope":3156,"src":"1475:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3154,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:19","nodeType":"StructDefinition","scope":3260,"src":"1446:49:19","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3159,"members":[{"constant":false,"id":3158,"mutability":"mutable","name":"value","nameLocation":"1535:5:19","nodeType":"VariableDeclaration","scope":3159,"src":"1530:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3157,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:19","nodeType":"StructDefinition","scope":3260,"src":"1501:46:19","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3162,"members":[{"constant":false,"id":3161,"mutability":"mutable","name":"value","nameLocation":"1590:5:19","nodeType":"VariableDeclaration","scope":3162,"src":"1582:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:19","nodeType":"StructDefinition","scope":3260,"src":"1553:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3165,"members":[{"constant":false,"id":3164,"mutability":"mutable","name":"value","nameLocation":"1645:5:19","nodeType":"VariableDeclaration","scope":3165,"src":"1637:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:19","nodeType":"StructDefinition","scope":3260,"src":"1608:49:19","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3168,"members":[{"constant":false,"id":3167,"mutability":"mutable","name":"value","nameLocation":"1698:5:19","nodeType":"VariableDeclaration","scope":3168,"src":"1691:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3166,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:19","nodeType":"StructDefinition","scope":3260,"src":"1663:47:19","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3171,"members":[{"constant":false,"id":3170,"mutability":"mutable","name":"value","nameLocation":"1749:5:19","nodeType":"VariableDeclaration","scope":3171,"src":"1743:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3169,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:19","nodeType":"StructDefinition","scope":3260,"src":"1716:45:19","visibility":"public"},{"body":{"id":3181,"nodeType":"Block","src":"1943:106:19","statements":[{"AST":{"nativeSrc":"2005:38:19","nodeType":"YulBlock","src":"2005:38:19","statements":[{"nativeSrc":"2019:14:19","nodeType":"YulAssignment","src":"2019:14:19","value":{"name":"slot","nativeSrc":"2029:4:19","nodeType":"YulIdentifier","src":"2029:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2019:6:19","nodeType":"YulIdentifier","src":"2019:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3178,"isOffset":false,"isSlot":true,"src":"2019:6:19","suffix":"slot","valueSize":1},{"declaration":3174,"isOffset":false,"isSlot":false,"src":"2029:4:19","valueSize":1}],"id":3180,"nodeType":"InlineAssembly","src":"1996:47:19"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"1767:87:19","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:19","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"slot","nameLocation":"1891:4:19","nodeType":"VariableDeclaration","scope":3182,"src":"1883:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:19"},"returnParameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"r","nameLocation":"1940:1:19","nodeType":"VariableDeclaration","scope":3182,"src":"1920:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3156_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3177,"nodeType":"UserDefinedTypeName","pathNode":{"id":3176,"name":"AddressSlot","nameLocations":["1920:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"1920:11:19"},"referencedDeclaration":3156,"src":"1920:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3156_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:19"},"scope":3260,"src":"1859:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3192,"nodeType":"Block","src":"2231:106:19","statements":[{"AST":{"nativeSrc":"2293:38:19","nodeType":"YulBlock","src":"2293:38:19","statements":[{"nativeSrc":"2307:14:19","nodeType":"YulAssignment","src":"2307:14:19","value":{"name":"slot","nativeSrc":"2317:4:19","nodeType":"YulIdentifier","src":"2317:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2307:6:19","nodeType":"YulIdentifier","src":"2307:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3189,"isOffset":false,"isSlot":true,"src":"2307:6:19","suffix":"slot","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"2317:4:19","valueSize":1}],"id":3191,"nodeType":"InlineAssembly","src":"2284:47:19"}]},"documentation":{"id":3183,"nodeType":"StructuredDocumentation","src":"2055:87:19","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:19","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"slot","nameLocation":"2179:4:19","nodeType":"VariableDeclaration","scope":3193,"src":"2171:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:19"},"returnParameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"r","nameLocation":"2228:1:19","nodeType":"VariableDeclaration","scope":3193,"src":"2208:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3159_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"BooleanSlot","nameLocations":["2208:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"2208:11:19"},"referencedDeclaration":3159,"src":"2208:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3159_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:19"},"scope":3260,"src":"2147:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3203,"nodeType":"Block","src":"2519:106:19","statements":[{"AST":{"nativeSrc":"2581:38:19","nodeType":"YulBlock","src":"2581:38:19","statements":[{"nativeSrc":"2595:14:19","nodeType":"YulAssignment","src":"2595:14:19","value":{"name":"slot","nativeSrc":"2605:4:19","nodeType":"YulIdentifier","src":"2605:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2595:6:19","nodeType":"YulIdentifier","src":"2595:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3200,"isOffset":false,"isSlot":true,"src":"2595:6:19","suffix":"slot","valueSize":1},{"declaration":3196,"isOffset":false,"isSlot":false,"src":"2605:4:19","valueSize":1}],"id":3202,"nodeType":"InlineAssembly","src":"2572:47:19"}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"2343:87:19","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":3204,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:19","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"slot","nameLocation":"2467:4:19","nodeType":"VariableDeclaration","scope":3204,"src":"2459:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:19"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"mutability":"mutable","name":"r","nameLocation":"2516:1:19","nodeType":"VariableDeclaration","scope":3204,"src":"2496:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3162_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3199,"nodeType":"UserDefinedTypeName","pathNode":{"id":3198,"name":"Bytes32Slot","nameLocations":["2496:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3162,"src":"2496:11:19"},"referencedDeclaration":3162,"src":"2496:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3162_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:19"},"scope":3260,"src":"2435:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3214,"nodeType":"Block","src":"2807:106:19","statements":[{"AST":{"nativeSrc":"2869:38:19","nodeType":"YulBlock","src":"2869:38:19","statements":[{"nativeSrc":"2883:14:19","nodeType":"YulAssignment","src":"2883:14:19","value":{"name":"slot","nativeSrc":"2893:4:19","nodeType":"YulIdentifier","src":"2893:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"2883:6:19","nodeType":"YulIdentifier","src":"2883:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3211,"isOffset":false,"isSlot":true,"src":"2883:6:19","suffix":"slot","valueSize":1},{"declaration":3207,"isOffset":false,"isSlot":false,"src":"2893:4:19","valueSize":1}],"id":3213,"nodeType":"InlineAssembly","src":"2860:47:19"}]},"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"2631:87:19","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":3215,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:19","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"slot","nameLocation":"2755:4:19","nodeType":"VariableDeclaration","scope":3215,"src":"2747:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:19"},"returnParameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"r","nameLocation":"2804:1:19","nodeType":"VariableDeclaration","scope":3215,"src":"2784:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3165_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3210,"nodeType":"UserDefinedTypeName","pathNode":{"id":3209,"name":"Uint256Slot","nameLocations":["2784:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3165,"src":"2784:11:19"},"referencedDeclaration":3165,"src":"2784:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3165_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:19"},"scope":3260,"src":"2723:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3225,"nodeType":"Block","src":"3092:106:19","statements":[{"AST":{"nativeSrc":"3154:38:19","nodeType":"YulBlock","src":"3154:38:19","statements":[{"nativeSrc":"3168:14:19","nodeType":"YulAssignment","src":"3168:14:19","value":{"name":"slot","nativeSrc":"3178:4:19","nodeType":"YulIdentifier","src":"3178:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3168:6:19","nodeType":"YulIdentifier","src":"3168:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3222,"isOffset":false,"isSlot":true,"src":"3168:6:19","suffix":"slot","valueSize":1},{"declaration":3218,"isOffset":false,"isSlot":false,"src":"3178:4:19","valueSize":1}],"id":3224,"nodeType":"InlineAssembly","src":"3145:47:19"}]},"documentation":{"id":3216,"nodeType":"StructuredDocumentation","src":"2919:86:19","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":3226,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:19","nodeType":"FunctionDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"slot","nameLocation":"3041:4:19","nodeType":"VariableDeclaration","scope":3226,"src":"3033:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:19"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"r","nameLocation":"3089:1:19","nodeType":"VariableDeclaration","scope":3226,"src":"3070:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3168_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3221,"nodeType":"UserDefinedTypeName","pathNode":{"id":3220,"name":"StringSlot","nameLocations":["3070:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3168,"src":"3070:10:19"},"referencedDeclaration":3168,"src":"3070:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3168_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:19"},"scope":3260,"src":"3010:188:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3236,"nodeType":"Block","src":"3400:112:19","statements":[{"AST":{"nativeSrc":"3462:44:19","nodeType":"YulBlock","src":"3462:44:19","statements":[{"nativeSrc":"3476:20:19","nodeType":"YulAssignment","src":"3476:20:19","value":{"name":"store.slot","nativeSrc":"3486:10:19","nodeType":"YulIdentifier","src":"3486:10:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3476:6:19","nodeType":"YulIdentifier","src":"3476:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3233,"isOffset":false,"isSlot":true,"src":"3476:6:19","suffix":"slot","valueSize":1},{"declaration":3229,"isOffset":false,"isSlot":true,"src":"3486:10:19","suffix":"slot","valueSize":1}],"id":3235,"nodeType":"InlineAssembly","src":"3453:53:19"}]},"documentation":{"id":3227,"nodeType":"StructuredDocumentation","src":"3204:101:19","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3237,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:19","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"store","nameLocation":"3348:5:19","nodeType":"VariableDeclaration","scope":3237,"src":"3333:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3228,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:19"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"r","nameLocation":"3397:1:19","nodeType":"VariableDeclaration","scope":3237,"src":"3378:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3168_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3232,"nodeType":"UserDefinedTypeName","pathNode":{"id":3231,"name":"StringSlot","nameLocations":["3378:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3168,"src":"3378:10:19"},"referencedDeclaration":3168,"src":"3378:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3168_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:19"},"scope":3260,"src":"3310:202:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3247,"nodeType":"Block","src":"3688:106:19","statements":[{"AST":{"nativeSrc":"3750:38:19","nodeType":"YulBlock","src":"3750:38:19","statements":[{"nativeSrc":"3764:14:19","nodeType":"YulAssignment","src":"3764:14:19","value":{"name":"slot","nativeSrc":"3774:4:19","nodeType":"YulIdentifier","src":"3774:4:19"},"variableNames":[{"name":"r.slot","nativeSrc":"3764:6:19","nodeType":"YulIdentifier","src":"3764:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3244,"isOffset":false,"isSlot":true,"src":"3764:6:19","suffix":"slot","valueSize":1},{"declaration":3240,"isOffset":false,"isSlot":false,"src":"3774:4:19","valueSize":1}],"id":3246,"nodeType":"InlineAssembly","src":"3741:47:19"}]},"documentation":{"id":3238,"nodeType":"StructuredDocumentation","src":"3518:85:19","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":3248,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:19","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"slot","nameLocation":"3638:4:19","nodeType":"VariableDeclaration","scope":3248,"src":"3630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:19"},"returnParameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"r","nameLocation":"3685:1:19","nodeType":"VariableDeclaration","scope":3248,"src":"3667:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3171_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3243,"nodeType":"UserDefinedTypeName","pathNode":{"id":3242,"name":"BytesSlot","nameLocations":["3667:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3171,"src":"3667:9:19"},"referencedDeclaration":3171,"src":"3667:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3171_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:19"},"scope":3260,"src":"3608:186:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3258,"nodeType":"Block","src":"3991:112:19","statements":[{"AST":{"nativeSrc":"4053:44:19","nodeType":"YulBlock","src":"4053:44:19","statements":[{"nativeSrc":"4067:20:19","nodeType":"YulAssignment","src":"4067:20:19","value":{"name":"store.slot","nativeSrc":"4077:10:19","nodeType":"YulIdentifier","src":"4077:10:19"},"variableNames":[{"name":"r.slot","nativeSrc":"4067:6:19","nodeType":"YulIdentifier","src":"4067:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3255,"isOffset":false,"isSlot":true,"src":"4067:6:19","suffix":"slot","valueSize":1},{"declaration":3251,"isOffset":false,"isSlot":true,"src":"4077:10:19","suffix":"slot","valueSize":1}],"id":3257,"nodeType":"InlineAssembly","src":"4044:53:19"}]},"documentation":{"id":3249,"nodeType":"StructuredDocumentation","src":"3800:99:19","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:19","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"store","nameLocation":"3940:5:19","nodeType":"VariableDeclaration","scope":3259,"src":"3926:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3250,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:19"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"r","nameLocation":"3988:1:19","nodeType":"VariableDeclaration","scope":3259,"src":"3970:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3171_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3254,"nodeType":"UserDefinedTypeName","pathNode":{"id":3253,"name":"BytesSlot","nameLocations":["3970:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3171,"src":"3970:9:19"},"referencedDeclaration":3171,"src":"3970:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3171_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:19"},"scope":3260,"src":"3904:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3261,"src":"1420:2685:19","usedErrors":[],"usedEvents":[]}],"src":"193:3913:19"},"id":19},"src/contracts/V4DistributionModule.sol":{"ast":{"absolutePath":"src/contracts/V4DistributionModule.sol","exportedSymbols":{"AddressUpgradeable":[1475],"ContextUpgradeable":[1526],"EnumerableSetUpgradeable":[2139],"IV4DistributionModule":[5335],"IV4Module":[5367],"IV4TokenBase":[5525],"Initializable":[301],"OwnableUpgradeable":[132],"V4DistributionModule":[4171]},"id":4172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3262,"literals":["solidity","0.8",".22"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3263,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4172,"sourceUnit":302,"src":"57:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4172,"sourceUnit":133,"src":"133:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","id":3265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4172,"sourceUnit":2140,"src":"209:88:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4DistributionModule.sol","file":"./interfaces/IV4DistributionModule.sol","id":3266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4172,"sourceUnit":5336,"src":"298:48:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4Module.sol","file":"./interfaces/IV4Module.sol","id":3267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4172,"sourceUnit":5368,"src":"347:36:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4TokenBase.sol","file":"./interfaces/IV4TokenBase.sol","id":3268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4172,"sourceUnit":5526,"src":"384:39:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3270,"name":"Initializable","nameLocations":["577:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"577:13:20"},"id":3271,"nodeType":"InheritanceSpecifier","src":"577:13:20"},{"baseName":{"id":3272,"name":"OwnableUpgradeable","nameLocations":["597:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"597:18:20"},"id":3273,"nodeType":"InheritanceSpecifier","src":"597:18:20"},{"baseName":{"id":3274,"name":"IV4DistributionModule","nameLocations":["622:21:20"],"nodeType":"IdentifierPath","referencedDeclaration":5335,"src":"622:21:20"},"id":3275,"nodeType":"InheritanceSpecifier","src":"622:21:20"},{"baseName":{"id":3276,"name":"IV4Module","nameLocations":["649:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":5367,"src":"649:9:20"},"id":3277,"nodeType":"InheritanceSpecifier","src":"649:9:20"}],"canonicalName":"V4DistributionModule","contractDependencies":[],"contractKind":"contract","documentation":{"id":3269,"nodeType":"StructuredDocumentation","src":"425:113:20","text":" @title V4DistributionModule\n @dev Implementation of distribution module with allocation capabilities"},"fullyImplemented":true,"id":4171,"linearizedBaseContracts":[4171,5367,5335,132,1526,301],"name":"V4DistributionModule","nameLocation":"548:20:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3281,"libraryName":{"id":3278,"name":"EnumerableSetUpgradeable","nameLocations":["671:24:20"],"nodeType":"IdentifierPath","referencedDeclaration":2139,"src":"671:24:20"},"nodeType":"UsingForDirective","src":"665:71:20","typeName":{"id":3280,"nodeType":"UserDefinedTypeName","pathNode":{"id":3279,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["700:24:20","725:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"700:35:20"},"referencedDeclaration":1852,"src":"700:35:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"id":3283,"mutability":"mutable","name":"_token","nameLocation":"802:6:20","nodeType":"VariableDeclaration","scope":4171,"src":"786:22:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3286,"mutability":"mutable","name":"_allocationWallets","nameLocation":"890:18:20","nodeType":"VariableDeclaration","scope":4171,"src":"846:62:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":3285,"nodeType":"UserDefinedTypeName","pathNode":{"id":3284,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["846:24:20","871:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"846:35:20"},"referencedDeclaration":1852,"src":"846:35:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"private"},{"constant":false,"id":3291,"mutability":"mutable","name":"_allocations","nameLocation":"953:12:20","nodeType":"VariableDeclaration","scope":4171,"src":"914:51:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation)"},"typeName":{"id":3290,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"922:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"914:30:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3289,"nodeType":"UserDefinedTypeName","pathNode":{"id":3288,"name":"Allocation","nameLocations":["933:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"933:10:20"},"referencedDeclaration":5242,"src":"933:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"}}},"visibility":"private"},{"constant":false,"id":3293,"mutability":"mutable","name":"_totalAllocated","nameLocation":"987:15:20","nodeType":"VariableDeclaration","scope":4171,"src":"971:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3295,"mutability":"mutable","name":"_distributionExecuted","nameLocation":"1021:21:20","nodeType":"VariableDeclaration","scope":4171,"src":"1008:34:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3294,"name":"bool","nodeType":"ElementaryTypeName","src":"1008:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":true,"functionSelector":"ffa1ad74","id":3298,"mutability":"constant","name":"VERSION","nameLocation":"1096:7:20","nodeType":"VariableDeclaration","scope":4171,"src":"1073:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3296,"name":"string","nodeType":"ElementaryTypeName","src":"1073:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"342e302e30","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1106:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_81ed76178093786cbe0cb79744f6e7ca3336fbb9fe7d1ddff1f0157b63e09813","typeString":"literal_string \"4.0.0\""},"value":"4.0.0"},"visibility":"public"},{"anonymous":false,"eventSelector":"3241139af5e2a8b260ac9c371bbcd5da66ac3ce01dfc401fb973a1f174a1bc07","id":3310,"name":"AllocationAdded","nameLocation":"1144:15:20","nodeType":"EventDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"1176:6:20","nodeType":"VariableDeclaration","scope":3310,"src":"1160:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3299,"name":"address","nodeType":"ElementaryTypeName","src":"1160:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3302,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1192:6:20","nodeType":"VariableDeclaration","scope":3310,"src":"1184:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3304,"indexed":false,"mutability":"mutable","name":"label","nameLocation":"1207:5:20","nodeType":"VariableDeclaration","scope":3310,"src":"1200:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3303,"name":"string","nodeType":"ElementaryTypeName","src":"1200:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3306,"indexed":false,"mutability":"mutable","name":"locked","nameLocation":"1219:6:20","nodeType":"VariableDeclaration","scope":3310,"src":"1214:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3305,"name":"bool","nodeType":"ElementaryTypeName","src":"1214:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3308,"indexed":false,"mutability":"mutable","name":"unlockTime","nameLocation":"1235:10:20","nodeType":"VariableDeclaration","scope":3310,"src":"1227:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1159:87:20"},"src":"1138:109:20"},{"anonymous":false,"eventSelector":"85f179d4205edd87e18c80df3160316df70c87a3c515d0650c32dae6ead80afd","id":3314,"name":"AllocationRemoved","nameLocation":"1258:17:20","nodeType":"EventDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"1292:6:20","nodeType":"VariableDeclaration","scope":3314,"src":"1276:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3311,"name":"address","nodeType":"ElementaryTypeName","src":"1276:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1275:24:20"},"src":"1252:48:20"},{"anonymous":false,"eventSelector":"a3c835fcd4d2b819d5e8f590f6b36f796e7b73652831d08cfca45f22a6d43b7b","id":3326,"name":"AllocationModified","nameLocation":"1311:18:20","nodeType":"EventDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"1346:6:20","nodeType":"VariableDeclaration","scope":3326,"src":"1330:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3315,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3318,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1362:6:20","nodeType":"VariableDeclaration","scope":3326,"src":"1354:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3320,"indexed":false,"mutability":"mutable","name":"label","nameLocation":"1377:5:20","nodeType":"VariableDeclaration","scope":3326,"src":"1370:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3319,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3322,"indexed":false,"mutability":"mutable","name":"locked","nameLocation":"1389:6:20","nodeType":"VariableDeclaration","scope":3326,"src":"1384:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3321,"name":"bool","nodeType":"ElementaryTypeName","src":"1384:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3324,"indexed":false,"mutability":"mutable","name":"unlockTime","nameLocation":"1405:10:20","nodeType":"VariableDeclaration","scope":3326,"src":"1397:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1329:87:20"},"src":"1305:112:20"},{"anonymous":false,"eventSelector":"219b165c65b7e1a5744d1a2543bb34326ac29d73e03bdac1abc7290ccd6c2610","id":3332,"name":"DistributionExecuted","nameLocation":"1428:20:20","nodeType":"EventDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"indexed":false,"mutability":"mutable","name":"totalDistributed","nameLocation":"1457:16:20","nodeType":"VariableDeclaration","scope":3332,"src":"1449:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1449:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3330,"indexed":false,"mutability":"mutable","name":"walletCount","nameLocation":"1483:11:20","nodeType":"VariableDeclaration","scope":3332,"src":"1475:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1448:47:20"},"src":"1422:74:20"},{"anonymous":false,"eventSelector":"e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888","id":3338,"name":"TokensUnlocked","nameLocation":"1507:14:20","nodeType":"EventDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"1538:6:20","nodeType":"VariableDeclaration","scope":3338,"src":"1522:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"1522:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3336,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1554:6:20","nodeType":"VariableDeclaration","scope":3338,"src":"1546:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1546:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1521:40:20"},"src":"1501:61:20"},{"body":{"id":3345,"nodeType":"Block","src":"1686:39:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3342,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"1696:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3344,"nodeType":"ExpressionStatement","src":"1696:22:20"}]},"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"1572:95:20","text":" @dev Constructor that disables initialization on the implementation contract"},"id":3346,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3340,"nodeType":"ParameterList","parameters":[],"src":"1683:2:20"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[],"src":"1686:0:20"},"scope":4171,"src":"1672:53:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5346],"body":{"id":3402,"nodeType":"Block","src":"2019:362:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3358,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"2037:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2042:6:20","memberName":"length","nodeType":"MemberAccess","src":"2037:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2052:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2037:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20696e76616c696420696e697469616c697a6174696f6e2064617461","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2056:51:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8abab656a2a214dd2ea47fe660325d04cc33405f1b5bbe0c71f15ae3bf1840da","typeString":"literal_string \"V4DistributionModule: invalid initialization data\""},"value":"V4DistributionModule: invalid initialization data"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8abab656a2a214dd2ea47fe660325d04cc33405f1b5bbe0c71f15ae3bf1840da","typeString":"literal_string \"V4DistributionModule: invalid initialization data\""}],"id":3357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2029:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2029:79:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3364,"nodeType":"ExpressionStatement","src":"2029:79:20"},{"assignments":[3366],"declarations":[{"constant":false,"id":3366,"mutability":"mutable","name":"owner","nameLocation":"2126:5:20","nodeType":"VariableDeclaration","scope":3402,"src":"2118:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3365,"name":"address","nodeType":"ElementaryTypeName","src":"2118:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3380,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":3375,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"2166:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2158:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:20","typeDescriptions":{}}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2158:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2150:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2150:7:20","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2150:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2142:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3369,"name":"uint160","nodeType":"ElementaryTypeName","src":"2142:7:20","typeDescriptions":{}}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2142:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2134:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3367,"name":"address","nodeType":"ElementaryTypeName","src":"2134:7:20","typeDescriptions":{}}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2134:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2118:56:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3381,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2184:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2184:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3383,"nodeType":"ExpressionStatement","src":"2184:16:20"},{"expression":{"arguments":[{"id":3385,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"2229:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3384,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2210:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2210:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3387,"nodeType":"ExpressionStatement","src":"2210:25:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"2262:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2286:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2278:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:20","typeDescriptions":{}}},"id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2278:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2262:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20746f6b656e20616464726573732063616e6e6f74206265207a65726f","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2290:52:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a4802bcc24f37901929d01c27ead15805406d33ddaa35bb5340154046cc7ad79","typeString":"literal_string \"V4DistributionModule: token address cannot be zero\""},"value":"V4DistributionModule: token address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a4802bcc24f37901929d01c27ead15805406d33ddaa35bb5340154046cc7ad79","typeString":"literal_string \"V4DistributionModule: token address cannot be zero\""}],"id":3388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2254:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2254:89:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3397,"nodeType":"ExpressionStatement","src":"2254:89:20"},{"expression":{"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3398,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"2353:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3399,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"2362:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2353:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3401,"nodeType":"ExpressionStatement","src":"2353:21:20"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"1735:186:20","text":" @dev Initialize the module\n @param tokenAddress Address of the token this module is attached to\n @param data Additional initialization data (owner address)"},"functionSelector":"d1f57894","id":3403,"implemented":true,"kind":"function","modifiers":[{"id":3355,"kind":"modifierInvocation","modifierName":{"id":3354,"name":"initializer","nameLocations":["2007:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"2007:11:20"},"nodeType":"ModifierInvocation","src":"2007:11:20"}],"name":"initialize","nameLocation":"1935:10:20","nodeType":"FunctionDefinition","overrides":{"id":3353,"nodeType":"OverrideSpecifier","overrides":[],"src":"1998:8:20"},"parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"tokenAddress","nameLocation":"1954:12:20","nodeType":"VariableDeclaration","scope":3403,"src":"1946:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3348,"name":"address","nodeType":"ElementaryTypeName","src":"1946:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"data","nameLocation":"1983:4:20","nodeType":"VariableDeclaration","scope":3403,"src":"1968:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3350,"name":"bytes","nodeType":"ElementaryTypeName","src":"1968:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1945:43:20"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[],"src":"2019:0:20"},"scope":4171,"src":"1926:455:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5352],"body":{"id":3414,"nodeType":"Block","src":"2582:56:20","statements":[{"expression":{"arguments":[{"hexValue":"444953545249425554494f4e5f4d4f44554c45","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2609:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e4379ad5abe51b1f38d7c717558b084ca50f05c182778be47e8aa04793cfe2d","typeString":"literal_string \"DISTRIBUTION_MODULE\""},"value":"DISTRIBUTION_MODULE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e4379ad5abe51b1f38d7c717558b084ca50f05c182778be47e8aa04793cfe2d","typeString":"literal_string \"DISTRIBUTION_MODULE\""}],"id":3410,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2599:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3409,"id":3413,"nodeType":"Return","src":"2592:39:20"}]},"documentation":{"id":3404,"nodeType":"StructuredDocumentation","src":"2391:109:20","text":" @dev Get the type of this module\n @return moduleType Type identifier for this module"},"functionSelector":"0b9349b9","id":3415,"implemented":true,"kind":"function","modifiers":[],"name":"getModuleType","nameLocation":"2514:13:20","nodeType":"FunctionDefinition","overrides":{"id":3406,"nodeType":"OverrideSpecifier","overrides":[],"src":"2544:8:20"},"parameters":{"id":3405,"nodeType":"ParameterList","parameters":[],"src":"2527:2:20"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"moduleType","nameLocation":"2570:10:20","nodeType":"VariableDeclaration","scope":3415,"src":"2562:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2562:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2561:20:20"},"scope":4171,"src":"2505:133:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5360],"body":{"id":3472,"nodeType":"Block","src":"2945:645:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"2975:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3425,"name":"IV4DistributionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"2990:21:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4DistributionModule_$5335_$","typeString":"type(contract IV4DistributionModule)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3012:13:20","memberName":"addAllocation","nodeType":"MemberAccess","referencedDeclaration":5258,"src":"2990:35:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_string_calldata_ptr_$_t_bool_$_t_uint256_$returns$_t_bool_$","typeString":"function IV4DistributionModule.addAllocation(address,uint256,string calldata,bool,uint256) returns (bool)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3026:8:20","memberName":"selector","nodeType":"MemberAccess","src":"2990:44:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2975:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3429,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"3050:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3430,"name":"IV4DistributionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3065:21:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4DistributionModule_$5335_$","typeString":"type(contract IV4DistributionModule)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3087:22:20","memberName":"addMultipleAllocations","nodeType":"MemberAccess","referencedDeclaration":5279,"src":"3065:44:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_string_calldata_ptr_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function IV4DistributionModule.addMultipleAllocations(address[] calldata,uint256[] calldata,string calldata[] calldata,bool[] calldata,uint256[] calldata) returns (bool)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3110:8:20","memberName":"selector","nodeType":"MemberAccess","src":"3065:53:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3050:68:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2975:143:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"3134:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3436,"name":"IV4DistributionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3149:21:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4DistributionModule_$5335_$","typeString":"type(contract IV4DistributionModule)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3171:16:20","memberName":"removeAllocation","nodeType":"MemberAccess","referencedDeclaration":5287,"src":"3149:38:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function IV4DistributionModule.removeAllocation(address) returns (bool)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3188:8:20","memberName":"selector","nodeType":"MemberAccess","src":"3149:47:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3134:62:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2975:221:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"3212:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3442,"name":"IV4DistributionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3227:21:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4DistributionModule_$5335_$","typeString":"type(contract IV4DistributionModule)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3249:16:20","memberName":"modifyAllocation","nodeType":"MemberAccess","referencedDeclaration":5303,"src":"3227:38:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$_t_string_calldata_ptr_$_t_bool_$_t_uint256_$returns$_t_bool_$","typeString":"function IV4DistributionModule.modifyAllocation(address,uint256,string calldata,bool,uint256) returns (bool)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3266:8:20","memberName":"selector","nodeType":"MemberAccess","src":"3227:47:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3212:62:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2975:299:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"3290:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3448,"name":"IV4DistributionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3305:21:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4DistributionModule_$5335_$","typeString":"type(contract IV4DistributionModule)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3327:17:20","memberName":"getAllAllocations","nodeType":"MemberAccess","referencedDeclaration":5311,"src":"3305:39:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr_$","typeString":"function IV4DistributionModule.getAllAllocations() view returns (struct IV4DistributionModule.Allocation memory[] memory)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3345:8:20","memberName":"selector","nodeType":"MemberAccess","src":"3305:48:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3290:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2975:378:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3453,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"3369:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3454,"name":"IV4DistributionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3384:21:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4DistributionModule_$5335_$","typeString":"type(contract IV4DistributionModule)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3406:13:20","memberName":"getAllocation","nodeType":"MemberAccess","referencedDeclaration":5320,"src":"3384:35:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_struct$_Allocation_$5242_memory_ptr_$","typeString":"function IV4DistributionModule.getAllocation(address) view returns (struct IV4DistributionModule.Allocation memory)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3420:8:20","memberName":"selector","nodeType":"MemberAccess","src":"3384:44:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3369:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2975:453:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"3444:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3460,"name":"IV4DistributionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3459:21:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4DistributionModule_$5335_$","typeString":"type(contract IV4DistributionModule)"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3481:19:20","memberName":"executeDistribution","nodeType":"MemberAccess","referencedDeclaration":5326,"src":"3459:41:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$__$returns$_t_bool_$","typeString":"function IV4DistributionModule.executeDistribution() returns (bool)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3501:8:20","memberName":"selector","nodeType":"MemberAccess","src":"3459:50:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3444:65:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2975:534:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"3525:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3466,"name":"IV4DistributionModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"3540:21:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4DistributionModule_$5335_$","typeString":"type(contract IV4DistributionModule)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3562:12:20","memberName":"unlockTokens","nodeType":"MemberAccess","referencedDeclaration":5334,"src":"3540:34:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function IV4DistributionModule.unlockTokens(address) returns (bool)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3575:8:20","memberName":"selector","nodeType":"MemberAccess","src":"3540:43:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3525:58:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2975:608:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3423,"id":3471,"nodeType":"Return","src":"2955:628:20"}]},"documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"2648:196:20","text":" @dev Check if this module has a specific function\n @param functionSig Function signature to check for\n @return hasFunction Whether the module implements the function"},"functionSelector":"be464464","id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"supportsFunction","nameLocation":"2858:16:20","nodeType":"FunctionDefinition","overrides":{"id":3420,"nodeType":"OverrideSpecifier","overrides":[],"src":"2909:8:20"},"parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"functionSig","nameLocation":"2882:11:20","nodeType":"VariableDeclaration","scope":3473,"src":"2875:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3417,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2875:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2874:20:20"},"returnParameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"hasFunction","nameLocation":"2932:11:20","nodeType":"VariableDeclaration","scope":3473,"src":"2927:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3421,"name":"bool","nodeType":"ElementaryTypeName","src":"2927:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2926:18:20"},"scope":4171,"src":"2849:741:20","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5366],"body":{"id":3482,"nodeType":"Block","src":"3792:30:20","statements":[{"expression":{"id":3480,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"3809:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3479,"id":3481,"nodeType":"Return","src":"3802:13:20"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"3600:113:20","text":" @dev Get the token this module is attached to\n @return tokenAddress Address of the token"},"functionSelector":"21df0da7","id":3483,"implemented":true,"kind":"function","modifiers":[],"name":"getToken","nameLocation":"3727:8:20","nodeType":"FunctionDefinition","overrides":{"id":3476,"nodeType":"OverrideSpecifier","overrides":[],"src":"3752:8:20"},"parameters":{"id":3475,"nodeType":"ParameterList","parameters":[],"src":"3735:2:20"},"returnParameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"tokenAddress","nameLocation":"3778:12:20","nodeType":"VariableDeclaration","scope":3483,"src":"3770:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3477,"name":"address","nodeType":"ElementaryTypeName","src":"3770:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3769:22:20"},"scope":4171,"src":"3718:104:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5258],"body":{"id":3580,"nodeType":"Block","src":"4485:955:20","statements":[{"expression":{"arguments":[{"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4503:22:20","subExpression":{"id":3503,"name":"_distributionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"4504:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20646973747269627574696f6e20616c7265616479206578656375746564","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4527:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""},"value":"V4DistributionModule: distribution already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""}],"id":3502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4495:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4495:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3507,"nodeType":"ExpressionStatement","src":"4495:86:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"4599:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4609:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3510,"name":"address","nodeType":"ElementaryTypeName","src":"4609:7:20","typeDescriptions":{}}},"id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4609:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4599:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a2077616c6c65742063616e6e6f74206265207a65726f2061646472657373","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4621:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_464d9293471930aecfb31f076f17ca354dd453fa4047ffa4cc0cf7312f30c75b","typeString":"literal_string \"V4DistributionModule: wallet cannot be zero address\""},"value":"V4DistributionModule: wallet cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_464d9293471930aecfb31f076f17ca354dd453fa4047ffa4cc0cf7312f30c75b","typeString":"literal_string \"V4DistributionModule: wallet cannot be zero address\""}],"id":3508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4591:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4591:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3517,"nodeType":"ExpressionStatement","src":"4591:84:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"4693:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4702:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4693:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4705:56:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_951fb75be76903ce653ea6af4617a284581bbb75f6795ce8272af85daa23ae45","typeString":"literal_string \"V4DistributionModule: amount must be greater than zero\""},"value":"V4DistributionModule: amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_951fb75be76903ce653ea6af4617a284581bbb75f6795ce8272af85daa23ae45","typeString":"literal_string \"V4DistributionModule: amount must be greater than zero\""}],"id":3518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4685:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4685:77:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3524,"nodeType":"ExpressionStatement","src":"4685:77:20"},{"expression":{"arguments":[{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4780:36:20","subExpression":{"arguments":[{"id":3528,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"4809:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3526,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"4781:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4800:8:20","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"4781:27:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4781:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a2077616c6c657420616c72656164792068617320616c6c6f636174696f6e","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4818:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b60c971bf882ceded5846c4d7b8ac2d97ffeeeb0d8441a3cb1d20aca0447a52","typeString":"literal_string \"V4DistributionModule: wallet already has allocation\""},"value":"V4DistributionModule: wallet already has allocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b60c971bf882ceded5846c4d7b8ac2d97ffeeeb0d8441a3cb1d20aca0447a52","typeString":"literal_string \"V4DistributionModule: wallet already has allocation\""}],"id":3525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4772:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4772:100:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3533,"nodeType":"ExpressionStatement","src":"4772:100:20"},{"condition":{"id":3534,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"4895:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3544,"nodeType":"IfStatement","src":"4891:133:20","trueBody":{"id":3543,"nodeType":"Block","src":"4903:121:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"4925:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3537,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4938:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4944:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"4938:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20756e6c6f636b2074696d65206d75737420626520696e2074686520667574757265","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4955:57:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee15d7bed7899f6887e06daaba7ebd1fac3cdd94351c9d616a0d3396d0896e11","typeString":"literal_string \"V4DistributionModule: unlock time must be in the future\""},"value":"V4DistributionModule: unlock time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee15d7bed7899f6887e06daaba7ebd1fac3cdd94351c9d616a0d3396d0896e11","typeString":"literal_string \"V4DistributionModule: unlock time must be in the future\""}],"id":3535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4917:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3542,"nodeType":"ExpressionStatement","src":"4917:96:20"}]}},{"expression":{"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3545,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"5042:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":3547,"indexExpression":{"id":3546,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5055:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5042:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3549,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5098:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3550,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5126:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3551,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"5153:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3552,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"5180:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"condition":{"id":3553,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"5212:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5234:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5212:23:20","trueExpression":{"id":3554,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"5221:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3548,"name":"Allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"5065:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Allocation_$5242_storage_ptr_$","typeString":"type(struct IV4DistributionModule.Allocation storage pointer)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5090:6:20","5118:6:20","5146:5:20","5172:6:20","5200:10:20"],"names":["wallet","amount","label","locked","unlockTime"],"nodeType":"FunctionCall","src":"5065:181:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory"}},"src":"5042:204:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"id":3559,"nodeType":"ExpressionStatement","src":"5042:204:20"},{"expression":{"arguments":[{"id":3563,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5288:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3560,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"5265:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5284:3:20","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"5265:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5265:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"nodeType":"ExpressionStatement","src":"5265:30:20"},{"expression":{"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3566,"name":"_totalAllocated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"5305:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3567,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5324:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5305:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3569,"nodeType":"ExpressionStatement","src":"5305:25:20"},{"eventCall":{"arguments":[{"id":3571,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"5370:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3572,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5378:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3573,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"5386:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3574,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"5393:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3575,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"5401:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3570,"name":"AllocationAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5354:15:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,bool,uint256)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3577,"nodeType":"EmitStatement","src":"5349:63:20"},{"expression":{"hexValue":"74727565","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5429:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3501,"id":3579,"nodeType":"Return","src":"5422:11:20"}]},"documentation":{"id":3484,"nodeType":"StructuredDocumentation","src":"3832:438:20","text":" @dev Add a new allocation\n @param wallet Recipient wallet address\n @param amount Amount of tokens to allocate\n @param label Optional label for this allocation (e.g. \"Team\", \"Marketing\")\n @param locked Whether the allocation should be time-locked\n @param unlockTime Timestamp when tokens become unlocked (0 if not locked)\n @return success Whether the allocation was successfully added"},"functionSelector":"862c19c8","id":3581,"implemented":true,"kind":"function","modifiers":[{"id":3498,"kind":"modifierInvocation","modifierName":{"id":3497,"name":"onlyOwner","nameLocations":["4452:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"4452:9:20"},"nodeType":"ModifierInvocation","src":"4452:9:20"}],"name":"addAllocation","nameLocation":"4284:13:20","nodeType":"FunctionDefinition","overrides":{"id":3496,"nodeType":"OverrideSpecifier","overrides":[],"src":"4443:8:20"},"parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3486,"mutability":"mutable","name":"wallet","nameLocation":"4315:6:20","nodeType":"VariableDeclaration","scope":3581,"src":"4307:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3485,"name":"address","nodeType":"ElementaryTypeName","src":"4307:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"amount","nameLocation":"4340:6:20","nodeType":"VariableDeclaration","scope":3581,"src":"4332:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4332:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"label","nameLocation":"4373:5:20","nodeType":"VariableDeclaration","scope":3581,"src":"4357:21:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3489,"name":"string","nodeType":"ElementaryTypeName","src":"4357:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"locked","nameLocation":"4393:6:20","nodeType":"VariableDeclaration","scope":3581,"src":"4388:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3491,"name":"bool","nodeType":"ElementaryTypeName","src":"4388:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"unlockTime","nameLocation":"4417:10:20","nodeType":"VariableDeclaration","scope":3581,"src":"4409:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4409:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4297:136:20"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"success","nameLocation":"4476:7:20","nodeType":"VariableDeclaration","scope":3581,"src":"4471:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3499,"name":"bool","nodeType":"ElementaryTypeName","src":"4471:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4470:14:20"},"scope":4171,"src":"4275:1165:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5279],"body":{"id":3761,"nodeType":"Block","src":"6089:1494:20","statements":[{"expression":{"arguments":[{"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6107:22:20","subExpression":{"id":3606,"name":"_distributionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"6108:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20646973747269627574696f6e20616c7265616479206578656375746564","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6131:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""},"value":"V4DistributionModule: distribution already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""}],"id":3605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6099:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3610,"nodeType":"ExpressionStatement","src":"6099:86:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3612,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"6216:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6224:6:20","memberName":"length","nodeType":"MemberAccess","src":"6216:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3614,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"6234:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6242:6:20","memberName":"length","nodeType":"MemberAccess","src":"6234:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6216:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3617,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"6265:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6273:6:20","memberName":"length","nodeType":"MemberAccess","src":"6265:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3619,"name":"labels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"6283:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6290:6:20","memberName":"length","nodeType":"MemberAccess","src":"6283:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6265:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6216:80:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3623,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"6313:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6321:6:20","memberName":"length","nodeType":"MemberAccess","src":"6313:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3625,"name":"lockStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"6331:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6342:6:20","memberName":"length","nodeType":"MemberAccess","src":"6331:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6313:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6216:132:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3629,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"6365:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6373:6:20","memberName":"length","nodeType":"MemberAccess","src":"6365:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3631,"name":"unlockTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"6383:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6395:6:20","memberName":"length","nodeType":"MemberAccess","src":"6383:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6365:36:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6216:185:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a206172726179206c656e67746873206d757374206d61746368","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6415:48:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1308dc92631484258d0208456a611649d0221372b5fe5e7aabefb75c7a730a77","typeString":"literal_string \"V4DistributionModule: array lengths must match\""},"value":"V4DistributionModule: array lengths must match"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1308dc92631484258d0208456a611649d0221372b5fe5e7aabefb75c7a730a77","typeString":"literal_string \"V4DistributionModule: array lengths must match\""}],"id":3611,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6195:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6195:278:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3637,"nodeType":"ExpressionStatement","src":"6195:278:20"},{"body":{"id":3757,"nodeType":"Block","src":"6537:1010:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3650,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"6559:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3652,"indexExpression":{"id":3651,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"6567:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6559:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6581:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6573:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3653,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:20","typeDescriptions":{}}},"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6573:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6559:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a2077616c6c65742063616e6e6f74206265207a65726f2061646472657373","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6585:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_464d9293471930aecfb31f076f17ca354dd453fa4047ffa4cc0cf7312f30c75b","typeString":"literal_string \"V4DistributionModule: wallet cannot be zero address\""},"value":"V4DistributionModule: wallet cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_464d9293471930aecfb31f076f17ca354dd453fa4047ffa4cc0cf7312f30c75b","typeString":"literal_string \"V4DistributionModule: wallet cannot be zero address\""}],"id":3649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6551:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6551:88:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3660,"nodeType":"ExpressionStatement","src":"6551:88:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3662,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"6661:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3664,"indexExpression":{"id":3663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"6669:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6661:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6661:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6677:56:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_951fb75be76903ce653ea6af4617a284581bbb75f6795ce8272af85daa23ae45","typeString":"literal_string \"V4DistributionModule: amount must be greater than zero\""},"value":"V4DistributionModule: amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_951fb75be76903ce653ea6af4617a284581bbb75f6795ce8272af85daa23ae45","typeString":"literal_string \"V4DistributionModule: amount must be greater than zero\""}],"id":3661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6653:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3669,"nodeType":"ExpressionStatement","src":"6653:81:20"},{"expression":{"arguments":[{"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6756:40:20","subExpression":{"arguments":[{"baseExpression":{"id":3673,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"6785:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3675,"indexExpression":{"id":3674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"6793:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6785:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3671,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"6757:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6776:8:20","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"6757:27:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6757:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a2077616c6c657420616c72656164792068617320616c6c6f636174696f6e","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6798:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b60c971bf882ceded5846c4d7b8ac2d97ffeeeb0d8441a3cb1d20aca0447a52","typeString":"literal_string \"V4DistributionModule: wallet already has allocation\""},"value":"V4DistributionModule: wallet already has allocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b60c971bf882ceded5846c4d7b8ac2d97ffeeeb0d8441a3cb1d20aca0447a52","typeString":"literal_string \"V4DistributionModule: wallet already has allocation\""}],"id":3670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6748:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6748:104:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3680,"nodeType":"ExpressionStatement","src":"6748:104:20"},{"condition":{"baseExpression":{"id":3681,"name":"lockStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"6883:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3683,"indexExpression":{"id":3682,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"6894:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6883:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3695,"nodeType":"IfStatement","src":"6879:152:20","trueBody":{"id":3694,"nodeType":"Block","src":"6898:133:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3685,"name":"unlockTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"6924:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3687,"indexExpression":{"id":3686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"6936:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6924:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3688,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6941:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6947:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"6941:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6924:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20756e6c6f636b2074696d65206d75737420626520696e2074686520667574757265","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6958:57:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee15d7bed7899f6887e06daaba7ebd1fac3cdd94351c9d616a0d3396d0896e11","typeString":"literal_string \"V4DistributionModule: unlock time must be in the future\""},"value":"V4DistributionModule: unlock time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee15d7bed7899f6887e06daaba7ebd1fac3cdd94351c9d616a0d3396d0896e11","typeString":"literal_string \"V4DistributionModule: unlock time must be in the future\""}],"id":3684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:100:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3693,"nodeType":"ExpressionStatement","src":"6916:100:20"}]}},{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3696,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"7057:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":3700,"indexExpression":{"baseExpression":{"id":3697,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"7070:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3699,"indexExpression":{"id":3698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7078:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7070:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7057:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":3702,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"7121:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3704,"indexExpression":{"id":3703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7129:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7121:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3705,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"7157:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3707,"indexExpression":{"id":3706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7165:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7157:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3708,"name":"labels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"7192:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":3710,"indexExpression":{"id":3709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7199:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7192:9:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":3711,"name":"lockStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"7227:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3713,"indexExpression":{"id":3712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7238:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7227:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"condition":{"baseExpression":{"id":3714,"name":"lockStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"7270:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3716,"indexExpression":{"id":3715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7281:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7270:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7303:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7270:34:20","trueExpression":{"baseExpression":{"id":3717,"name":"unlockTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"7286:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3719,"indexExpression":{"id":3718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7298:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7286:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3701,"name":"Allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"7084:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Allocation_$5242_storage_ptr_$","typeString":"type(struct IV4DistributionModule.Allocation storage pointer)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7113:6:20","7149:6:20","7185:5:20","7219:6:20","7258:10:20"],"names":["wallet","amount","label","locked","unlockTime"],"nodeType":"FunctionCall","src":"7084:235:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory"}},"src":"7057:262:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"id":3724,"nodeType":"ExpressionStatement","src":"7057:262:20"},{"expression":{"arguments":[{"baseExpression":{"id":3728,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"7369:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3730,"indexExpression":{"id":3729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7377:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7369:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3725,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7346:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7365:3:20","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"7346:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3732,"nodeType":"ExpressionStatement","src":"7346:34:20"},{"expression":{"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3733,"name":"_totalAllocated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"7394:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3734,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"7413:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3736,"indexExpression":{"id":3735,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7421:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7413:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7394:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3738,"nodeType":"ExpressionStatement","src":"7394:29:20"},{"eventCall":{"arguments":[{"baseExpression":{"id":3740,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"7471:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3742,"indexExpression":{"id":3741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7479:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7471:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3743,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"7483:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3745,"indexExpression":{"id":3744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7491:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7483:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3746,"name":"labels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"7495:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":3748,"indexExpression":{"id":3747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7502:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7495:9:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":3749,"name":"lockStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"7506:10:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":3751,"indexExpression":{"id":3750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7517:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7506:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":3752,"name":"unlockTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"7521:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3754,"indexExpression":{"id":3753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7533:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7521:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3739,"name":"AllocationAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"7455:15:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,bool,uint256)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7455:81:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3756,"nodeType":"EmitStatement","src":"7450:86:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"6512:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3643,"name":"wallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"6516:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6524:6:20","memberName":"length","nodeType":"MemberAccess","src":"6516:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6512:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"initializationExpression":{"assignments":[3639],"declarations":[{"constant":false,"id":3639,"mutability":"mutable","name":"i","nameLocation":"6505:1:20","nodeType":"VariableDeclaration","scope":3758,"src":"6497:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"6497:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3641,"initialValue":{"hexValue":"30","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6509:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6497:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6532:3:20","subExpression":{"id":3646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"6532:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ExpressionStatement","src":"6532:3:20"},"nodeType":"ForStatement","src":"6492:1055:20"},{"expression":{"hexValue":"74727565","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7572:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3604,"id":3760,"nodeType":"Return","src":"7565:11:20"}]},"documentation":{"id":3582,"nodeType":"StructuredDocumentation","src":"5450:363:20","text":" @dev Add multiple allocations at once\n @param wallets Array of recipient wallet addresses\n @param amounts Array of token amounts\n @param labels Array of labels\n @param lockStatus Array of lock statuses\n @param unlockTimes Array of unlock times\n @return success Whether all allocations were successfully added"},"functionSelector":"cc6becc8","id":3762,"implemented":true,"kind":"function","modifiers":[{"id":3601,"kind":"modifierInvocation","modifierName":{"id":3600,"name":"onlyOwner","nameLocations":["6056:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"6056:9:20"},"nodeType":"ModifierInvocation","src":"6056:9:20"}],"name":"addMultipleAllocations","nameLocation":"5827:22:20","nodeType":"FunctionDefinition","overrides":{"id":3599,"nodeType":"OverrideSpecifier","overrides":[],"src":"6047:8:20"},"parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"wallets","nameLocation":"5878:7:20","nodeType":"VariableDeclaration","scope":3762,"src":"5859:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3583,"name":"address","nodeType":"ElementaryTypeName","src":"5859:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3584,"nodeType":"ArrayTypeName","src":"5859:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"amounts","nameLocation":"5914:7:20","nodeType":"VariableDeclaration","scope":3762,"src":"5895:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3586,"name":"uint256","nodeType":"ElementaryTypeName","src":"5895:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3587,"nodeType":"ArrayTypeName","src":"5895:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"labels","nameLocation":"5949:6:20","nodeType":"VariableDeclaration","scope":3762,"src":"5931:24:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":3589,"name":"string","nodeType":"ElementaryTypeName","src":"5931:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3590,"nodeType":"ArrayTypeName","src":"5931:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"lockStatus","nameLocation":"5981:10:20","nodeType":"VariableDeclaration","scope":3762,"src":"5965:26:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3592,"name":"bool","nodeType":"ElementaryTypeName","src":"5965:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"nodeType":"ArrayTypeName","src":"5965:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"unlockTimes","nameLocation":"6020:11:20","nodeType":"VariableDeclaration","scope":3762,"src":"6001:30:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"6001:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3596,"nodeType":"ArrayTypeName","src":"6001:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5849:188:20"},"returnParameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"success","nameLocation":"6080:7:20","nodeType":"VariableDeclaration","scope":3762,"src":"6075:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3602,"name":"bool","nodeType":"ElementaryTypeName","src":"6075:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6074:14:20"},"scope":4171,"src":"5818:1765:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5287],"body":{"id":3815,"nodeType":"Block","src":"7862:471:20","statements":[{"expression":{"arguments":[{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7880:22:20","subExpression":{"id":3774,"name":"_distributionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"7881:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20646973747269627574696f6e20616c7265616479206578656375746564","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7904:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""},"value":"V4DistributionModule: distribution already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""}],"id":3773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7872:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7872:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3778,"nodeType":"ExpressionStatement","src":"7872:86:20"},{"expression":{"arguments":[{"arguments":[{"id":3782,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"8004:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3780,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7976:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7995:8:20","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"7976:27:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7976:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a2077616c6c657420646f6573206e6f74206861766520616c6c6f636174696f6e","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8013:55:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f19277a42e7b61781c7267e37f6a8c009fb289f6a30d0056dbcacb57eaadcc3c","typeString":"literal_string \"V4DistributionModule: wallet does not have allocation\""},"value":"V4DistributionModule: wallet does not have allocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f19277a42e7b61781c7267e37f6a8c009fb289f6a30d0056dbcacb57eaadcc3c","typeString":"literal_string \"V4DistributionModule: wallet does not have allocation\""}],"id":3779,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7968:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7968:101:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3786,"nodeType":"ExpressionStatement","src":"7968:101:20"},{"assignments":[3788],"declarations":[{"constant":false,"id":3788,"mutability":"mutable","name":"amount","nameLocation":"8096:6:20","nodeType":"VariableDeclaration","scope":3815,"src":"8088:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3787,"name":"uint256","nodeType":"ElementaryTypeName","src":"8088:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3793,"initialValue":{"expression":{"baseExpression":{"id":3789,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"8105:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":3791,"indexExpression":{"id":3790,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"8118:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8105:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"id":3792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8126:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5235,"src":"8105:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8088:44:20"},{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3794,"name":"_totalAllocated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"8142:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3795,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"8161:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8142:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"8142:25:20"},{"expression":{"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"8186:27:20","subExpression":{"baseExpression":{"id":3798,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"8193:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":3800,"indexExpression":{"id":3799,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"8206:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8193:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3802,"nodeType":"ExpressionStatement","src":"8186:27:20"},{"expression":{"arguments":[{"id":3806,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"8249:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3803,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"8223:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8242:6:20","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1906,"src":"8223:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8223:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3808,"nodeType":"ExpressionStatement","src":"8223:33:20"},{"eventCall":{"arguments":[{"id":3810,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"8298:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3809,"name":"AllocationRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"8280:17:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8280:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"EmitStatement","src":"8275:30:20"},{"expression":{"hexValue":"74727565","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8322:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3772,"id":3814,"nodeType":"Return","src":"8315:11:20"}]},"documentation":{"id":3763,"nodeType":"StructuredDocumentation","src":"7593:171:20","text":" @dev Remove an allocation\n @param wallet Recipient wallet address to remove\n @return success Whether the allocation was successfully removed"},"functionSelector":"c58156e0","id":3816,"implemented":true,"kind":"function","modifiers":[{"id":3769,"kind":"modifierInvocation","modifierName":{"id":3768,"name":"onlyOwner","nameLocations":["7829:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"7829:9:20"},"nodeType":"ModifierInvocation","src":"7829:9:20"}],"name":"removeAllocation","nameLocation":"7778:16:20","nodeType":"FunctionDefinition","overrides":{"id":3767,"nodeType":"OverrideSpecifier","overrides":[],"src":"7820:8:20"},"parameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"wallet","nameLocation":"7803:6:20","nodeType":"VariableDeclaration","scope":3816,"src":"7795:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3764,"name":"address","nodeType":"ElementaryTypeName","src":"7795:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7794:16:20"},"returnParameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"success","nameLocation":"7853:7:20","nodeType":"VariableDeclaration","scope":3816,"src":"7848:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3770,"name":"bool","nodeType":"ElementaryTypeName","src":"7848:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7847:14:20"},"scope":4171,"src":"7769:564:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5303],"body":{"id":3903,"nodeType":"Block","src":"8880:872:20","statements":[{"expression":{"arguments":[{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8898:22:20","subExpression":{"id":3836,"name":"_distributionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8899:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20646973747269627574696f6e20616c7265616479206578656375746564","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8922:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""},"value":"V4DistributionModule: distribution already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""}],"id":3835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8890:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8890:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3840,"nodeType":"ExpressionStatement","src":"8890:86:20"},{"expression":{"arguments":[{"arguments":[{"id":3844,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"9022:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3842,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"8994:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9013:8:20","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"8994:27:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8994:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a2077616c6c657420646f6573206e6f74206861766520616c6c6f636174696f6e","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9031:55:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f19277a42e7b61781c7267e37f6a8c009fb289f6a30d0056dbcacb57eaadcc3c","typeString":"literal_string \"V4DistributionModule: wallet does not have allocation\""},"value":"V4DistributionModule: wallet does not have allocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f19277a42e7b61781c7267e37f6a8c009fb289f6a30d0056dbcacb57eaadcc3c","typeString":"literal_string \"V4DistributionModule: wallet does not have allocation\""}],"id":3841,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8986:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8986:101:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3848,"nodeType":"ExpressionStatement","src":"8986:101:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"9105:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9114:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9105:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9117:56:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_951fb75be76903ce653ea6af4617a284581bbb75f6795ce8272af85daa23ae45","typeString":"literal_string \"V4DistributionModule: amount must be greater than zero\""},"value":"V4DistributionModule: amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_951fb75be76903ce653ea6af4617a284581bbb75f6795ce8272af85daa23ae45","typeString":"literal_string \"V4DistributionModule: amount must be greater than zero\""}],"id":3849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9097:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9097:77:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3855,"nodeType":"ExpressionStatement","src":"9097:77:20"},{"condition":{"id":3856,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"9197:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3866,"nodeType":"IfStatement","src":"9193:133:20","trueBody":{"id":3865,"nodeType":"Block","src":"9205:121:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"9227:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3859,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9240:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9246:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"9240:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9227:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20756e6c6f636b2074696d65206d75737420626520696e2074686520667574757265","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9257:57:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee15d7bed7899f6887e06daaba7ebd1fac3cdd94351c9d616a0d3396d0896e11","typeString":"literal_string \"V4DistributionModule: unlock time must be in the future\""},"value":"V4DistributionModule: unlock time must be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee15d7bed7899f6887e06daaba7ebd1fac3cdd94351c9d616a0d3396d0896e11","typeString":"literal_string \"V4DistributionModule: unlock time must be in the future\""}],"id":3857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9219:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9219:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3864,"nodeType":"ExpressionStatement","src":"9219:96:20"}]}},{"expression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3867,"name":"_totalAllocated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"9344:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"_totalAllocated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"9362:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":3869,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"9380:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":3871,"indexExpression":{"id":3870,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"9393:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9380:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"id":3872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9401:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5235,"src":"9380:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9362:45:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3874,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"9410:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9362:54:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9344:72:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3877,"nodeType":"ExpressionStatement","src":"9344:72:20"},{"expression":{"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3878,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"9435:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":3880,"indexExpression":{"id":3879,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"9448:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9435:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3882,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"9491:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3883,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"9519:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3884,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"9546:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3885,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"9573:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"condition":{"id":3886,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"9605:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9627:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9605:23:20","trueExpression":{"id":3887,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"9614:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3881,"name":"Allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"9458:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Allocation_$5242_storage_ptr_$","typeString":"type(struct IV4DistributionModule.Allocation storage pointer)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9483:6:20","9511:6:20","9539:5:20","9565:6:20","9593:10:20"],"names":["wallet","amount","label","locked","unlockTime"],"nodeType":"FunctionCall","src":"9458:181:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory"}},"src":"9435:204:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"id":3892,"nodeType":"ExpressionStatement","src":"9435:204:20"},{"eventCall":{"arguments":[{"id":3894,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"9682:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3895,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"9690:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3896,"name":"label","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"9698:5:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":3897,"name":"locked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"9705:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3898,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"9713:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3893,"name":"AllocationModified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"9663:18:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,bool,uint256)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3900,"nodeType":"EmitStatement","src":"9658:66:20"},{"expression":{"hexValue":"74727565","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9741:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3834,"id":3902,"nodeType":"Return","src":"9734:11:20"}]},"documentation":{"id":3817,"nodeType":"StructuredDocumentation","src":"8343:321:20","text":" @dev Modify an existing allocation\n @param wallet Recipient wallet address\n @param amount New amount of tokens\n @param label New label\n @param locked New lock status\n @param unlockTime New unlock time\n @return success Whether the allocation was successfully modified"},"functionSelector":"a8a4b4c0","id":3904,"implemented":true,"kind":"function","modifiers":[{"id":3831,"kind":"modifierInvocation","modifierName":{"id":3830,"name":"onlyOwner","nameLocations":["8847:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"8847:9:20"},"nodeType":"ModifierInvocation","src":"8847:9:20"}],"name":"modifyAllocation","nameLocation":"8678:16:20","nodeType":"FunctionDefinition","overrides":{"id":3829,"nodeType":"OverrideSpecifier","overrides":[],"src":"8838:8:20"},"parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"wallet","nameLocation":"8712:6:20","nodeType":"VariableDeclaration","scope":3904,"src":"8704:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3818,"name":"address","nodeType":"ElementaryTypeName","src":"8704:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"amount","nameLocation":"8736:6:20","nodeType":"VariableDeclaration","scope":3904,"src":"8728:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"8728:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"label","nameLocation":"8768:5:20","nodeType":"VariableDeclaration","scope":3904,"src":"8752:21:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3822,"name":"string","nodeType":"ElementaryTypeName","src":"8752:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"locked","nameLocation":"8788:6:20","nodeType":"VariableDeclaration","scope":3904,"src":"8783:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3824,"name":"bool","nodeType":"ElementaryTypeName","src":"8783:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"unlockTime","nameLocation":"8812:10:20","nodeType":"VariableDeclaration","scope":3904,"src":"8804:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"8804:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8694:134:20"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"success","nameLocation":"8871:7:20","nodeType":"VariableDeclaration","scope":3904,"src":"8866:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3832,"name":"bool","nodeType":"ElementaryTypeName","src":"8866:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8865:14:20"},"scope":4171,"src":"8669:1083:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5311],"body":{"id":3957,"nodeType":"Block","src":"9959:315:20","statements":[{"assignments":[3914],"declarations":[{"constant":false,"id":3914,"mutability":"mutable","name":"count","nameLocation":"9977:5:20","nodeType":"VariableDeclaration","scope":3957,"src":"9969:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"9969:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3918,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3915,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"9985:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10004:6:20","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"9985:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9985:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9969:43:20"},{"expression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3919,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"10022:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3924,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"10053:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10036:16:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct IV4DistributionModule.Allocation memory[] memory)"},"typeName":{"baseType":{"id":3921,"nodeType":"UserDefinedTypeName","pathNode":{"id":3920,"name":"Allocation","nameLocations":["10040:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"10040:10:20"},"referencedDeclaration":5242,"src":"10040:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"}},"id":3922,"nodeType":"ArrayTypeName","src":"10040:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_storage_$dyn_storage_ptr","typeString":"struct IV4DistributionModule.Allocation[]"}}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10036:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory[] memory"}},"src":"10022:37:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory[] memory"}},"id":3927,"nodeType":"ExpressionStatement","src":"10022:37:20"},{"body":{"id":3953,"nodeType":"Block","src":"10114:117:20","statements":[{"assignments":[3939],"declarations":[{"constant":false,"id":3939,"mutability":"mutable","name":"wallet","nameLocation":"10136:6:20","nodeType":"VariableDeclaration","scope":3953,"src":"10128:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3938,"name":"address","nodeType":"ElementaryTypeName","src":"10128:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3944,"initialValue":{"arguments":[{"id":3942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"10167:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3940,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"10145:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10164:2:20","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1975,"src":"10145:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10145:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10128:41:20"},{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3945,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"10183:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory[] memory"}},"id":3947,"indexExpression":{"id":3946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"10195:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10183:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3948,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10200:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":3950,"indexExpression":{"id":3949,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"10213:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10200:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"src":"10183:37:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory"}},"id":3952,"nodeType":"ExpressionStatement","src":"10183:37:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"10098:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3933,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"10102:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10098:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3954,"initializationExpression":{"assignments":[3929],"declarations":[{"constant":false,"id":3929,"mutability":"mutable","name":"i","nameLocation":"10091:1:20","nodeType":"VariableDeclaration","scope":3954,"src":"10083:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"10083:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3931,"initialValue":{"hexValue":"30","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10083:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10109:3:20","subExpression":{"id":3935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"10109:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"10109:3:20"},"nodeType":"ForStatement","src":"10078:153:20"},{"expression":{"id":3955,"name":"allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"10256:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr","typeString":"struct IV4DistributionModule.Allocation memory[] memory"}},"functionReturnParameters":3912,"id":3956,"nodeType":"Return","src":"10249:18:20"}]},"documentation":{"id":3905,"nodeType":"StructuredDocumentation","src":"9762:98:20","text":" @dev Get all allocations\n @return allocations Array of allocation details"},"functionSelector":"1ca00f62","id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"getAllAllocations","nameLocation":"9874:17:20","nodeType":"FunctionDefinition","overrides":{"id":3907,"nodeType":"OverrideSpecifier","overrides":[],"src":"9908:8:20"},"parameters":{"id":3906,"nodeType":"ParameterList","parameters":[],"src":"9891:2:20"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"allocations","nameLocation":"9946:11:20","nodeType":"VariableDeclaration","scope":3958,"src":"9926:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr","typeString":"struct IV4DistributionModule.Allocation[]"},"typeName":{"baseType":{"id":3909,"nodeType":"UserDefinedTypeName","pathNode":{"id":3908,"name":"Allocation","nameLocations":["9926:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"9926:10:20"},"referencedDeclaration":5242,"src":"9926:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"}},"id":3910,"nodeType":"ArrayTypeName","src":"9926:12:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_storage_$dyn_storage_ptr","typeString":"struct IV4DistributionModule.Allocation[]"}},"visibility":"internal"}],"src":"9925:33:20"},"scope":4171,"src":"9865:409:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5320],"body":{"id":3980,"nodeType":"Block","src":"10545:155:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3971,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"10591:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3969,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"10563:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10582:8:20","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"10563:27:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10563:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a2077616c6c657420646f6573206e6f74206861766520616c6c6f636174696f6e","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10600:55:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f19277a42e7b61781c7267e37f6a8c009fb289f6a30d0056dbcacb57eaadcc3c","typeString":"literal_string \"V4DistributionModule: wallet does not have allocation\""},"value":"V4DistributionModule: wallet does not have allocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f19277a42e7b61781c7267e37f6a8c009fb289f6a30d0056dbcacb57eaadcc3c","typeString":"literal_string \"V4DistributionModule: wallet does not have allocation\""}],"id":3968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10555:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10555:101:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3975,"nodeType":"ExpressionStatement","src":"10555:101:20"},{"expression":{"baseExpression":{"id":3976,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"10673:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":3978,"indexExpression":{"id":3977,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3961,"src":"10686:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10673:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"functionReturnParameters":3967,"id":3979,"nodeType":"Return","src":"10666:27:20"}]},"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"10284:155:20","text":" @dev Get allocation for a specific wallet\n @param wallet Recipient wallet address\n @return allocation The allocation details"},"functionSelector":"0e022923","id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"getAllocation","nameLocation":"10453:13:20","nodeType":"FunctionDefinition","overrides":{"id":3963,"nodeType":"OverrideSpecifier","overrides":[],"src":"10497:8:20"},"parameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"wallet","nameLocation":"10475:6:20","nodeType":"VariableDeclaration","scope":3981,"src":"10467:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3960,"name":"address","nodeType":"ElementaryTypeName","src":"10467:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10466:16:20"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"allocation","nameLocation":"10533:10:20","nodeType":"VariableDeclaration","scope":3981,"src":"10515:28:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_memory_ptr","typeString":"struct IV4DistributionModule.Allocation"},"typeName":{"id":3965,"nodeType":"UserDefinedTypeName","pathNode":{"id":3964,"name":"Allocation","nameLocations":["10515:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"10515:10:20"},"referencedDeclaration":5242,"src":"10515:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"}},"visibility":"internal"}],"src":"10514:30:20"},"scope":4171,"src":"10444:256:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5326],"body":{"id":4092,"nodeType":"Block","src":"10919:1474:20","statements":[{"expression":{"arguments":[{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10937:22:20","subExpression":{"id":3991,"name":"_distributionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"10938:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20646973747269627574696f6e20616c7265616479206578656375746564","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10961:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""},"value":"V4DistributionModule: distribution already executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_152087ad019cc581d7fb7081b22607a47f64561d3923b7c6548b315ac1e742ec","typeString":"literal_string \"V4DistributionModule: distribution already executed\""}],"id":3990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10929:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10929:86:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3995,"nodeType":"ExpressionStatement","src":"10929:86:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3997,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11033:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":3998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11052:6:20","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"11033:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11033:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11063:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11033:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a206e6f20616c6c6f636174696f6e7320746f2064697374726962757465","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11066:52:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1825e4972260abf3461691f2bde6b650c824f042cab4148116aeb6caf505328a","typeString":"literal_string \"V4DistributionModule: no allocations to distribute\""},"value":"V4DistributionModule: no allocations to distribute"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1825e4972260abf3461691f2bde6b650c824f042cab4148116aeb6caf505328a","typeString":"literal_string \"V4DistributionModule: no allocations to distribute\""}],"id":3996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11025:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11025:94:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4004,"nodeType":"ExpressionStatement","src":"11025:94:20"},{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4005,"name":"_distributionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"11138:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11162:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11138:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4008,"nodeType":"ExpressionStatement","src":"11138:28:20"},{"assignments":[4010],"declarations":[{"constant":false,"id":4010,"mutability":"mutable","name":"walletCount","nameLocation":"11184:11:20","nodeType":"VariableDeclaration","scope":4092,"src":"11176:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"11176:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4014,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4011,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11198:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11217:6:20","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"11198:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11198:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11176:49:20"},{"body":{"id":4083,"nodeType":"Block","src":"11328:964:20","statements":[{"assignments":[4026],"declarations":[{"constant":false,"id":4026,"mutability":"mutable","name":"wallet","nameLocation":"11350:6:20","nodeType":"VariableDeclaration","scope":4083,"src":"11342:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4025,"name":"address","nodeType":"ElementaryTypeName","src":"11342:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4031,"initialValue":{"arguments":[{"id":4029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11381:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4027,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11359:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11378:2:20","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1975,"src":"11359:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11359:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11342:41:20"},{"assignments":[4034],"declarations":[{"constant":false,"id":4034,"mutability":"mutable","name":"allocation","nameLocation":"11416:10:20","nodeType":"VariableDeclaration","scope":4083,"src":"11397:29:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"},"typeName":{"id":4033,"nodeType":"UserDefinedTypeName","pathNode":{"id":4032,"name":"Allocation","nameLocations":["11397:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"11397:10:20"},"referencedDeclaration":5242,"src":"11397:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"}},"visibility":"internal"}],"id":4038,"initialValue":{"baseExpression":{"id":4035,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"11429:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":4037,"indexExpression":{"id":4036,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"11442:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11429:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11397:52:20"},{"condition":{"expression":{"id":4039,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"11559:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation storage pointer"}},"id":4040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11570:6:20","memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":5239,"src":"11559:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4081,"nodeType":"Block","src":"11948:334:20","statements":[{"assignments":[4064],"declarations":[{"constant":false,"id":4064,"mutability":"mutable","name":"mintData","nameLocation":"12029:8:20","nodeType":"VariableDeclaration","scope":4081,"src":"12016:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4063,"name":"bytes","nodeType":"ElementaryTypeName","src":"12016:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4072,"initialValue":{"arguments":[{"hexValue":"6d696e7428616464726573732c75696e7432353629","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12085:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f2842","typeString":"literal_string \"mint(address,uint256)\""},"value":"mint(address,uint256)"},{"id":4068,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"12130:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4069,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"12158:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation storage pointer"}},"id":4070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12169:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5235,"src":"12158:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f2842","typeString":"literal_string \"mint(address,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4065,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12040:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12044:19:20","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"12040:23:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12040:153:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12016:177:20"},{"expression":{"arguments":[{"id":4077,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"12250:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4078,"name":"mintData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"12258:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4074,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"12224:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4073,"name":"IV4TokenBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"12211:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4TokenBase_$5525_$","typeString":"type(contract IV4TokenBase)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12211:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IV4TokenBase_$5525","typeString":"contract IV4TokenBase"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12232:17:20","memberName":"executeFromModule","nodeType":"MemberAccess","referencedDeclaration":5504,"src":"12211:38:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) external returns (bool,bytes memory)"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12211:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":4080,"nodeType":"ExpressionStatement","src":"12211:56:20"}]},"id":4082,"nodeType":"IfStatement","src":"11555:727:20","trueBody":{"id":4062,"nodeType":"Block","src":"11578:364:20","statements":[{"assignments":[4042],"declarations":[{"constant":false,"id":4042,"mutability":"mutable","name":"mintData","nameLocation":"11682:8:20","nodeType":"VariableDeclaration","scope":4062,"src":"11669:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4041,"name":"bytes","nodeType":"ElementaryTypeName","src":"11669:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4053,"initialValue":{"arguments":[{"hexValue":"6d696e7428616464726573732c75696e7432353629","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11738:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f2842","typeString":"literal_string \"mint(address,uint256)\""},"value":"mint(address,uint256)"},{"arguments":[{"id":4048,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11791:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_V4DistributionModule_$4171","typeString":"contract V4DistributionModule"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_V4DistributionModule_$4171","typeString":"contract V4DistributionModule"}],"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11783:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4046,"name":"address","nodeType":"ElementaryTypeName","src":"11783:7:20","typeDescriptions":{}}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11783:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4050,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"11818:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation storage pointer"}},"id":4051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11829:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5235,"src":"11818:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_40c10f19c047ae7dfa66d6312b683d2ea3dfbcb4159e96b967c5f4b0a86f2842","typeString":"literal_string \"mint(address,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4043,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11693:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11697:19:20","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"11693:23:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11693:160:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11669:184:20"},{"expression":{"arguments":[{"id":4058,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"11910:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4059,"name":"mintData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"11918:8:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4055,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"11884:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4054,"name":"IV4TokenBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"11871:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4TokenBase_$5525_$","typeString":"type(contract IV4TokenBase)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11871:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IV4TokenBase_$5525","typeString":"contract IV4TokenBase"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11892:17:20","memberName":"executeFromModule","nodeType":"MemberAccess","referencedDeclaration":5504,"src":"11871:38:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) external returns (bool,bytes memory)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11871:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":4061,"nodeType":"ExpressionStatement","src":"11871:56:20"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11306:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4020,"name":"walletCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"11310:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11306:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"initializationExpression":{"assignments":[4016],"declarations":[{"constant":false,"id":4016,"mutability":"mutable","name":"i","nameLocation":"11299:1:20","nodeType":"VariableDeclaration","scope":4084,"src":"11291:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"11291:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4018,"initialValue":{"hexValue":"30","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11303:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11291:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11323:3:20","subExpression":{"id":4022,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"11323:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4024,"nodeType":"ExpressionStatement","src":"11323:3:20"},"nodeType":"ForStatement","src":"11286:1006:20"},{"eventCall":{"arguments":[{"id":4086,"name":"_totalAllocated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"12336:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4087,"name":"walletCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"12353:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4085,"name":"DistributionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3332,"src":"12315:20:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4089,"nodeType":"EmitStatement","src":"12310:55:20"},{"expression":{"hexValue":"74727565","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3989,"id":4091,"nodeType":"Return","src":"12375:11:20"}]},"documentation":{"id":3982,"nodeType":"StructuredDocumentation","src":"10710:122:20","text":" @dev Execute the distribution\n @return success Whether the distribution was successfully executed"},"functionSelector":"ff0ed114","id":4093,"implemented":true,"kind":"function","modifiers":[{"id":3986,"kind":"modifierInvocation","modifierName":{"id":3985,"name":"onlyOwner","nameLocations":["10886:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"10886:9:20"},"nodeType":"ModifierInvocation","src":"10886:9:20"}],"name":"executeDistribution","nameLocation":"10846:19:20","nodeType":"FunctionDefinition","overrides":{"id":3984,"nodeType":"OverrideSpecifier","overrides":[],"src":"10877:8:20"},"parameters":{"id":3983,"nodeType":"ParameterList","parameters":[],"src":"10865:2:20"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"success","nameLocation":"10910:7:20","nodeType":"VariableDeclaration","scope":4093,"src":"10905:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3987,"name":"bool","nodeType":"ElementaryTypeName","src":"10905:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10904:14:20"},"scope":4171,"src":"10837:1556:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5334],"body":{"id":4169,"nodeType":"Block","src":"12700:982:20","statements":[{"expression":{"arguments":[{"id":4103,"name":"_distributionExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"12718:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20646973747269627574696f6e206e6f7420796574206578656375746564","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12741:53:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d087a56f0fc2b7f214bb9934fefd5fcc17fead9aeac5faf2b9055bf92e8447d","typeString":"literal_string \"V4DistributionModule: distribution not yet executed\""},"value":"V4DistributionModule: distribution not yet executed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d087a56f0fc2b7f214bb9934fefd5fcc17fead9aeac5faf2b9055bf92e8447d","typeString":"literal_string \"V4DistributionModule: distribution not yet executed\""}],"id":4102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12710:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12710:85:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4106,"nodeType":"ExpressionStatement","src":"12710:85:20"},{"expression":{"arguments":[{"arguments":[{"id":4110,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"12841:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4108,"name":"_allocationWallets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12813:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12832:8:20","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"12813:27:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12813:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a2077616c6c657420646f6573206e6f74206861766520616c6c6f636174696f6e","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12850:55:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f19277a42e7b61781c7267e37f6a8c009fb289f6a30d0056dbcacb57eaadcc3c","typeString":"literal_string \"V4DistributionModule: wallet does not have allocation\""},"value":"V4DistributionModule: wallet does not have allocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f19277a42e7b61781c7267e37f6a8c009fb289f6a30d0056dbcacb57eaadcc3c","typeString":"literal_string \"V4DistributionModule: wallet does not have allocation\""}],"id":4107,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12805:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12805:101:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4114,"nodeType":"ExpressionStatement","src":"12805:101:20"},{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"allocation","nameLocation":"12944:10:20","nodeType":"VariableDeclaration","scope":4169,"src":"12925:29:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"},"typeName":{"id":4116,"nodeType":"UserDefinedTypeName","pathNode":{"id":4115,"name":"Allocation","nameLocations":["12925:10:20"],"nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"12925:10:20"},"referencedDeclaration":5242,"src":"12925:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"}},"visibility":"internal"}],"id":4121,"initialValue":{"baseExpression":{"id":4118,"name":"_allocations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"12957:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Allocation_$5242_storage_$","typeString":"mapping(address => struct IV4DistributionModule.Allocation storage ref)"}},"id":4120,"indexExpression":{"id":4119,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"12970:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12957:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage","typeString":"struct IV4DistributionModule.Allocation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12925:52:20"},{"expression":{"arguments":[{"expression":{"id":4123,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"12995:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation storage pointer"}},"id":4124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13006:6:20","memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":5239,"src":"12995:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20616c6c6f636174696f6e206973206e6f74206c6f636b6564","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13014:48:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2ae4812c0d053aaef405e995b746c419c03c4d8c3956e328e2df19f4d21b32f","typeString":"literal_string \"V4DistributionModule: allocation is not locked\""},"value":"V4DistributionModule: allocation is not locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2ae4812c0d053aaef405e995b746c419c03c4d8c3956e328e2df19f4d21b32f","typeString":"literal_string \"V4DistributionModule: allocation is not locked\""}],"id":4122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12987:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12987:76:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4127,"nodeType":"ExpressionStatement","src":"12987:76:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4129,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13081:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13087:9:20","memberName":"timestamp","nodeType":"MemberAccess","src":"13081:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4131,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"13100:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation storage pointer"}},"id":4132,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13111:10:20","memberName":"unlockTime","nodeType":"MemberAccess","referencedDeclaration":5241,"src":"13100:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13081:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20746f6b656e7320617265207374696c6c206c6f636b6564","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13123:47:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6332e8c50d65287550acc75946451dcf312883fde7a7836ca663c04217f6cc3b","typeString":"literal_string \"V4DistributionModule: tokens are still locked\""},"value":"V4DistributionModule: tokens are still locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6332e8c50d65287550acc75946451dcf312883fde7a7836ca663c04217f6cc3b","typeString":"literal_string \"V4DistributionModule: tokens are still locked\""}],"id":4128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13073:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13073:98:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4136,"nodeType":"ExpressionStatement","src":"13073:98:20"},{"assignments":[4138,null],"declarations":[{"constant":false,"id":4138,"mutability":"mutable","name":"transferSuccess","nameLocation":"13240:15:20","nodeType":"VariableDeclaration","scope":4169,"src":"13235:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4137,"name":"bool","nodeType":"ElementaryTypeName","src":"13235:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4149,"initialValue":{"arguments":[{"arguments":[{"hexValue":"7472616e7366657228616464726573732c75696e7432353629","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13326:27:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b","typeString":"literal_string \"transfer(address,uint256)\""},"value":"transfer(address,uint256)"},{"id":4144,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"13371:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4145,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"13395:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation storage pointer"}},"id":4146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13406:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5235,"src":"13395:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b","typeString":"literal_string \"transfer(address,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4141,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13285:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13289:19:20","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"13285:23:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13285:141:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4139,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"13260:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13267:4:20","memberName":"call","nodeType":"MemberAccess","src":"13260:11:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13260:176:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"13234:202:20"},{"expression":{"arguments":[{"id":4151,"name":"transferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"13454:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634446973747269627574696f6e4d6f64756c653a20746f6b656e207472616e73666572206661696c6564","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13471:45:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c43b304114482345610fe03bd06e474c93cb99ed6447ffa45759816d1b60249","typeString":"literal_string \"V4DistributionModule: token transfer failed\""},"value":"V4DistributionModule: token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c43b304114482345610fe03bd06e474c93cb99ed6447ffa45759816d1b60249","typeString":"literal_string \"V4DistributionModule: token transfer failed\""}],"id":4150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13446:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13446:71:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4154,"nodeType":"ExpressionStatement","src":"13446:71:20"},{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4155,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"13564:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation storage pointer"}},"id":4157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13575:6:20","memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":5239,"src":"13564:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13584:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13564:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4160,"nodeType":"ExpressionStatement","src":"13564:25:20"},{"eventCall":{"arguments":[{"id":4162,"name":"wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"13628:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4163,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"13636:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation storage pointer"}},"id":4164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13647:6:20","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5235,"src":"13636:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4161,"name":"TokensUnlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"13613:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13613:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4166,"nodeType":"EmitStatement","src":"13608:46:20"},{"expression":{"hexValue":"74727565","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13671:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4101,"id":4168,"nodeType":"Return","src":"13664:11:20"}]},"documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"12403:213:20","text":" @dev Unlock tokens for a wallet if the unlock time has passed\n @param wallet Address of the wallet to unlock tokens for\n @return success Whether the tokens were successfully unlocked"},"functionSelector":"cb67f948","id":4170,"implemented":true,"kind":"function","modifiers":[],"name":"unlockTokens","nameLocation":"12630:12:20","nodeType":"FunctionDefinition","overrides":{"id":4098,"nodeType":"OverrideSpecifier","overrides":[],"src":"12668:8:20"},"parameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"wallet","nameLocation":"12651:6:20","nodeType":"VariableDeclaration","scope":4170,"src":"12643:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4095,"name":"address","nodeType":"ElementaryTypeName","src":"12643:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12642:16:20"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"success","nameLocation":"12691:7:20","nodeType":"VariableDeclaration","scope":4170,"src":"12686:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4099,"name":"bool","nodeType":"ElementaryTypeName","src":"12686:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12685:14:20"},"scope":4171,"src":"12621:1061:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4172,"src":"539:13145:20","usedErrors":[],"usedEvents":[17,147,3310,3314,3326,3332,3338]}],"src":"32:13653:20"},"id":20},"src/contracts/V4Factory.sol":{"ast":{"absolutePath":"src/contracts/V4Factory.sol","exportedSymbols":{"Address":[3120],"BeaconProxy":[2705],"Context":[3150],"ERC1967Upgrade":[2587],"IBeacon":[2715],"IERC1822Proxiable":[2283],"IERC1967":[2273],"IV4TokenBase":[5525],"Ownable":[2252],"Proxy":[2639],"StorageSlot":[3260],"UpgradeableBeacon":[2790],"V4Factory":[4386]},"id":4387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4173,"literals":["solidity","0.8",".22"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","file":"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol","id":4174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4387,"sourceUnit":2706,"src":"57:62:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol","file":"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol","id":4175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4387,"sourceUnit":2791,"src":"120:68:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4387,"sourceUnit":2253,"src":"189:52:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4TokenBase.sol","file":"./interfaces/IV4TokenBase.sol","id":4177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4387,"sourceUnit":5526,"src":"242:39:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4179,"name":"Ownable","nameLocations":["398:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":2252,"src":"398:7:21"},"id":4180,"nodeType":"InheritanceSpecifier","src":"398:7:21"}],"canonicalName":"V4Factory","contractDependencies":[2705,2790],"contractKind":"contract","documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"283:92:21","text":" @title V4Factory\n @dev Factory for creating V4 tokens with modular architecture"},"fullyImplemented":true,"id":4386,"linearizedBaseContracts":[4386,2252,3150],"name":"V4Factory","nameLocation":"385:9:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"2f3a3d5d","id":4182,"mutability":"mutable","name":"tokenImplementation","nameLocation":"459:19:21","nodeType":"VariableDeclaration","scope":4386,"src":"444:34:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4181,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8008334c","id":4184,"mutability":"mutable","name":"securityModuleImplementation","nameLocation":"499:28:21","nodeType":"VariableDeclaration","scope":4386,"src":"484:43:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4183,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"ccf5a77c","id":4187,"mutability":"mutable","name":"tokenBeacon","nameLocation":"600:11:21","nodeType":"VariableDeclaration","scope":4386,"src":"575:36:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"},"typeName":{"id":4186,"nodeType":"UserDefinedTypeName","pathNode":{"id":4185,"name":"UpgradeableBeacon","nameLocations":["575:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":2790,"src":"575:17:21"},"referencedDeclaration":2790,"src":"575:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"visibility":"public"},{"constant":false,"functionSelector":"9651d0a8","id":4190,"mutability":"mutable","name":"securityModuleBeacon","nameLocation":"642:20:21","nodeType":"VariableDeclaration","scope":4386,"src":"617:45:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"},"typeName":{"id":4189,"nodeType":"UserDefinedTypeName","pathNode":{"id":4188,"name":"UpgradeableBeacon","nameLocations":["617:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":2790,"src":"617:17:21"},"referencedDeclaration":2790,"src":"617:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"visibility":"public"},{"anonymous":false,"eventSelector":"6596c1670eb3390048d23721809c3da5d3f531375ac0e2cab0f77a808ed64331","id":4200,"name":"TokenCreated","nameLocation":"693:12:21","nodeType":"EventDefinition","parameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"722:12:21","nodeType":"VariableDeclaration","scope":4200,"src":"706:28:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4191,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4194,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"743:4:21","nodeType":"VariableDeclaration","scope":4200,"src":"736:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4193,"name":"string","nodeType":"ElementaryTypeName","src":"736:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4196,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"756:6:21","nodeType":"VariableDeclaration","scope":4200,"src":"749:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4195,"name":"string","nodeType":"ElementaryTypeName","src":"749:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4198,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"780:5:21","nodeType":"VariableDeclaration","scope":4200,"src":"764:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4197,"name":"address","nodeType":"ElementaryTypeName","src":"764:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"705:81:21"},"src":"687:100:21"},{"constant":true,"id":4208,"mutability":"constant","name":"TOKEN_INITIALIZE_SELECTOR","nameLocation":"847:25:21","nodeType":"VariableDeclaration","scope":4386,"src":"823:114:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4201,"name":"bytes4","nodeType":"ElementaryTypeName","src":"823:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"696e697469616c697a6528737472696e672c737472696e672c75696e743235362c6164647265737329","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"892:43:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd3a13f62a2664b7da5b0f687820f0a66a9628558693f28de462ad51e82d077a","typeString":"literal_string \"initialize(string,string,uint256,address)\""},"value":"initialize(string,string,uint256,address)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bd3a13f62a2664b7da5b0f687820f0a66a9628558693f28de462ad51e82d077a","typeString":"literal_string \"initialize(string,string,uint256,address)\""}],"id":4204,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"882:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"882:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"875:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":4202,"name":"bytes4","nodeType":"ElementaryTypeName","src":"875:6:21","typeDescriptions":{}}},"id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":true,"id":4216,"mutability":"constant","name":"MODULE_INITIALIZE_SELECTOR","nameLocation":"967:26:21","nodeType":"VariableDeclaration","scope":4386,"src":"943:99:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4209,"name":"bytes4","nodeType":"ElementaryTypeName","src":"943:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"arguments":[{"hexValue":"696e697469616c697a6528616464726573732c627974657329","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1013:27:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1f578946981755ee8ffb900bf2e79846feedf4642746695df147d68656840a3","typeString":"literal_string \"initialize(address,bytes)\""},"value":"initialize(address,bytes)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d1f578946981755ee8ffb900bf2e79846feedf4642746695df147d68656840a3","typeString":"literal_string \"initialize(address,bytes)\""}],"id":4212,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1003:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1003:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"996:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":4210,"name":"bytes4","nodeType":"ElementaryTypeName","src":"996:6:21","typeDescriptions":{}}},"id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"996:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"body":{"id":4266,"nodeType":"Block","src":"1422:425:21","statements":[{"expression":{"arguments":[{"id":4227,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"1451:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4226,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1432:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1432:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4229,"nodeType":"ExpressionStatement","src":"1432:26:21"},{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4230,"name":"tokenImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"1477:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4231,"name":"tokenImpl_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"1499:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1477:32:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4233,"nodeType":"ExpressionStatement","src":"1477:32:21"},{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4234,"name":"securityModuleImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"1519:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4235,"name":"securityModuleImpl_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"1550:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1519:50:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4237,"nodeType":"ExpressionStatement","src":"1519:50:21"},{"expression":{"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4238,"name":"tokenBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"1588:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4242,"name":"tokenImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"1624:19:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1602:21:21","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$2790_$","typeString":"function (address) returns (contract UpgradeableBeacon)"},"typeName":{"id":4240,"nodeType":"UserDefinedTypeName","pathNode":{"id":4239,"name":"UpgradeableBeacon","nameLocations":["1606:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":2790,"src":"1606:17:21"},"referencedDeclaration":2790,"src":"1606:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"src":"1588:56:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"id":4245,"nodeType":"ExpressionStatement","src":"1588:56:21"},{"expression":{"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4246,"name":"securityModuleBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"1654:20:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4250,"name":"securityModuleImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"1699:28:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1677:21:21","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$returns$_t_contract$_UpgradeableBeacon_$2790_$","typeString":"function (address) returns (contract UpgradeableBeacon)"},"typeName":{"id":4248,"nodeType":"UserDefinedTypeName","pathNode":{"id":4247,"name":"UpgradeableBeacon","nameLocations":["1681:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":2790,"src":"1681:17:21"},"referencedDeclaration":2790,"src":"1681:17:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1677:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"src":"1654:74:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"id":4253,"nodeType":"ExpressionStatement","src":"1654:74:21"},{"expression":{"arguments":[{"id":4257,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"1777:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4254,"name":"tokenBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"1747:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1759:17:21","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"1747:29:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1747:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4259,"nodeType":"ExpressionStatement","src":"1747:37:21"},{"expression":{"arguments":[{"id":4263,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"1833:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4260,"name":"securityModuleBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"1794:20:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1815:17:21","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":2231,"src":"1794:38:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4265,"nodeType":"ExpressionStatement","src":"1794:46:21"}]},"documentation":{"id":4217,"nodeType":"StructuredDocumentation","src":"1053:257:21","text":" @dev Initialize the factory with implementation contracts\n @param owner_ The owner of the factory\n @param tokenImpl_ The token implementation address\n @param securityModuleImpl_ The security module implementation address"},"id":4267,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"owner_","nameLocation":"1344:6:21","nodeType":"VariableDeclaration","scope":4267,"src":"1336:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4218,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"tokenImpl_","nameLocation":"1368:10:21","nodeType":"VariableDeclaration","scope":4267,"src":"1360:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4220,"name":"address","nodeType":"ElementaryTypeName","src":"1360:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"securityModuleImpl_","nameLocation":"1396:19:21","nodeType":"VariableDeclaration","scope":4267,"src":"1388:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4222,"name":"address","nodeType":"ElementaryTypeName","src":"1388:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1326:95:21"},"returnParameters":{"id":4225,"nodeType":"ParameterList","parameters":[],"src":"1422:0:21"},"scope":4386,"src":"1315:532:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4384,"nodeType":"Block","src":"2328:1311:21","statements":[{"assignments":[4282],"declarations":[{"constant":false,"id":4282,"mutability":"mutable","name":"tokenData","nameLocation":"2381:9:21","nodeType":"VariableDeclaration","scope":4384,"src":"2368:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4281,"name":"bytes","nodeType":"ElementaryTypeName","src":"2368:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4291,"initialValue":{"arguments":[{"id":4285,"name":"TOKEN_INITIALIZE_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"2429:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4286,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"2468:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4287,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"2486:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4288,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"2506:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4289,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"2533:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4283,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2393:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2397:18:21","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2393:22:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:155:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2368:180:21"},{"assignments":[4294],"declarations":[{"constant":false,"id":4294,"mutability":"mutable","name":"tokenProxy","nameLocation":"2579:10:21","nodeType":"VariableDeclaration","scope":4384,"src":"2567:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"},"typeName":{"id":4293,"nodeType":"UserDefinedTypeName","pathNode":{"id":4292,"name":"BeaconProxy","nameLocations":["2567:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2705,"src":"2567:11:21"},"referencedDeclaration":2705,"src":"2567:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}},"visibility":"internal"}],"id":4304,"initialValue":{"arguments":[{"arguments":[{"id":4300,"name":"tokenBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"2629:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}],"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2621:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4298,"name":"address","nodeType":"ElementaryTypeName","src":"2621:7:21","typeDescriptions":{}}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2621:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4302,"name":"tokenData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"2655:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2592:15:21","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$2705_$","typeString":"function (address,bytes memory) payable returns (contract BeaconProxy)"},"typeName":{"id":4296,"nodeType":"UserDefinedTypeName","pathNode":{"id":4295,"name":"BeaconProxy","nameLocations":["2596:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2705,"src":"2596:11:21"},"referencedDeclaration":2705,"src":"2596:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:82:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}},"nodeType":"VariableDeclarationStatement","src":"2567:107:21"},{"expression":{"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"2684:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4308,"name":"tokenProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"2707:10:21","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}],"id":4307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2699:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4306,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:21","typeDescriptions":{}}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2684:34:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4311,"nodeType":"ExpressionStatement","src":"2684:34:21"},{"assignments":[4313],"declarations":[{"constant":false,"id":4313,"mutability":"mutable","name":"securityModuleInitData","nameLocation":"2779:22:21","nodeType":"VariableDeclaration","scope":4384,"src":"2771:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2771:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4324,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4320,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"2828:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2820:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4318,"name":"uint160","nodeType":"ElementaryTypeName","src":"2820:7:21","typeDescriptions":{}}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2820:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2812:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2812:7:21","typeDescriptions":{}}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2812:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2804:7:21","typeDescriptions":{}}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2771:65:21"},{"assignments":[4326],"declarations":[{"constant":false,"id":4326,"mutability":"mutable","name":"securityData","nameLocation":"2859:12:21","nodeType":"VariableDeclaration","scope":4384,"src":"2846:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4325,"name":"bytes","nodeType":"ElementaryTypeName","src":"2846:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4336,"initialValue":{"arguments":[{"id":4329,"name":"MODULE_INITIALIZE_SELECTOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"2910:26:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":4330,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"2950:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4333,"name":"securityModuleInitData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"2987:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4331,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2976:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2980:6:21","memberName":"encode","nodeType":"MemberAccess","src":"2976:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2976:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4327,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2874:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2878:18:21","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2874:22:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:146:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2846:174:21"},{"assignments":[4339],"declarations":[{"constant":false,"id":4339,"mutability":"mutable","name":"securityModuleProxy","nameLocation":"3051:19:21","nodeType":"VariableDeclaration","scope":4384,"src":"3039:31:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"},"typeName":{"id":4338,"nodeType":"UserDefinedTypeName","pathNode":{"id":4337,"name":"BeaconProxy","nameLocations":["3039:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2705,"src":"3039:11:21"},"referencedDeclaration":2705,"src":"3039:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}},"visibility":"internal"}],"id":4349,"initialValue":{"arguments":[{"arguments":[{"id":4345,"name":"securityModuleBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"3110:20:21","typeDescriptions":{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UpgradeableBeacon_$2790","typeString":"contract UpgradeableBeacon"}],"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4343,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:21","typeDescriptions":{}}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4347,"name":"securityData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"3145:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3073:15:21","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$2705_$","typeString":"function (address,bytes memory) payable returns (contract BeaconProxy)"},"typeName":{"id":4341,"nodeType":"UserDefinedTypeName","pathNode":{"id":4340,"name":"BeaconProxy","nameLocations":["3077:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":2705,"src":"3077:11:21"},"referencedDeclaration":2705,"src":"3077:11:21","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3073:94:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}},"nodeType":"VariableDeclarationStatement","src":"3039:128:21"},{"assignments":[4351],"declarations":[{"constant":false,"id":4351,"mutability":"mutable","name":"securityModuleAddress","nameLocation":"3185:21:21","nodeType":"VariableDeclaration","scope":4384,"src":"3177:29:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4350,"name":"address","nodeType":"ElementaryTypeName","src":"3177:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4356,"initialValue":{"arguments":[{"id":4354,"name":"securityModuleProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"3217:19:21","typeDescriptions":{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BeaconProxy_$2705","typeString":"contract BeaconProxy"}],"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3209:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4352,"name":"address","nodeType":"ElementaryTypeName","src":"3209:7:21","typeDescriptions":{}}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3209:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3177:60:21"},{"expression":{"arguments":[{"id":4361,"name":"securityModuleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"3333:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4364,"name":"securityModuleInitData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"3367:22:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4362,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3356:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3360:6:21","memberName":"encode","nodeType":"MemberAccess","src":"3356:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4358,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"3309:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4357,"name":"IV4TokenBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"3296:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4TokenBase_$5525_$","typeString":"type(contract IV4TokenBase)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3296:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IV4TokenBase_$5525","typeString":"contract IV4TokenBase"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3323:9:21","memberName":"addModule","nodeType":"MemberAccess","referencedDeclaration":5469,"src":"3296:36:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes memory) external returns (bool)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3296:95:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4367,"nodeType":"ExpressionStatement","src":"3296:95:21"},{"expression":{"arguments":[{"id":4372,"name":"securityModuleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"3510:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":4369,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"3478:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4368,"name":"IV4TokenBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"3465:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4TokenBase_$5525_$","typeString":"type(contract IV4TokenBase)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3465:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IV4TokenBase_$5525","typeString":"contract IV4TokenBase"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:17:21","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":5518,"src":"3465:44:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3465:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4374,"nodeType":"ExpressionStatement","src":"3465:67:21"},{"eventCall":{"arguments":[{"id":4376,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"3569:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4377,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"3583:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4378,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"3589:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4379,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"3597:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4375,"name":"TokenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4200,"src":"3556:12:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,string memory,string memory,address)"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3556:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4381,"nodeType":"EmitStatement","src":"3551:52:21"},{"expression":{"id":4382,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"3620:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4280,"id":4383,"nodeType":"Return","src":"3613:19:21"}]},"documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"1857:287:21","text":" @dev Create a new V4 token with default modules\n @param name Token name\n @param symbol Token symbol\n @param initialSupply Initial supply to mint\n @param owner Owner of the new token\n @return tokenAddress Address of the newly created token"},"functionSelector":"34f359f9","id":4385,"implemented":true,"kind":"function","modifiers":[],"name":"createToken","nameLocation":"2158:11:21","nodeType":"FunctionDefinition","parameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"name","nameLocation":"2193:4:21","nodeType":"VariableDeclaration","scope":4385,"src":"2179:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4269,"name":"string","nodeType":"ElementaryTypeName","src":"2179:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"symbol","nameLocation":"2221:6:21","nodeType":"VariableDeclaration","scope":4385,"src":"2207:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4271,"name":"string","nodeType":"ElementaryTypeName","src":"2207:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"initialSupply","nameLocation":"2245:13:21","nodeType":"VariableDeclaration","scope":4385,"src":"2237:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2237:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4276,"mutability":"mutable","name":"owner","nameLocation":"2276:5:21","nodeType":"VariableDeclaration","scope":4385,"src":"2268:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4275,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2169:118:21"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"tokenAddress","nameLocation":"2314:12:21","nodeType":"VariableDeclaration","scope":4385,"src":"2306:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4278,"name":"address","nodeType":"ElementaryTypeName","src":"2306:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2305:22:21"},"scope":4386,"src":"2149:1490:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4387,"src":"376:3265:21","usedErrors":[],"usedEvents":[2153,4200]}],"src":"32:3610:21"},"id":21},"src/contracts/V4SecurityModule.sol":{"ast":{"absolutePath":"src/contracts/V4SecurityModule.sol","exportedSymbols":{"AddressUpgradeable":[1475],"ContextUpgradeable":[1526],"EnumerableSetUpgradeable":[2139],"IV4Module":[5367],"IV4SecurityModule":[5444],"IV4TokenBase":[5525],"Initializable":[301],"OwnableUpgradeable":[132],"V4SecurityModule":[4897]},"id":4898,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4388,"literals":["solidity","0.8",".22"],"nodeType":"PragmaDirective","src":"32:23:22"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4389,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4898,"sourceUnit":302,"src":"57:75:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4898,"sourceUnit":133,"src":"133:75:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol","id":4391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4898,"sourceUnit":2140,"src":"209:88:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4SecurityModule.sol","file":"./interfaces/IV4SecurityModule.sol","id":4392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4898,"sourceUnit":5445,"src":"298:44:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4Module.sol","file":"./interfaces/IV4Module.sol","id":4393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4898,"sourceUnit":5368,"src":"343:36:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4TokenBase.sol","file":"./interfaces/IV4TokenBase.sol","id":4394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4898,"sourceUnit":5526,"src":"380:39:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4396,"name":"Initializable","nameLocations":["560:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"560:13:22"},"id":4397,"nodeType":"InheritanceSpecifier","src":"560:13:22"},{"baseName":{"id":4398,"name":"OwnableUpgradeable","nameLocations":["580:18:22"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"580:18:22"},"id":4399,"nodeType":"InheritanceSpecifier","src":"580:18:22"},{"baseName":{"id":4400,"name":"IV4SecurityModule","nameLocations":["604:17:22"],"nodeType":"IdentifierPath","referencedDeclaration":5444,"src":"604:17:22"},"id":4401,"nodeType":"InheritanceSpecifier","src":"604:17:22"},{"baseName":{"id":4402,"name":"IV4Module","nameLocations":["627:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":5367,"src":"627:9:22"},"id":4403,"nodeType":"InheritanceSpecifier","src":"627:9:22"}],"canonicalName":"V4SecurityModule","contractDependencies":[],"contractKind":"contract","documentation":{"id":4395,"nodeType":"StructuredDocumentation","src":"421:104:22","text":" @title V4SecurityModule\n @dev Implementation of security module with multi-sig capabilities"},"fullyImplemented":true,"id":4897,"linearizedBaseContracts":[4897,5367,5444,132,1526,301],"name":"V4SecurityModule","nameLocation":"535:16:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4407,"libraryName":{"id":4404,"name":"EnumerableSetUpgradeable","nameLocations":["649:24:22"],"nodeType":"IdentifierPath","referencedDeclaration":2139,"src":"649:24:22"},"nodeType":"UsingForDirective","src":"643:71:22","typeName":{"id":4406,"nodeType":"UserDefinedTypeName","pathNode":{"id":4405,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["678:24:22","703:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"678:35:22"},"referencedDeclaration":1852,"src":"678:35:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}}},{"constant":false,"id":4409,"mutability":"mutable","name":"_token","nameLocation":"740:6:22","nodeType":"VariableDeclaration","scope":4897,"src":"724:22:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4412,"mutability":"mutable","name":"_signers","nameLocation":"796:8:22","nodeType":"VariableDeclaration","scope":4897,"src":"752:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet"},"typeName":{"id":4411,"nodeType":"UserDefinedTypeName","pathNode":{"id":4410,"name":"EnumerableSetUpgradeable.AddressSet","nameLocations":["752:24:22","777:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":1852,"src":"752:35:22"},"referencedDeclaration":1852,"src":"752:35:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage_ptr","typeString":"struct EnumerableSetUpgradeable.AddressSet"}},"visibility":"private"},{"constant":false,"id":4414,"mutability":"mutable","name":"_threshold","nameLocation":"826:10:22","nodeType":"VariableDeclaration","scope":4897,"src":"810:26:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"baseFunctions":[5346],"body":{"id":4479,"nodeType":"Block","src":"940:416:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4425,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"958:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"963:6:22","memberName":"length","nodeType":"MemberAccess","src":"958:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"973:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"958:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a20696e76616c696420696e697469616c697a6174696f6e2064617461","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"977:47:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0efc630597adb165bc7ef3f362fd50c16b5b6ce4836e326bf3d3de4e16f15314","typeString":"literal_string \"V4SecurityModule: invalid initialization data\""},"value":"V4SecurityModule: invalid initialization data"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0efc630597adb165bc7ef3f362fd50c16b5b6ce4836e326bf3d3de4e16f15314","typeString":"literal_string \"V4SecurityModule: invalid initialization data\""}],"id":4424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"950:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"950:75:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4431,"nodeType":"ExpressionStatement","src":"950:75:22"},{"assignments":[4433],"declarations":[{"constant":false,"id":4433,"mutability":"mutable","name":"owner","nameLocation":"1043:5:22","nodeType":"VariableDeclaration","scope":4479,"src":"1035:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4447,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":4442,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"1083:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1075:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1075:7:22","typeDescriptions":{}}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1075:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1067:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1067:7:22","typeDescriptions":{}}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1067:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1059:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4436,"name":"uint160","nodeType":"ElementaryTypeName","src":"1059:7:22","typeDescriptions":{}}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1059:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1051:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4434,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:22","typeDescriptions":{}}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1051:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1035:56:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4448,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1101:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1101:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4450,"nodeType":"ExpressionStatement","src":"1101:16:22"},{"expression":{"arguments":[{"id":4452,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"1146:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4451,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1127:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1127:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4454,"nodeType":"ExpressionStatement","src":"1127:25:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"1179:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1195:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:22","typeDescriptions":{}}},"id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1195:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1179:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a20746f6b656e20616464726573732063616e6e6f74206265207a65726f","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:48:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d585892941e543c01cf77656d7a07fdcb6f6ad206f06686f19f1052808352a39","typeString":"literal_string \"V4SecurityModule: token address cannot be zero\""},"value":"V4SecurityModule: token address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d585892941e543c01cf77656d7a07fdcb6f6ad206f06686f19f1052808352a39","typeString":"literal_string \"V4SecurityModule: token address cannot be zero\""}],"id":4455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1171:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1171:85:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4464,"nodeType":"ExpressionStatement","src":"1171:85:22"},{"expression":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4465,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"1266:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4466,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"1275:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1266:21:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4468,"nodeType":"ExpressionStatement","src":"1266:21:22"},{"expression":{"arguments":[{"id":4472,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"1319:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4469,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"1306:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1315:3:22","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"1306:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1306:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4474,"nodeType":"ExpressionStatement","src":"1306:19:22"},{"expression":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4475,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"1335:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1348:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1335:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4478,"nodeType":"ExpressionStatement","src":"1335:14:22"}]},"functionSelector":"d1f57894","id":4480,"implemented":true,"kind":"function","modifiers":[{"id":4422,"kind":"modifierInvocation","modifierName":{"id":4421,"name":"initializer","nameLocations":["928:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"928:11:22"},"nodeType":"ModifierInvocation","src":"928:11:22"}],"name":"initialize","nameLocation":"856:10:22","nodeType":"FunctionDefinition","overrides":{"id":4420,"nodeType":"OverrideSpecifier","overrides":[],"src":"919:8:22"},"parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"tokenAddress","nameLocation":"875:12:22","nodeType":"VariableDeclaration","scope":4480,"src":"867:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4415,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"data","nameLocation":"904:4:22","nodeType":"VariableDeclaration","scope":4480,"src":"889:19:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4417,"name":"bytes","nodeType":"ElementaryTypeName","src":"889:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"866:43:22"},"returnParameters":{"id":4423,"nodeType":"ParameterList","parameters":[],"src":"940:0:22"},"scope":4897,"src":"847:509:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5352],"body":{"id":4490,"nodeType":"Block","src":"1432:52:22","statements":[{"expression":{"arguments":[{"hexValue":"53454355524954595f4d4f44554c45","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1459:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8dfd5edbafe3b1a04db54003f904cfc4610e36b1414906e3f2255bd826e13cf","typeString":"literal_string \"SECURITY_MODULE\""},"value":"SECURITY_MODULE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e8dfd5edbafe3b1a04db54003f904cfc4610e36b1414906e3f2255bd826e13cf","typeString":"literal_string \"SECURITY_MODULE\""}],"id":4486,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1449:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1449:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4485,"id":4489,"nodeType":"Return","src":"1442:35:22"}]},"functionSelector":"0b9349b9","id":4491,"implemented":true,"kind":"function","modifiers":[],"name":"getModuleType","nameLocation":"1375:13:22","nodeType":"FunctionDefinition","overrides":{"id":4482,"nodeType":"OverrideSpecifier","overrides":[],"src":"1405:8:22"},"parameters":{"id":4481,"nodeType":"ParameterList","parameters":[],"src":"1388:2:22"},"returnParameters":{"id":4485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4491,"src":"1423:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4483,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1423:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1422:9:22"},"scope":4897,"src":"1366:118:22","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5360],"body":{"id":4559,"nodeType":"Block","src":"1578:742:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"1608:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4500,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1623:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1641:24:22","memberName":"proposeOwnershipTransfer","nodeType":"MemberAccess","referencedDeclaration":5378,"src":"1623:42:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_bytes32_$","typeString":"function IV4SecurityModule.proposeOwnershipTransfer(address) returns (bytes32)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1666:8:22","memberName":"selector","nodeType":"MemberAccess","src":"1623:51:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1608:66:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4504,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"1690:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4505,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1705:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1723:24:22","memberName":"confirmOwnershipTransfer","nodeType":"MemberAccess","referencedDeclaration":5386,"src":"1705:42:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_bytes32_$returns$_t_bool_$","typeString":"function IV4SecurityModule.confirmOwnershipTransfer(bytes32) returns (bool)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1748:8:22","memberName":"selector","nodeType":"MemberAccess","src":"1705:51:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1690:66:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:148:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"1772:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4511,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1787:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1805:9:22","memberName":"addSigner","nodeType":"MemberAccess","referencedDeclaration":5394,"src":"1787:27:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function IV4SecurityModule.addSigner(address) returns (bool)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1815:8:22","memberName":"selector","nodeType":"MemberAccess","src":"1787:36:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1772:51:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:215:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4516,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"1839:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4517,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1854:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1872:12:22","memberName":"removeSigner","nodeType":"MemberAccess","referencedDeclaration":5402,"src":"1854:30:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function IV4SecurityModule.removeSigner(address) returns (bool)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1885:8:22","memberName":"selector","nodeType":"MemberAccess","src":"1854:39:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1839:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:285:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4522,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"1909:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4523,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1924:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1942:12:22","memberName":"setThreshold","nodeType":"MemberAccess","referencedDeclaration":5410,"src":"1924:30:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_uint256_$returns$_t_bool_$","typeString":"function IV4SecurityModule.setThreshold(uint256) returns (bool)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1955:8:22","memberName":"selector","nodeType":"MemberAccess","src":"1924:39:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1909:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:355:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"1979:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4529,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"1994:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:8:22","memberName":"isSigner","nodeType":"MemberAccess","referencedDeclaration":5418,"src":"1994:26:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_bool_$","typeString":"function IV4SecurityModule.isSigner(address) view returns (bool)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:8:22","memberName":"selector","nodeType":"MemberAccess","src":"1994:35:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1979:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:421:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"2045:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4535,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"2060:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2078:12:22","memberName":"getThreshold","nodeType":"MemberAccess","referencedDeclaration":5424,"src":"2060:30:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_uint256_$","typeString":"function IV4SecurityModule.getThreshold() view returns (uint256)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2091:8:22","memberName":"selector","nodeType":"MemberAccess","src":"2060:39:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2045:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:491:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4540,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"2115:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4541,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"2130:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2148:10:22","memberName":"getSigners","nodeType":"MemberAccess","referencedDeclaration":5431,"src":"2130:28:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function IV4SecurityModule.getSigners() view returns (address[] memory)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2159:8:22","memberName":"selector","nodeType":"MemberAccess","src":"2130:37:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2115:52:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:559:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"2183:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4547,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"2198:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2216:14:22","memberName":"emergencyPause","nodeType":"MemberAccess","referencedDeclaration":5437,"src":"2198:32:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$__$returns$_t_bool_$","typeString":"function IV4SecurityModule.emergencyPause() returns (bool)"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2231:8:22","memberName":"selector","nodeType":"MemberAccess","src":"2198:41:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2183:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:631:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"functionSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"2255:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4553,"name":"IV4SecurityModule","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"2270:17:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4SecurityModule_$5444_$","typeString":"type(contract IV4SecurityModule)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2288:16:22","memberName":"emergencyUnpause","nodeType":"MemberAccess","referencedDeclaration":5443,"src":"2270:34:22","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$__$returns$_t_bool_$","typeString":"function IV4SecurityModule.emergencyUnpause() returns (bool)"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2305:8:22","memberName":"selector","nodeType":"MemberAccess","src":"2270:43:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2255:58:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1608:705:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4498,"id":4558,"nodeType":"Return","src":"1588:725:22"}]},"functionSelector":"be464464","id":4560,"implemented":true,"kind":"function","modifiers":[],"name":"supportsFunction","nameLocation":"1503:16:22","nodeType":"FunctionDefinition","overrides":{"id":4495,"nodeType":"OverrideSpecifier","overrides":[],"src":"1554:8:22"},"parameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"functionSig","nameLocation":"1527:11:22","nodeType":"VariableDeclaration","scope":4560,"src":"1520:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4492,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1520:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1519:20:22"},"returnParameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4560,"src":"1572:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4496,"name":"bool","nodeType":"ElementaryTypeName","src":"1572:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1571:6:22"},"scope":4897,"src":"1494:826:22","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5366],"body":{"id":4568,"nodeType":"Block","src":"2391:30:22","statements":[{"expression":{"id":4566,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"2408:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4565,"id":4567,"nodeType":"Return","src":"2401:13:22"}]},"functionSelector":"21df0da7","id":4569,"implemented":true,"kind":"function","modifiers":[],"name":"getToken","nameLocation":"2339:8:22","nodeType":"FunctionDefinition","overrides":{"id":4562,"nodeType":"OverrideSpecifier","overrides":[],"src":"2364:8:22"},"parameters":{"id":4561,"nodeType":"ParameterList","parameters":[],"src":"2347:2:22"},"returnParameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4569,"src":"2382:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4563,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2381:9:22"},"scope":4897,"src":"2330:91:22","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5378],"body":{"id":4621,"nodeType":"Block","src":"2519:430:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2537:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2541:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2537:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4580,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"2551:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2537:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a2063616c6c6572206973206e6f74206f776e6572","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2560:39:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0389667ba8526eb74fbfe9b75c9821b7356a4c3c09f97f7e2b10685766b1176e","typeString":"literal_string \"V4SecurityModule: caller is not owner\""},"value":"V4SecurityModule: caller is not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0389667ba8526eb74fbfe9b75c9821b7356a4c3c09f97f7e2b10685766b1176e","typeString":"literal_string \"V4SecurityModule: caller is not owner\""}],"id":4577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2529:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2529:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4585,"nodeType":"ExpressionStatement","src":"2529:71:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"2618:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2638:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2630:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4588,"name":"address","nodeType":"ElementaryTypeName","src":"2630:7:22","typeDescriptions":{}}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2618:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a206e6577206f776e65722063616e6e6f74206265207a65726f2061646472657373","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2642:52:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c922f66dc8f42517555834c8c6e57bf7d8224be2f472517e4fe47ae08d48579","typeString":"literal_string \"V4SecurityModule: new owner cannot be zero address\""},"value":"V4SecurityModule: new owner cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7c922f66dc8f42517555834c8c6e57bf7d8224be2f472517e4fe47ae08d48579","typeString":"literal_string \"V4SecurityModule: new owner cannot be zero address\""}],"id":4586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2610:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:85:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4595,"nodeType":"ExpressionStatement","src":"2610:85:22"},{"expression":{"arguments":[{"id":4597,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"2733:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4596,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2714:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2714:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4599,"nodeType":"ExpressionStatement","src":"2714:28:22"},{"assignments":[4601],"declarations":[{"constant":false,"id":4601,"mutability":"mutable","name":"data","nameLocation":"2774:4:22","nodeType":"VariableDeclaration","scope":4621,"src":"2761:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4600,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4607,"initialValue":{"arguments":[{"hexValue":"7472616e736665724f776e657273686970286164647265737329","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2805:28:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2fde38b092330466c661fc723d5289b90272a3e580e3187d1d7ef788506c557","typeString":"literal_string \"transferOwnership(address)\""},"value":"transferOwnership(address)"},{"id":4605,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"2835:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f2fde38b092330466c661fc723d5289b90272a3e580e3187d1d7ef788506c557","typeString":"literal_string \"transferOwnership(address)\""},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4602,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2781:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2785:19:22","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"2781:23:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2781:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2761:83:22"},{"expression":{"arguments":[{"id":4612,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"2893:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4613,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"2901:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4609,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"2867:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4608,"name":"IV4TokenBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"2854:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4TokenBase_$5525_$","typeString":"type(contract IV4TokenBase)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2854:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IV4TokenBase_$5525","typeString":"contract IV4TokenBase"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2875:17:22","memberName":"executeFromModule","nodeType":"MemberAccess","referencedDeclaration":5504,"src":"2854:38:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) external returns (bool,bytes memory)"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2854:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":4615,"nodeType":"ExpressionStatement","src":"2854:52:22"},{"expression":{"arguments":[{"hexValue":"30","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2940:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2932:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2932:7:22","typeDescriptions":{}}},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2932:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4576,"id":4620,"nodeType":"Return","src":"2925:17:22"}]},"functionSelector":"21040fc3","id":4622,"implemented":true,"kind":"function","modifiers":[],"name":"proposeOwnershipTransfer","nameLocation":"2440:24:22","nodeType":"FunctionDefinition","overrides":{"id":4573,"nodeType":"OverrideSpecifier","overrides":[],"src":"2492:8:22"},"parameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"newOwner","nameLocation":"2473:8:22","nodeType":"VariableDeclaration","scope":4622,"src":"2465:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4570,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:18:22"},"returnParameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4622,"src":"2510:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2510:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2509:9:22"},"scope":4897,"src":"2431:518:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5386],"body":{"id":4632,"nodeType":"Block","src":"3040:28:22","statements":[{"expression":{"hexValue":"74727565","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3057:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4629,"id":4631,"nodeType":"Return","src":"3050:11:22"}]},"functionSelector":"e5006801","id":4633,"implemented":true,"kind":"function","modifiers":[],"name":"confirmOwnershipTransfer","nameLocation":"2968:24:22","nodeType":"FunctionDefinition","overrides":{"id":4626,"nodeType":"OverrideSpecifier","overrides":[],"src":"3016:8:22"},"parameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"2993:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2993:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2992:9:22"},"returnParameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4633,"src":"3034:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4627,"name":"bool","nodeType":"ElementaryTypeName","src":"3034:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3033:6:22"},"scope":4897,"src":"2959:109:22","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[5394],"body":{"id":4667,"nodeType":"Block","src":"3146:236:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4642,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3164:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3168:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3164:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4644,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3178:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3178:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3164:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a2063616c6c6572206973206e6f74206f776e6572","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3187:39:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0389667ba8526eb74fbfe9b75c9821b7356a4c3c09f97f7e2b10685766b1176e","typeString":"literal_string \"V4SecurityModule: caller is not owner\""},"value":"V4SecurityModule: caller is not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0389667ba8526eb74fbfe9b75c9821b7356a4c3c09f97f7e2b10685766b1176e","typeString":"literal_string \"V4SecurityModule: caller is not owner\""}],"id":4641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3156:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4649,"nodeType":"ExpressionStatement","src":"3156:71:22"},{"expression":{"arguments":[{"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3245:26:22","subExpression":{"arguments":[{"id":4653,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"3264:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4651,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3246:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3255:8:22","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"3246:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a207369676e657220616c726561647920657869737473","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3273:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_791a79251c02c8c39bc646e527183bb2d61fa8064e73b264b0af4ec5672eeb90","typeString":"literal_string \"V4SecurityModule: signer already exists\""},"value":"V4SecurityModule: signer already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_791a79251c02c8c39bc646e527183bb2d61fa8064e73b264b0af4ec5672eeb90","typeString":"literal_string \"V4SecurityModule: signer already exists\""}],"id":4650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3237:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3237:78:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4658,"nodeType":"ExpressionStatement","src":"3237:78:22"},{"expression":{"arguments":[{"id":4662,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"3347:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4659,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3334:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3343:3:22","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"3334:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3334:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4664,"nodeType":"ExpressionStatement","src":"3334:20:22"},{"expression":{"hexValue":"74727565","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3371:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4640,"id":4666,"nodeType":"Return","src":"3364:11:22"}]},"functionSelector":"eb12d61e","id":4668,"implemented":true,"kind":"function","modifiers":[],"name":"addSigner","nameLocation":"3087:9:22","nodeType":"FunctionDefinition","overrides":{"id":4637,"nodeType":"OverrideSpecifier","overrides":[],"src":"3122:8:22"},"parameters":{"id":4636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"signer","nameLocation":"3105:6:22","nodeType":"VariableDeclaration","scope":4668,"src":"3097:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4634,"name":"address","nodeType":"ElementaryTypeName","src":"3097:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3096:16:22"},"returnParameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4668,"src":"3140:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4638,"name":"bool","nodeType":"ElementaryTypeName","src":"3140:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3139:6:22"},"scope":4897,"src":"3078:304:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5402],"body":{"id":4718,"nodeType":"Block","src":"3463:407:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4677,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3481:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3485:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3481:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4679,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3495:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3495:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3481:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a2063616c6c6572206973206e6f74206f776e6572","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3504:39:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0389667ba8526eb74fbfe9b75c9821b7356a4c3c09f97f7e2b10685766b1176e","typeString":"literal_string \"V4SecurityModule: caller is not owner\""},"value":"V4SecurityModule: caller is not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0389667ba8526eb74fbfe9b75c9821b7356a4c3c09f97f7e2b10685766b1176e","typeString":"literal_string \"V4SecurityModule: caller is not owner\""}],"id":4676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3473:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3473:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4684,"nodeType":"ExpressionStatement","src":"3473:71:22"},{"expression":{"arguments":[{"arguments":[{"id":4688,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3580:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4686,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3562:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3571:8:22","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"3562:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3562:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a207369676e657220646f6573206e6f74206578697374","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3589:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4621a1d5a5dca7e287197fe2901555144dbf1a82526743dccfd9bc3556ebeb46","typeString":"literal_string \"V4SecurityModule: signer does not exist\""},"value":"V4SecurityModule: signer does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4621a1d5a5dca7e287197fe2901555144dbf1a82526743dccfd9bc3556ebeb46","typeString":"literal_string \"V4SecurityModule: signer does not exist\""}],"id":4685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3554:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:77:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4692,"nodeType":"ExpressionStatement","src":"3554:77:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4694,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3649:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3658:6:22","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"3649:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4697,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"3669:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3649:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a20776f756c6420627265616b207468726573686f6c64","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3681:41:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f39f3253437f4ebf99783679e150bf951bd75788fc3dcbe1e8f36fa39bb0248","typeString":"literal_string \"V4SecurityModule: would break threshold\""},"value":"V4SecurityModule: would break threshold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f39f3253437f4ebf99783679e150bf951bd75788fc3dcbe1e8f36fa39bb0248","typeString":"literal_string \"V4SecurityModule: would break threshold\""}],"id":4693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3641:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3641:82:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4701,"nodeType":"ExpressionStatement","src":"3641:82:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3741:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4704,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3751:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3751:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3741:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a2063616e6e6f742072656d6f7665206f776e6572","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3760:39:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7b6963cfc8f4f0fd519d56faa7020d392feefacca4a2ca30e0a2d2ed1e20deb1","typeString":"literal_string \"V4SecurityModule: cannot remove owner\""},"value":"V4SecurityModule: cannot remove owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7b6963cfc8f4f0fd519d56faa7020d392feefacca4a2ca30e0a2d2ed1e20deb1","typeString":"literal_string \"V4SecurityModule: cannot remove owner\""}],"id":4702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3733:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4709,"nodeType":"ExpressionStatement","src":"3733:67:22"},{"expression":{"arguments":[{"id":4713,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3835:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4710,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"3819:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3828:6:22","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":1906,"src":"3819:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3819:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4715,"nodeType":"ExpressionStatement","src":"3819:23:22"},{"expression":{"hexValue":"74727565","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3859:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4675,"id":4717,"nodeType":"Return","src":"3852:11:22"}]},"functionSelector":"0e316ab7","id":4719,"implemented":true,"kind":"function","modifiers":[],"name":"removeSigner","nameLocation":"3401:12:22","nodeType":"FunctionDefinition","overrides":{"id":4672,"nodeType":"OverrideSpecifier","overrides":[],"src":"3439:8:22"},"parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"signer","nameLocation":"3422:6:22","nodeType":"VariableDeclaration","scope":4719,"src":"3414:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4669,"name":"address","nodeType":"ElementaryTypeName","src":"3414:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3413:16:22"},"returnParameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4719,"src":"3457:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4673,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3456:6:22"},"scope":4897,"src":"3392:478:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5410],"body":{"id":4758,"nodeType":"Block","src":"3954:317:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4728,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3972:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3976:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3972:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4730,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3986:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3986:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3972:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a2063616c6c6572206973206e6f74206f776e6572","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3995:39:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0389667ba8526eb74fbfe9b75c9821b7356a4c3c09f97f7e2b10685766b1176e","typeString":"literal_string \"V4SecurityModule: caller is not owner\""},"value":"V4SecurityModule: caller is not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0389667ba8526eb74fbfe9b75c9821b7356a4c3c09f97f7e2b10685766b1176e","typeString":"literal_string \"V4SecurityModule: caller is not owner\""}],"id":4727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3964:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3964:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4735,"nodeType":"ExpressionStatement","src":"3964:71:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"4053:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4065:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4053:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a207468726573686f6c642063616e6e6f74206265207a65726f","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4068:44:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0bcd847c3152bbe30711a2cb14163bae657443c95f5c46c889e55f5d340ff0","typeString":"literal_string \"V4SecurityModule: threshold cannot be zero\""},"value":"V4SecurityModule: threshold cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da0bcd847c3152bbe30711a2cb14163bae657443c95f5c46c889e55f5d340ff0","typeString":"literal_string \"V4SecurityModule: threshold cannot be zero\""}],"id":4736,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4045:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4045:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4742,"nodeType":"ExpressionStatement","src":"4045:68:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4744,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"4131:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4745,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"4144:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4153:6:22","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"4144:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4131:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a207468726573686f6c6420746f6f2068696768","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4163:38:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c41c52deb22e82f77ab15441350e515c557880beab18760618f260bddbb0cbc3","typeString":"literal_string \"V4SecurityModule: threshold too high\""},"value":"V4SecurityModule: threshold too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c41c52deb22e82f77ab15441350e515c557880beab18760618f260bddbb0cbc3","typeString":"literal_string \"V4SecurityModule: threshold too high\""}],"id":4743,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4123:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4123:79:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4751,"nodeType":"ExpressionStatement","src":"4123:79:22"},{"expression":{"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4752,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"4221:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4753,"name":"threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"4234:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4221:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4755,"nodeType":"ExpressionStatement","src":"4221:22:22"},{"expression":{"hexValue":"74727565","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4260:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4726,"id":4757,"nodeType":"Return","src":"4253:11:22"}]},"functionSelector":"960bfe04","id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"setThreshold","nameLocation":"3889:12:22","nodeType":"FunctionDefinition","overrides":{"id":4723,"nodeType":"OverrideSpecifier","overrides":[],"src":"3930:8:22"},"parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"threshold","nameLocation":"3910:9:22","nodeType":"VariableDeclaration","scope":4759,"src":"3902:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3901:19:22"},"returnParameters":{"id":4726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4759,"src":"3948:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4724,"name":"bool","nodeType":"ElementaryTypeName","src":"3948:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3947:6:22"},"scope":4897,"src":"3880:391:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5418],"body":{"id":4772,"nodeType":"Block","src":"4354:50:22","statements":[{"expression":{"arguments":[{"id":4769,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"4389:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4767,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"4371:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4380:8:22","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"4371:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4766,"id":4771,"nodeType":"Return","src":"4364:33:22"}]},"functionSelector":"7df73e27","id":4773,"implemented":true,"kind":"function","modifiers":[],"name":"isSigner","nameLocation":"4290:8:22","nodeType":"FunctionDefinition","overrides":{"id":4763,"nodeType":"OverrideSpecifier","overrides":[],"src":"4330:8:22"},"parameters":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"account","nameLocation":"4307:7:22","nodeType":"VariableDeclaration","scope":4773,"src":"4299:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4760,"name":"address","nodeType":"ElementaryTypeName","src":"4299:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4298:17:22"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4773,"src":"4348:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4764,"name":"bool","nodeType":"ElementaryTypeName","src":"4348:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4347:6:22"},"scope":4897,"src":"4281:123:22","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5424],"body":{"id":4781,"nodeType":"Block","src":"4479:34:22","statements":[{"expression":{"id":4779,"name":"_threshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"4496:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4778,"id":4780,"nodeType":"Return","src":"4489:17:22"}]},"functionSelector":"e75235b8","id":4782,"implemented":true,"kind":"function","modifiers":[],"name":"getThreshold","nameLocation":"4423:12:22","nodeType":"FunctionDefinition","overrides":{"id":4775,"nodeType":"OverrideSpecifier","overrides":[],"src":"4452:8:22"},"parameters":{"id":4774,"nodeType":"ParameterList","parameters":[],"src":"4435:2:22"},"returnParameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4782,"src":"4470:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"4470:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4469:9:22"},"scope":4897,"src":"4414:99:22","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5431],"body":{"id":4829,"nodeType":"Block","src":"4595:249:22","statements":[{"assignments":[4790],"declarations":[{"constant":false,"id":4790,"mutability":"mutable","name":"length","nameLocation":"4613:6:22","nodeType":"VariableDeclaration","scope":4829,"src":"4605:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"4605:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4794,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4791,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"4622:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4631:6:22","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1948,"src":"4622:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4605:34:22"},{"assignments":[4799],"declarations":[{"constant":false,"id":4799,"mutability":"mutable","name":"signers","nameLocation":"4666:7:22","nodeType":"VariableDeclaration","scope":4829,"src":"4649:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4797,"name":"address","nodeType":"ElementaryTypeName","src":"4649:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4798,"nodeType":"ArrayTypeName","src":"4649:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4805,"initialValue":{"arguments":[{"id":4803,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"4690:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4676:13:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4800,"name":"address","nodeType":"ElementaryTypeName","src":"4680:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4801,"nodeType":"ArrayTypeName","src":"4680:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4676:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4649:48:22"},{"body":{"id":4825,"nodeType":"Block","src":"4753:52:22","statements":[{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4816,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"4767:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4818,"indexExpression":{"id":4817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"4775:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4767:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"4792:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4819,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"4780:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4789:2:22","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":1975,"src":"4780:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4780:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4767:27:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4824,"nodeType":"ExpressionStatement","src":"4767:27:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"4736:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4811,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"4740:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4736:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4826,"initializationExpression":{"assignments":[4807],"declarations":[{"constant":false,"id":4807,"mutability":"mutable","name":"i","nameLocation":"4729:1:22","nodeType":"VariableDeclaration","scope":4826,"src":"4721:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4806,"name":"uint256","nodeType":"ElementaryTypeName","src":"4721:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4809,"initialValue":{"hexValue":"30","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4733:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4721:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4748:3:22","subExpression":{"id":4813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"4748:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"4748:3:22"},"nodeType":"ForStatement","src":"4716:89:22"},{"expression":{"id":4827,"name":"signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"4830:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4788,"id":4828,"nodeType":"Return","src":"4823:14:22"}]},"functionSelector":"94cf795e","id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"getSigners","nameLocation":"4532:10:22","nodeType":"FunctionDefinition","overrides":{"id":4784,"nodeType":"OverrideSpecifier","overrides":[],"src":"4559:8:22"},"parameters":{"id":4783,"nodeType":"ParameterList","parameters":[],"src":"4542:2:22"},"returnParameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"4577:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4785,"name":"address","nodeType":"ElementaryTypeName","src":"4577:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4786,"nodeType":"ArrayTypeName","src":"4577:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4576:18:22"},"scope":4897,"src":"4523:321:22","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5437],"body":{"id":4862,"nodeType":"Block","src":"4913:262:22","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4839,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4949:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4953:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4949:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4837,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"4931:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4940:8:22","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"4931:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4931:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a2063616c6c6572206973206e6f74207369676e6572","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4962:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e14023478293fc760306838f381f343332d04a8727cda60ce9831166e2e2c489","typeString":"literal_string \"V4SecurityModule: caller is not signer\""},"value":"V4SecurityModule: caller is not signer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e14023478293fc760306838f381f343332d04a8727cda60ce9831166e2e2c489","typeString":"literal_string \"V4SecurityModule: caller is not signer\""}],"id":4836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4923:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4923:80:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4844,"nodeType":"ExpressionStatement","src":"4923:80:22"},{"assignments":[4846],"declarations":[{"constant":false,"id":4846,"mutability":"mutable","name":"data","nameLocation":"5035:4:22","nodeType":"VariableDeclaration","scope":4862,"src":"5022:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4845,"name":"bytes","nodeType":"ElementaryTypeName","src":"5022:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4851,"initialValue":{"arguments":[{"hexValue":"70617573652829","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5066:9:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8456cb591a934d53f6ccc6332123a165a1f3562907bf11330d847a29ca49eb89","typeString":"literal_string \"pause()\""},"value":"pause()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8456cb591a934d53f6ccc6332123a165a1f3562907bf11330d847a29ca49eb89","typeString":"literal_string \"pause()\""}],"expression":{"id":4847,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5042:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5046:19:22","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"5042:23:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5022:54:22"},{"expression":{"arguments":[{"id":4856,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"5125:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4857,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"5133:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4853,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"5099:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4852,"name":"IV4TokenBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"5086:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4TokenBase_$5525_$","typeString":"type(contract IV4TokenBase)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5086:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IV4TokenBase_$5525","typeString":"contract IV4TokenBase"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5107:17:22","memberName":"executeFromModule","nodeType":"MemberAccess","referencedDeclaration":5504,"src":"5086:38:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) external returns (bool,bytes memory)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5086:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":4859,"nodeType":"ExpressionStatement","src":"5086:52:22"},{"expression":{"hexValue":"74727565","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5164:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4835,"id":4861,"nodeType":"Return","src":"5157:11:22"}]},"functionSelector":"51858e27","id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyPause","nameLocation":"4863:14:22","nodeType":"FunctionDefinition","overrides":{"id":4832,"nodeType":"OverrideSpecifier","overrides":[],"src":"4889:8:22"},"parameters":{"id":4831,"nodeType":"ParameterList","parameters":[],"src":"4877:2:22"},"returnParameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4863,"src":"4907:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4833,"name":"bool","nodeType":"ElementaryTypeName","src":"4907:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4906:6:22"},"scope":4897,"src":"4854:321:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5443],"body":{"id":4895,"nodeType":"Block","src":"5246:264:22","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5282:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5286:6:22","memberName":"sender","nodeType":"MemberAccess","src":"5282:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4870,"name":"_signers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"5264:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$1852_storage","typeString":"struct EnumerableSetUpgradeable.AddressSet storage ref"}},"id":4871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5273:8:22","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"5264:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$1852_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1852_storage_ptr_$","typeString":"function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5264:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"563453656375726974794d6f64756c653a2063616c6c6572206973206e6f74207369676e6572","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5295:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e14023478293fc760306838f381f343332d04a8727cda60ce9831166e2e2c489","typeString":"literal_string \"V4SecurityModule: caller is not signer\""},"value":"V4SecurityModule: caller is not signer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e14023478293fc760306838f381f343332d04a8727cda60ce9831166e2e2c489","typeString":"literal_string \"V4SecurityModule: caller is not signer\""}],"id":4869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5256:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5256:80:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4877,"nodeType":"ExpressionStatement","src":"5256:80:22"},{"assignments":[4879],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"data","nameLocation":"5368:4:22","nodeType":"VariableDeclaration","scope":4895,"src":"5355:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4878,"name":"bytes","nodeType":"ElementaryTypeName","src":"5355:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4884,"initialValue":{"arguments":[{"hexValue":"756e70617573652829","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5399:11:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f4ba83af89dc9793996d9e56b8abe6dc88cd97c9c2bb23027806e9c1ffd54dc","typeString":"literal_string \"unpause()\""},"value":"unpause()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3f4ba83af89dc9793996d9e56b8abe6dc88cd97c9c2bb23027806e9c1ffd54dc","typeString":"literal_string \"unpause()\""}],"expression":{"id":4880,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5375:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5379:19:22","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"5375:23:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5355:56:22"},{"expression":{"arguments":[{"id":4889,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"5460:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4890,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"5468:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4886,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"5434:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4885,"name":"IV4TokenBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"5421:12:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4TokenBase_$5525_$","typeString":"type(contract IV4TokenBase)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IV4TokenBase_$5525","typeString":"contract IV4TokenBase"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5442:17:22","memberName":"executeFromModule","nodeType":"MemberAccess","referencedDeclaration":5504,"src":"5421:38:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) external returns (bool,bytes memory)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":4892,"nodeType":"ExpressionStatement","src":"5421:52:22"},{"expression":{"hexValue":"74727565","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5499:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4868,"id":4894,"nodeType":"Return","src":"5492:11:22"}]},"functionSelector":"4a4e3bd5","id":4896,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyUnpause","nameLocation":"5194:16:22","nodeType":"FunctionDefinition","overrides":{"id":4865,"nodeType":"OverrideSpecifier","overrides":[],"src":"5222:8:22"},"parameters":{"id":4864,"nodeType":"ParameterList","parameters":[],"src":"5210:2:22"},"returnParameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4896,"src":"5240:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4866,"name":"bool","nodeType":"ElementaryTypeName","src":"5240:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5239:6:22"},"scope":4897,"src":"5185:325:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4898,"src":"526:4986:22","usedErrors":[],"usedEvents":[17,147]}],"src":"32:5481:22"},"id":22},"src/contracts/V4TokenBase.sol":{"ast":{"absolutePath":"src/contracts/V4TokenBase.sol","exportedSymbols":{"AddressUpgradeable":[1475],"ContextUpgradeable":[1526],"ERC20Upgradeable":[1042],"IERC20MetadataUpgradeable":[1145],"IERC20Upgradeable":[1120],"IV4Module":[5367],"IV4TokenBase":[5525],"Initializable":[301],"OwnableUpgradeable":[132],"PausableUpgradeable":[429],"V4TokenBase":[5227]},"id":5228,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4899,"literals":["solidity","0.8",".22"],"nodeType":"PragmaDirective","src":"32:23:23"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":4900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":1043,"src":"57:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4901,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":133,"src":"136:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":302,"src":"212:75:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":4903,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":430,"src":"288:78:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4TokenBase.sol","file":"./interfaces/IV4TokenBase.sol","id":4904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":5526,"src":"367:39:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/contracts/interfaces/IV4Module.sol","file":"./interfaces/IV4Module.sol","id":4905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5228,"sourceUnit":5368,"src":"407:36:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4907,"name":"Initializable","nameLocations":["572:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"572:13:23"},"id":4908,"nodeType":"InheritanceSpecifier","src":"572:13:23"},{"baseName":{"id":4909,"name":"ERC20Upgradeable","nameLocations":["592:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":1042,"src":"592:16:23"},"id":4910,"nodeType":"InheritanceSpecifier","src":"592:16:23"},{"baseName":{"id":4911,"name":"OwnableUpgradeable","nameLocations":["615:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"615:18:23"},"id":4912,"nodeType":"InheritanceSpecifier","src":"615:18:23"},{"baseName":{"id":4913,"name":"PausableUpgradeable","nameLocations":["639:19:23"],"nodeType":"IdentifierPath","referencedDeclaration":429,"src":"639:19:23"},"id":4914,"nodeType":"InheritanceSpecifier","src":"639:19:23"},{"baseName":{"id":4915,"name":"IV4TokenBase","nameLocations":["664:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5525,"src":"664:12:23"},"id":4916,"nodeType":"InheritanceSpecifier","src":"664:12:23"}],"canonicalName":"V4TokenBase","contractDependencies":[],"contractKind":"contract","documentation":{"id":4906,"nodeType":"StructuredDocumentation","src":"445:97:23","text":" @title V4TokenBase\n @dev Base implementation for V4 tokens with modular architecture"},"fullyImplemented":true,"id":5227,"linearizedBaseContracts":[5227,5525,429,132,1042,1145,1120,1526,301],"name":"V4TokenBase","nameLocation":"552:11:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4920,"mutability":"mutable","name":"_modules","nameLocation":"720:8:23","nodeType":"VariableDeclaration","scope":5227,"src":"687:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4919,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4917,"name":"address","nodeType":"ElementaryTypeName","src":"695:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"687:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4918,"name":"bool","nodeType":"ElementaryTypeName","src":"706:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":4923,"mutability":"mutable","name":"_moduleList","nameLocation":"752:11:23","nodeType":"VariableDeclaration","scope":5227,"src":"734:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4921,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4922,"nodeType":"ArrayTypeName","src":"734:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"errorSelector":"bdf91dc1","id":4925,"name":"ModuleExists","nameLocation":"780:12:23","nodeType":"ErrorDefinition","parameters":{"id":4924,"nodeType":"ParameterList","parameters":[],"src":"792:2:23"},"src":"774:21:23"},{"errorSelector":"0286c71d","id":4927,"name":"ModuleDoesNotExist","nameLocation":"806:18:23","nodeType":"ErrorDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[],"src":"824:2:23"},"src":"800:27:23"},{"errorSelector":"1e092104","id":4929,"name":"PermissionDenied","nameLocation":"838:16:23","nodeType":"ErrorDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[],"src":"854:2:23"},"src":"832:25:23"},{"body":{"id":4942,"nodeType":"Block","src":"889:104:23","statements":[{"condition":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"903:21:23","subExpression":{"baseExpression":{"id":4931,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"904:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4934,"indexExpression":{"expression":{"id":4932,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"913:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"917:6:23","memberName":"sender","nodeType":"MemberAccess","src":"913:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"904:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4940,"nodeType":"IfStatement","src":"899:77:23","trueBody":{"id":4939,"nodeType":"Block","src":"926:50:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4936,"name":"PermissionDenied","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"947:16:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"947:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4938,"nodeType":"RevertStatement","src":"940:25:23"}]}},{"id":4941,"nodeType":"PlaceholderStatement","src":"985:1:23"}]},"id":4943,"name":"onlyModule","nameLocation":"876:10:23","nodeType":"ModifierDefinition","parameters":{"id":4930,"nodeType":"ParameterList","parameters":[],"src":"886:2:23"},"src":"867:126:23","virtual":false,"visibility":"internal"},{"baseFunctions":[5459],"body":{"id":4981,"nodeType":"Block","src":"1163:228:23","statements":[{"expression":{"arguments":[{"id":4957,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"1186:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4958,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"1193:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4956,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"1173:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1173:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4960,"nodeType":"ExpressionStatement","src":"1173:28:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4961,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1211:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4963,"nodeType":"ExpressionStatement","src":"1211:16:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4964,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"1237:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1237:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4966,"nodeType":"ExpressionStatement","src":"1237:17:23"},{"expression":{"arguments":[{"id":4968,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"1283:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4967,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1264:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1264:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4970,"nodeType":"ExpressionStatement","src":"1264:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"1313:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1329:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1313:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4980,"nodeType":"IfStatement","src":"1309:76:23","trueBody":{"id":4979,"nodeType":"Block","src":"1332:53:23","statements":[{"expression":{"arguments":[{"id":4975,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"1352:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4976,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"1360:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4974,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"1346:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1346:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4978,"nodeType":"ExpressionStatement","src":"1346:28:23"}]}}]},"functionSelector":"bd3a13f6","id":4982,"implemented":true,"kind":"function","modifiers":[{"id":4954,"kind":"modifierInvocation","modifierName":{"id":4953,"name":"initializer","nameLocations":["1151:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1151:11:23"},"nodeType":"ModifierInvocation","src":"1151:11:23"}],"name":"initialize","nameLocation":"1012:10:23","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"name_","nameLocation":"1046:5:23","nodeType":"VariableDeclaration","scope":4982,"src":"1032:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4944,"name":"string","nodeType":"ElementaryTypeName","src":"1032:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4947,"mutability":"mutable","name":"symbol_","nameLocation":"1075:7:23","nodeType":"VariableDeclaration","scope":4982,"src":"1061:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4946,"name":"string","nodeType":"ElementaryTypeName","src":"1061:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"initialSupply","nameLocation":"1100:13:23","nodeType":"VariableDeclaration","scope":4982,"src":"1092:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"owner_","nameLocation":"1131:6:23","nodeType":"VariableDeclaration","scope":4982,"src":"1123:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4950,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1022:121:23"},"returnParameters":{"id":4955,"nodeType":"ParameterList","parameters":[],"src":"1163:0:23"},"scope":5227,"src":"1003:388:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5469],"body":{"id":5033,"nodeType":"Block","src":"1507:339:23","statements":[{"condition":{"baseExpression":{"id":4994,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"1521:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4996,"indexExpression":{"id":4995,"name":"moduleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"1530:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1521:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5001,"nodeType":"IfStatement","src":"1517:75:23","trueBody":{"id":5000,"nodeType":"Block","src":"1546:46:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4997,"name":"ModuleExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"1567:12:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1567:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4999,"nodeType":"RevertStatement","src":"1560:21:23"}]}},{"clauses":[{"block":{"id":5026,"nodeType":"Block","src":"1671:125:23","statements":[{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5012,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"1685:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5014,"indexExpression":{"id":5013,"name":"moduleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"1694:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1685:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1711:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1685:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"ExpressionStatement","src":"1685:30:23"},{"expression":{"arguments":[{"id":5021,"name":"moduleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"1746:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5018,"name":"_moduleList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"1729:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1741:4:23","memberName":"push","nodeType":"MemberAccess","src":"1729:16:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1729:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5023,"nodeType":"ExpressionStatement","src":"1729:31:23"},{"expression":{"hexValue":"74727565","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1781:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4993,"id":5025,"nodeType":"Return","src":"1774:11:23"}]},"errorName":"","id":5027,"nodeType":"TryCatchClause","src":"1671:125:23"},{"block":{"id":5030,"nodeType":"Block","src":"1803:37:23","statements":[{"expression":{"hexValue":"66616c7365","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1824:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4993,"id":5029,"nodeType":"Return","src":"1817:12:23"}]},"errorName":"","id":5031,"nodeType":"TryCatchClause","src":"1797:43:23"}],"externalCall":{"arguments":[{"arguments":[{"id":5008,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1658:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_V4TokenBase_$5227","typeString":"contract V4TokenBase"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_V4TokenBase_$5227","typeString":"contract V4TokenBase"}],"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1650:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5006,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:23","typeDescriptions":{}}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1650:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5010,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"1665:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":5003,"name":"moduleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"1624:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5002,"name":"IV4Module","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"1614:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IV4Module_$5367_$","typeString":"type(contract IV4Module)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IV4Module_$5367","typeString":"contract IV4Module"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1639:10:23","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":5346,"src":"1614:35:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory) external"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1614:56:23","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5032,"nodeType":"TryStatement","src":"1610:230:23"}]},"functionSelector":"2dd3a78c","id":5034,"implemented":true,"kind":"function","modifiers":[{"id":4990,"kind":"modifierInvocation","modifierName":{"id":4989,"name":"onlyOwner","nameLocations":["1482:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1482:9:23"},"nodeType":"ModifierInvocation","src":"1482:9:23"}],"name":"addModule","nameLocation":"1410:9:23","nodeType":"FunctionDefinition","overrides":{"id":4988,"nodeType":"OverrideSpecifier","overrides":[],"src":"1473:8:23"},"parameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"moduleAddress","nameLocation":"1428:13:23","nodeType":"VariableDeclaration","scope":5034,"src":"1420:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4983,"name":"address","nodeType":"ElementaryTypeName","src":"1420:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4986,"mutability":"mutable","name":"data","nameLocation":"1458:4:23","nodeType":"VariableDeclaration","scope":5034,"src":"1443:19:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4985,"name":"bytes","nodeType":"ElementaryTypeName","src":"1443:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1419:44:23"},"returnParameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5034,"src":"1501:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4991,"name":"bool","nodeType":"ElementaryTypeName","src":"1501:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1500:6:23"},"scope":5227,"src":"1401:445:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5477],"body":{"id":5098,"nodeType":"Block","src":"1944:474:23","statements":[{"condition":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1958:24:23","subExpression":{"baseExpression":{"id":5044,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"1959:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5046,"indexExpression":{"id":5045,"name":"moduleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"1968:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1959:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5052,"nodeType":"IfStatement","src":"1954:82:23","trueBody":{"id":5051,"nodeType":"Block","src":"1984:52:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5048,"name":"ModuleDoesNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"2005:18:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5050,"nodeType":"RevertStatement","src":"1998:27:23"}]}},{"expression":{"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5053,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"2054:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5055,"indexExpression":{"id":5054,"name":"moduleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"2063:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2054:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2080:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2054:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5058,"nodeType":"ExpressionStatement","src":"2054:31:23"},{"body":{"id":5094,"nodeType":"Block","src":"2178:204:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5070,"name":"_moduleList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"2196:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5072,"indexExpression":{"id":5071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"2208:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2196:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5073,"name":"moduleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"2214:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2196:31:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5093,"nodeType":"IfStatement","src":"2192:180:23","trueBody":{"id":5092,"nodeType":"Block","src":"2229:143:23","statements":[{"expression":{"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5075,"name":"_moduleList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"2247:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5077,"indexExpression":{"id":5076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"2259:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2247:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5078,"name":"_moduleList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"2264:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5083,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5079,"name":"_moduleList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"2276:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2288:6:23","memberName":"length","nodeType":"MemberAccess","src":"2276:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2276:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2264:35:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2247:52:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5085,"nodeType":"ExpressionStatement","src":"2247:52:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5086,"name":"_moduleList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"2317:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2329:3:23","memberName":"pop","nodeType":"MemberAccess","src":"2317:15:23","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5090,"nodeType":"ExpressionStatement","src":"2317:17:23"},{"id":5091,"nodeType":"Break","src":"2352:5:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"2149:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5064,"name":"_moduleList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"2153:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:6:23","memberName":"length","nodeType":"MemberAccess","src":"2153:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2149:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5095,"initializationExpression":{"assignments":[5060],"declarations":[{"constant":false,"id":5060,"mutability":"mutable","name":"i","nameLocation":"2142:1:23","nodeType":"VariableDeclaration","scope":5095,"src":"2137:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5059,"name":"uint","nodeType":"ElementaryTypeName","src":"2137:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5062,"initialValue":{"hexValue":"30","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2146:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2137:10:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2173:3:23","subExpression":{"id":5067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"2173:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5069,"nodeType":"ExpressionStatement","src":"2173:3:23"},"nodeType":"ForStatement","src":"2132:250:23"},{"expression":{"hexValue":"74727565","id":5096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2407:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5043,"id":5097,"nodeType":"Return","src":"2400:11:23"}]},"functionSelector":"a0632461","id":5099,"implemented":true,"kind":"function","modifiers":[{"id":5040,"kind":"modifierInvocation","modifierName":{"id":5039,"name":"onlyOwner","nameLocations":["1919:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1919:9:23"},"nodeType":"ModifierInvocation","src":"1919:9:23"}],"name":"removeModule","nameLocation":"1865:12:23","nodeType":"FunctionDefinition","overrides":{"id":5038,"nodeType":"OverrideSpecifier","overrides":[],"src":"1910:8:23"},"parameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"moduleAddress","nameLocation":"1886:13:23","nodeType":"VariableDeclaration","scope":5099,"src":"1878:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5035,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1877:23:23"},"returnParameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5099,"src":"1938:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5041,"name":"bool","nodeType":"ElementaryTypeName","src":"1938:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1937:6:23"},"scope":5227,"src":"1856:562:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5485],"body":{"id":5111,"nodeType":"Block","src":"2513:47:23","statements":[{"expression":{"baseExpression":{"id":5107,"name":"_modules","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"2530:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5109,"indexExpression":{"id":5108,"name":"moduleAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"2539:13:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2530:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5106,"id":5110,"nodeType":"Return","src":"2523:30:23"}]},"functionSelector":"d21b9fbd","id":5112,"implemented":true,"kind":"function","modifiers":[],"name":"isModuleActive","nameLocation":"2437:14:23","nodeType":"FunctionDefinition","overrides":{"id":5103,"nodeType":"OverrideSpecifier","overrides":[],"src":"2489:8:23"},"parameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"moduleAddress","nameLocation":"2460:13:23","nodeType":"VariableDeclaration","scope":5112,"src":"2452:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5100,"name":"address","nodeType":"ElementaryTypeName","src":"2452:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2451:23:23"},"returnParameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5112,"src":"2507:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5104,"name":"bool","nodeType":"ElementaryTypeName","src":"2507:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2506:6:23"},"scope":5227,"src":"2428:132:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5504],"body":{"id":5139,"nodeType":"Block","src":"2711:96:23","statements":[{"expression":{"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5126,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2722:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5127,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"2731:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5128,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2721:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5131,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"2757:4:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":5129,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"2745:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2752:4:23","memberName":"call","nodeType":"MemberAccess","src":"2745:11:23","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2745:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"src":"2721:41:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5134,"nodeType":"ExpressionStatement","src":"2721:41:23"},{"expression":{"components":[{"id":5135,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"2780:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5136,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"2789:10:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2779:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5125,"id":5138,"nodeType":"Return","src":"2772:28:23"}]},"functionSelector":"5607b780","id":5140,"implemented":true,"kind":"function","modifiers":[{"id":5120,"kind":"modifierInvocation","modifierName":{"id":5119,"name":"onlyModule","nameLocations":["2652:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"2652:10:23"},"nodeType":"ModifierInvocation","src":"2652:10:23"}],"name":"executeFromModule","nameLocation":"2579:17:23","nodeType":"FunctionDefinition","overrides":{"id":5118,"nodeType":"OverrideSpecifier","overrides":[],"src":"2643:8:23"},"parameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"target","nameLocation":"2605:6:23","nodeType":"VariableDeclaration","scope":5140,"src":"2597:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5113,"name":"address","nodeType":"ElementaryTypeName","src":"2597:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5116,"mutability":"mutable","name":"data","nameLocation":"2628:4:23","nodeType":"VariableDeclaration","scope":5140,"src":"2613:19:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5115,"name":"bytes","nodeType":"ElementaryTypeName","src":"2613:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2596:37:23"},"returnParameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"success","nameLocation":"2677:7:23","nodeType":"VariableDeclaration","scope":5140,"src":"2672:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5121,"name":"bool","nodeType":"ElementaryTypeName","src":"2672:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5124,"mutability":"mutable","name":"returnData","nameLocation":"2699:10:23","nodeType":"VariableDeclaration","scope":5140,"src":"2686:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5123,"name":"bytes","nodeType":"ElementaryTypeName","src":"2686:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2671:39:23"},"scope":5227,"src":"2570:237:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5492],"body":{"id":5149,"nodeType":"Block","src":"2889:35:23","statements":[{"expression":{"id":5147,"name":"_moduleList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"2906:11:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":5146,"id":5148,"nodeType":"Return","src":"2899:18:23"}]},"functionSelector":"b2494df3","id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"getModules","nameLocation":"2826:10:23","nodeType":"FunctionDefinition","overrides":{"id":5142,"nodeType":"OverrideSpecifier","overrides":[],"src":"2853:8:23"},"parameters":{"id":5141,"nodeType":"ParameterList","parameters":[],"src":"2836:2:23"},"returnParameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5150,"src":"2871:16:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5143,"name":"address","nodeType":"ElementaryTypeName","src":"2871:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5144,"nodeType":"ArrayTypeName","src":"2871:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2870:18:23"},"scope":5227,"src":"2817:107:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[5508],"body":{"id":5159,"nodeType":"Block","src":"2980:25:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5156,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"2990:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2990:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5158,"nodeType":"ExpressionStatement","src":"2990:8:23"}]},"functionSelector":"8456cb59","id":5160,"implemented":true,"kind":"function","modifiers":[{"id":5154,"kind":"modifierInvocation","modifierName":{"id":5153,"name":"onlyModule","nameLocations":["2969:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"2969:10:23"},"nodeType":"ModifierInvocation","src":"2969:10:23"}],"name":"pause","nameLocation":"2943:5:23","nodeType":"FunctionDefinition","overrides":{"id":5152,"nodeType":"OverrideSpecifier","overrides":[],"src":"2960:8:23"},"parameters":{"id":5151,"nodeType":"ParameterList","parameters":[],"src":"2948:2:23"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[],"src":"2980:0:23"},"scope":5227,"src":"2934:71:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[5512],"body":{"id":5169,"nodeType":"Block","src":"3063:27:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5166,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"3073:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3073:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5168,"nodeType":"ExpressionStatement","src":"3073:10:23"}]},"functionSelector":"3f4ba83a","id":5170,"implemented":true,"kind":"function","modifiers":[{"id":5164,"kind":"modifierInvocation","modifierName":{"id":5163,"name":"onlyModule","nameLocations":["3052:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":4943,"src":"3052:10:23"},"nodeType":"ModifierInvocation","src":"3052:10:23"}],"name":"unpause","nameLocation":"3024:7:23","nodeType":"FunctionDefinition","overrides":{"id":5162,"nodeType":"OverrideSpecifier","overrides":[],"src":"3043:8:23"},"parameters":{"id":5161,"nodeType":"ParameterList","parameters":[],"src":"3031:2:23"},"returnParameters":{"id":5165,"nodeType":"ParameterList","parameters":[],"src":"3063:0:23"},"scope":5227,"src":"3015:75:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[106,5518],"body":{"id":5186,"nodeType":"Block","src":"3205:50:23","statements":[{"expression":{"arguments":[{"id":5183,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"3239:8:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5180,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3215:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_V4TokenBase_$5227_$","typeString":"type(contract super V4TokenBase)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3221:17:23","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":106,"src":"3215:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3215:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5185,"nodeType":"ExpressionStatement","src":"3215:33:23"}]},"functionSelector":"f2fde38b","id":5187,"implemented":true,"kind":"function","modifiers":[{"id":5178,"kind":"modifierInvocation","modifierName":{"id":5177,"name":"onlyOwner","nameLocations":["3195:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"3195:9:23"},"nodeType":"ModifierInvocation","src":"3195:9:23"}],"name":"transferOwnership","nameLocation":"3109:17:23","nodeType":"FunctionDefinition","overrides":{"id":5176,"nodeType":"OverrideSpecifier","overrides":[{"id":5174,"name":"OwnableUpgradeable","nameLocations":["3161:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"3161:18:23"},{"id":5175,"name":"IV4TokenBase","nameLocations":["3181:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5525,"src":"3181:12:23"}],"src":"3152:42:23"},"parameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"newOwner","nameLocation":"3135:8:23","nodeType":"VariableDeclaration","scope":5187,"src":"3127:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5171,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3126:18:23"},"returnParameters":{"id":5179,"nodeType":"ParameterList","parameters":[],"src":"3205:0:23"},"scope":5227,"src":"3100:155:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[55,5524],"body":{"id":5199,"nodeType":"Block","src":"3351:37:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5195,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3368:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_V4TokenBase_$5227_$","typeString":"type(contract super V4TokenBase)"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3374:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":55,"src":"3368:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3368:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5194,"id":5198,"nodeType":"Return","src":"3361:20:23"}]},"functionSelector":"8da5cb5b","id":5200,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"3270:5:23","nodeType":"FunctionDefinition","overrides":{"id":5191,"nodeType":"OverrideSpecifier","overrides":[{"id":5189,"name":"OwnableUpgradeable","nameLocations":["3299:18:23"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"3299:18:23"},{"id":5190,"name":"IV4TokenBase","nameLocations":["3319:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":5525,"src":"3319:12:23"}],"src":"3290:42:23"},"parameters":{"id":5188,"nodeType":"ParameterList","parameters":[],"src":"3275:2:23"},"returnParameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5200,"src":"3342:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5192,"name":"address","nodeType":"ElementaryTypeName","src":"3342:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3341:9:23"},"scope":5227,"src":"3261:127:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1025],"body":{"id":5225,"nodeType":"Block","src":"3518:133:23","statements":[{"expression":{"arguments":[{"id":5213,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"3555:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"3561:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5215,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"3565:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5210,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3528:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_V4TokenBase_$5227_$","typeString":"type(contract super V4TokenBase)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3534:20:23","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1025,"src":"3528:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5217,"nodeType":"ExpressionStatement","src":"3528:44:23"},{"expression":{"arguments":[{"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3590:9:23","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5219,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"3591:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5634546f6b656e426173653a20746f6b656e207472616e73666572207768696c6520706175736564","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3601:42:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_455c0cc4582094630ed068743dd57c075d695aee63852f7f08ff8ed8dadbe4bd","typeString":"literal_string \"V4TokenBase: token transfer while paused\""},"value":"V4TokenBase: token transfer while paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455c0cc4582094630ed068743dd57c075d695aee63852f7f08ff8ed8dadbe4bd","typeString":"literal_string \"V4TokenBase: token transfer while paused\""}],"id":5218,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3582:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5224,"nodeType":"ExpressionStatement","src":"3582:62:23"}]},"id":5226,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"3407:20:23","nodeType":"FunctionDefinition","overrides":{"id":5208,"nodeType":"OverrideSpecifier","overrides":[],"src":"3509:8:23"},"parameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"from","nameLocation":"3445:4:23","nodeType":"VariableDeclaration","scope":5226,"src":"3437:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5201,"name":"address","nodeType":"ElementaryTypeName","src":"3437:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5204,"mutability":"mutable","name":"to","nameLocation":"3467:2:23","nodeType":"VariableDeclaration","scope":5226,"src":"3459:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5203,"name":"address","nodeType":"ElementaryTypeName","src":"3459:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5206,"mutability":"mutable","name":"amount","nameLocation":"3487:6:23","nodeType":"VariableDeclaration","scope":5226,"src":"3479:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3479:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3427:72:23"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[],"src":"3518:0:23"},"scope":5227,"src":"3398:253:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5228,"src":"543:3110:23","usedErrors":[4925,4927,4929],"usedEvents":[17,147,316,321,1054,1063]}],"src":"32:3622:23"},"id":23},"src/contracts/interfaces/IV4DistributionModule.sol":{"ast":{"absolutePath":"src/contracts/interfaces/IV4DistributionModule.sol","exportedSymbols":{"IV4DistributionModule":[5335]},"id":5336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5229,"literals":["solidity","0.8",".22"],"nodeType":"PragmaDirective","src":"32:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IV4DistributionModule","contractDependencies":[],"contractKind":"interface","documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"57:114:24","text":" @title IV4DistributionModule\n @dev Interface for the distribution module with allocation capabilities"},"fullyImplemented":false,"id":5335,"linearizedBaseContracts":[5335],"name":"IV4DistributionModule","nameLocation":"182:21:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IV4DistributionModule.Allocation","documentation":{"id":5231,"nodeType":"StructuredDocumentation","src":"210:56:24","text":" @dev Struct for each allocation entry"},"id":5242,"members":[{"constant":false,"id":5233,"mutability":"mutable","name":"wallet","nameLocation":"307:6:24","nodeType":"VariableDeclaration","scope":5242,"src":"299:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5232,"name":"address","nodeType":"ElementaryTypeName","src":"299:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5235,"mutability":"mutable","name":"amount","nameLocation":"331:6:24","nodeType":"VariableDeclaration","scope":5242,"src":"323:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5237,"mutability":"mutable","name":"label","nameLocation":"354:5:24","nodeType":"VariableDeclaration","scope":5242,"src":"347:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5236,"name":"string","nodeType":"ElementaryTypeName","src":"347:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5239,"mutability":"mutable","name":"locked","nameLocation":"374:6:24","nodeType":"VariableDeclaration","scope":5242,"src":"369:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5238,"name":"bool","nodeType":"ElementaryTypeName","src":"369:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5241,"mutability":"mutable","name":"unlockTime","nameLocation":"398:10:24","nodeType":"VariableDeclaration","scope":5242,"src":"390:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Allocation","nameLocation":"278:10:24","nodeType":"StructDefinition","scope":5335,"src":"271:144:24","visibility":"public"},{"documentation":{"id":5243,"nodeType":"StructuredDocumentation","src":"425:438:24","text":" @dev Add a new allocation\n @param wallet Recipient wallet address\n @param amount Amount of tokens to allocate\n @param label Optional label for this allocation (e.g. \"Team\", \"Marketing\")\n @param locked Whether the allocation should be time-locked\n @param unlockTime Timestamp when tokens become unlocked (0 if not locked)\n @return success Whether the allocation was successfully added"},"functionSelector":"862c19c8","id":5258,"implemented":false,"kind":"function","modifiers":[],"name":"addAllocation","nameLocation":"877:13:24","nodeType":"FunctionDefinition","parameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"wallet","nameLocation":"908:6:24","nodeType":"VariableDeclaration","scope":5258,"src":"900:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5244,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5247,"mutability":"mutable","name":"amount","nameLocation":"933:6:24","nodeType":"VariableDeclaration","scope":5258,"src":"925:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5246,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5249,"mutability":"mutable","name":"label","nameLocation":"966:5:24","nodeType":"VariableDeclaration","scope":5258,"src":"950:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5248,"name":"string","nodeType":"ElementaryTypeName","src":"950:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5251,"mutability":"mutable","name":"locked","nameLocation":"986:6:24","nodeType":"VariableDeclaration","scope":5258,"src":"981:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5250,"name":"bool","nodeType":"ElementaryTypeName","src":"981:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5253,"mutability":"mutable","name":"unlockTime","nameLocation":"1010:10:24","nodeType":"VariableDeclaration","scope":5258,"src":"1002:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"890:136:24"},"returnParameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"success","nameLocation":"1050:7:24","nodeType":"VariableDeclaration","scope":5258,"src":"1045:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5255,"name":"bool","nodeType":"ElementaryTypeName","src":"1045:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1044:14:24"},"scope":5335,"src":"868:191:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5259,"nodeType":"StructuredDocumentation","src":"1069:363:24","text":" @dev Add multiple allocations at once\n @param wallets Array of recipient wallet addresses\n @param amounts Array of token amounts\n @param labels Array of labels\n @param lockStatus Array of lock statuses\n @param unlockTimes Array of unlock times\n @return success Whether all allocations were successfully added"},"functionSelector":"cc6becc8","id":5279,"implemented":false,"kind":"function","modifiers":[],"name":"addMultipleAllocations","nameLocation":"1446:22:24","nodeType":"FunctionDefinition","parameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"wallets","nameLocation":"1497:7:24","nodeType":"VariableDeclaration","scope":5279,"src":"1478:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5260,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5261,"nodeType":"ArrayTypeName","src":"1478:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5265,"mutability":"mutable","name":"amounts","nameLocation":"1533:7:24","nodeType":"VariableDeclaration","scope":5279,"src":"1514:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1514:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5264,"nodeType":"ArrayTypeName","src":"1514:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5268,"mutability":"mutable","name":"labels","nameLocation":"1568:6:24","nodeType":"VariableDeclaration","scope":5279,"src":"1550:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":5266,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5267,"nodeType":"ArrayTypeName","src":"1550:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":5271,"mutability":"mutable","name":"lockStatus","nameLocation":"1600:10:24","nodeType":"VariableDeclaration","scope":5279,"src":"1584:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5269,"name":"bool","nodeType":"ElementaryTypeName","src":"1584:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5270,"nodeType":"ArrayTypeName","src":"1584:6:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":5274,"mutability":"mutable","name":"unlockTimes","nameLocation":"1639:11:24","nodeType":"VariableDeclaration","scope":5279,"src":"1620:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1620:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5273,"nodeType":"ArrayTypeName","src":"1620:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1468:188:24"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"success","nameLocation":"1680:7:24","nodeType":"VariableDeclaration","scope":5279,"src":"1675:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5276,"name":"bool","nodeType":"ElementaryTypeName","src":"1675:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1674:14:24"},"scope":5335,"src":"1437:252:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"1699:171:24","text":" @dev Remove an allocation\n @param wallet Recipient wallet address to remove\n @return success Whether the allocation was successfully removed"},"functionSelector":"c58156e0","id":5287,"implemented":false,"kind":"function","modifiers":[],"name":"removeAllocation","nameLocation":"1884:16:24","nodeType":"FunctionDefinition","parameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"wallet","nameLocation":"1909:6:24","nodeType":"VariableDeclaration","scope":5287,"src":"1901:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5281,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1900:16:24"},"returnParameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"success","nameLocation":"1940:7:24","nodeType":"VariableDeclaration","scope":5287,"src":"1935:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5284,"name":"bool","nodeType":"ElementaryTypeName","src":"1935:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1934:14:24"},"scope":5335,"src":"1875:74:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5288,"nodeType":"StructuredDocumentation","src":"1959:321:24","text":" @dev Modify an existing allocation\n @param wallet Recipient wallet address\n @param amount New amount of tokens\n @param label New label\n @param locked New lock status\n @param unlockTime New unlock time\n @return success Whether the allocation was successfully modified"},"functionSelector":"a8a4b4c0","id":5303,"implemented":false,"kind":"function","modifiers":[],"name":"modifyAllocation","nameLocation":"2294:16:24","nodeType":"FunctionDefinition","parameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"wallet","nameLocation":"2328:6:24","nodeType":"VariableDeclaration","scope":5303,"src":"2320:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5289,"name":"address","nodeType":"ElementaryTypeName","src":"2320:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"amount","nameLocation":"2352:6:24","nodeType":"VariableDeclaration","scope":5303,"src":"2344:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5294,"mutability":"mutable","name":"label","nameLocation":"2384:5:24","nodeType":"VariableDeclaration","scope":5303,"src":"2368:21:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":5293,"name":"string","nodeType":"ElementaryTypeName","src":"2368:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5296,"mutability":"mutable","name":"locked","nameLocation":"2404:6:24","nodeType":"VariableDeclaration","scope":5303,"src":"2399:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5295,"name":"bool","nodeType":"ElementaryTypeName","src":"2399:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5298,"mutability":"mutable","name":"unlockTime","nameLocation":"2428:10:24","nodeType":"VariableDeclaration","scope":5303,"src":"2420:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2420:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2310:134:24"},"returnParameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"success","nameLocation":"2468:7:24","nodeType":"VariableDeclaration","scope":5303,"src":"2463:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5300,"name":"bool","nodeType":"ElementaryTypeName","src":"2463:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2462:14:24"},"scope":5335,"src":"2285:192:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"2487:98:24","text":" @dev Get all allocations\n @return allocations Array of allocation details"},"functionSelector":"1ca00f62","id":5311,"implemented":false,"kind":"function","modifiers":[],"name":"getAllAllocations","nameLocation":"2599:17:24","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[],"src":"2616:2:24"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"allocations","nameLocation":"2662:11:24","nodeType":"VariableDeclaration","scope":5311,"src":"2642:31:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_memory_ptr_$dyn_memory_ptr","typeString":"struct IV4DistributionModule.Allocation[]"},"typeName":{"baseType":{"id":5307,"nodeType":"UserDefinedTypeName","pathNode":{"id":5306,"name":"Allocation","nameLocations":["2642:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"2642:10:24"},"referencedDeclaration":5242,"src":"2642:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"}},"id":5308,"nodeType":"ArrayTypeName","src":"2642:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Allocation_$5242_storage_$dyn_storage_ptr","typeString":"struct IV4DistributionModule.Allocation[]"}},"visibility":"internal"}],"src":"2641:33:24"},"scope":5335,"src":"2590:85:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5312,"nodeType":"StructuredDocumentation","src":"2685:155:24","text":" @dev Get allocation for a specific wallet\n @param wallet Recipient wallet address\n @return allocation The allocation details"},"functionSelector":"0e022923","id":5320,"implemented":false,"kind":"function","modifiers":[],"name":"getAllocation","nameLocation":"2854:13:24","nodeType":"FunctionDefinition","parameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5314,"mutability":"mutable","name":"wallet","nameLocation":"2876:6:24","nodeType":"VariableDeclaration","scope":5320,"src":"2868:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5313,"name":"address","nodeType":"ElementaryTypeName","src":"2868:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2867:16:24"},"returnParameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"allocation","nameLocation":"2925:10:24","nodeType":"VariableDeclaration","scope":5320,"src":"2907:28:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_memory_ptr","typeString":"struct IV4DistributionModule.Allocation"},"typeName":{"id":5317,"nodeType":"UserDefinedTypeName","pathNode":{"id":5316,"name":"Allocation","nameLocations":["2907:10:24"],"nodeType":"IdentifierPath","referencedDeclaration":5242,"src":"2907:10:24"},"referencedDeclaration":5242,"src":"2907:10:24","typeDescriptions":{"typeIdentifier":"t_struct$_Allocation_$5242_storage_ptr","typeString":"struct IV4DistributionModule.Allocation"}},"visibility":"internal"}],"src":"2906:30:24"},"scope":5335,"src":"2845:92:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5321,"nodeType":"StructuredDocumentation","src":"2947:122:24","text":" @dev Execute the distribution\n @return success Whether the distribution was successfully executed"},"functionSelector":"ff0ed114","id":5326,"implemented":false,"kind":"function","modifiers":[],"name":"executeDistribution","nameLocation":"3083:19:24","nodeType":"FunctionDefinition","parameters":{"id":5322,"nodeType":"ParameterList","parameters":[],"src":"3102:2:24"},"returnParameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"success","nameLocation":"3128:7:24","nodeType":"VariableDeclaration","scope":5326,"src":"3123:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5323,"name":"bool","nodeType":"ElementaryTypeName","src":"3123:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3122:14:24"},"scope":5335,"src":"3074:63:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5327,"nodeType":"StructuredDocumentation","src":"3147:213:24","text":" @dev Unlock tokens for a wallet if the unlock time has passed\n @param wallet Address of the wallet to unlock tokens for\n @return success Whether the tokens were successfully unlocked"},"functionSelector":"cb67f948","id":5334,"implemented":false,"kind":"function","modifiers":[],"name":"unlockTokens","nameLocation":"3374:12:24","nodeType":"FunctionDefinition","parameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5329,"mutability":"mutable","name":"wallet","nameLocation":"3395:6:24","nodeType":"VariableDeclaration","scope":5334,"src":"3387:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5328,"name":"address","nodeType":"ElementaryTypeName","src":"3387:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3386:16:24"},"returnParameters":{"id":5333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"success","nameLocation":"3426:7:24","nodeType":"VariableDeclaration","scope":5334,"src":"3421:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5331,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3420:14:24"},"scope":5335,"src":"3365:70:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5336,"src":"172:3265:24","usedErrors":[],"usedEvents":[]}],"src":"32:3406:24"},"id":24},"src/contracts/interfaces/IV4Module.sol":{"ast":{"absolutePath":"src/contracts/interfaces/IV4Module.sol","exportedSymbols":{"IV4Module":[5367]},"id":5368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5337,"literals":["solidity","0.8",".22"],"nodeType":"PragmaDirective","src":"32:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IV4Module","contractDependencies":[],"contractKind":"interface","documentation":{"id":5338,"nodeType":"StructuredDocumentation","src":"57:64:25","text":" @title IV4Module\n @dev Interface for all V4 modules"},"fullyImplemented":false,"id":5367,"linearizedBaseContracts":[5367],"name":"IV4Module","nameLocation":"132:9:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5339,"nodeType":"StructuredDocumentation","src":"148:170:25","text":" @dev Initialize the module\n @param tokenAddress Address of the token this module is attached to\n @param data Additional initialization data"},"functionSelector":"d1f57894","id":5346,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"332:10:25","nodeType":"FunctionDefinition","parameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"tokenAddress","nameLocation":"351:12:25","nodeType":"VariableDeclaration","scope":5346,"src":"343:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5340,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5343,"mutability":"mutable","name":"data","nameLocation":"380:4:25","nodeType":"VariableDeclaration","scope":5346,"src":"365:19:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5342,"name":"bytes","nodeType":"ElementaryTypeName","src":"365:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"342:43:25"},"returnParameters":{"id":5345,"nodeType":"ParameterList","parameters":[],"src":"394:0:25"},"scope":5367,"src":"323:72:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"405:109:25","text":" @dev Get the type of this module\n @return moduleType Type identifier for this module"},"functionSelector":"0b9349b9","id":5352,"implemented":false,"kind":"function","modifiers":[],"name":"getModuleType","nameLocation":"528:13:25","nodeType":"FunctionDefinition","parameters":{"id":5348,"nodeType":"ParameterList","parameters":[],"src":"541:2:25"},"returnParameters":{"id":5351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5352,"src":"567:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"567:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"566:9:25"},"scope":5367,"src":"519:57:25","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":5353,"nodeType":"StructuredDocumentation","src":"586:196:25","text":" @dev Check if this module has a specific function\n @param functionSig Function signature to check for\n @return hasFunction Whether the module implements the function"},"functionSelector":"be464464","id":5360,"implemented":false,"kind":"function","modifiers":[],"name":"supportsFunction","nameLocation":"796:16:25","nodeType":"FunctionDefinition","parameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"functionSig","nameLocation":"820:11:25","nodeType":"VariableDeclaration","scope":5360,"src":"813:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5354,"name":"bytes4","nodeType":"ElementaryTypeName","src":"813:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"812:20:25"},"returnParameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5360,"src":"856:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5357,"name":"bool","nodeType":"ElementaryTypeName","src":"856:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"855:6:25"},"scope":5367,"src":"787:75:25","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":5361,"nodeType":"StructuredDocumentation","src":"872:113:25","text":" @dev Get the token this module is attached to\n @return tokenAddress Address of the token"},"functionSelector":"21df0da7","id":5366,"implemented":false,"kind":"function","modifiers":[],"name":"getToken","nameLocation":"999:8:25","nodeType":"FunctionDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[],"src":"1007:2:25"},"returnParameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5366,"src":"1033:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5363,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1032:9:25"},"scope":5367,"src":"990:52:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5368,"src":"122:922:25","usedErrors":[],"usedEvents":[]}],"src":"32:1013:25"},"id":25},"src/contracts/interfaces/IV4SecurityModule.sol":{"ast":{"absolutePath":"src/contracts/interfaces/IV4SecurityModule.sol","exportedSymbols":{"IV4SecurityModule":[5444]},"id":5445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5369,"literals":["solidity","0.8",".22"],"nodeType":"PragmaDirective","src":"32:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IV4SecurityModule","contractDependencies":[],"contractKind":"interface","documentation":{"id":5370,"nodeType":"StructuredDocumentation","src":"57:105:26","text":" @title IV4SecurityModule\n @dev Interface for the security module with multi-sig capabilities"},"fullyImplemented":false,"id":5444,"linearizedBaseContracts":[5444],"name":"IV4SecurityModule","nameLocation":"173:17:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5371,"nodeType":"StructuredDocumentation","src":"197:200:26","text":" @dev Propose a new owner (multi-sig process step 1)\n @param newOwner Address of the proposed new owner\n @return proposalId Identifier for the ownership transfer proposal"},"functionSelector":"21040fc3","id":5378,"implemented":false,"kind":"function","modifiers":[],"name":"proposeOwnershipTransfer","nameLocation":"411:24:26","nodeType":"FunctionDefinition","parameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"newOwner","nameLocation":"444:8:26","nodeType":"VariableDeclaration","scope":5378,"src":"436:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5372,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"435:18:26"},"returnParameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5378,"src":"472:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"472:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"471:9:26"},"scope":5444,"src":"402:79:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5379,"nodeType":"StructuredDocumentation","src":"491:226:26","text":" @dev Confirm an ownership transfer proposal (multi-sig process step 2)\n @param proposalId Identifier of the proposal to confirm\n @return success Whether the ownership was successfully transferred"},"functionSelector":"e5006801","id":5386,"implemented":false,"kind":"function","modifiers":[],"name":"confirmOwnershipTransfer","nameLocation":"731:24:26","nodeType":"FunctionDefinition","parameters":{"id":5382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5381,"mutability":"mutable","name":"proposalId","nameLocation":"764:10:26","nodeType":"VariableDeclaration","scope":5386,"src":"756:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"756:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"755:20:26"},"returnParameters":{"id":5385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5386,"src":"794:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5383,"name":"bool","nodeType":"ElementaryTypeName","src":"794:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"793:6:26"},"scope":5444,"src":"722:78:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5387,"nodeType":"StructuredDocumentation","src":"810:184:26","text":" @dev Add a new signer to the multi-sig configuration\n @param signer Address to add as a signer\n @return success Whether the signer was successfully added"},"functionSelector":"eb12d61e","id":5394,"implemented":false,"kind":"function","modifiers":[],"name":"addSigner","nameLocation":"1008:9:26","nodeType":"FunctionDefinition","parameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"signer","nameLocation":"1026:6:26","nodeType":"VariableDeclaration","scope":5394,"src":"1018:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5388,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1017:16:26"},"returnParameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5394,"src":"1052:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5391,"name":"bool","nodeType":"ElementaryTypeName","src":"1052:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1051:6:26"},"scope":5444,"src":"999:59:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"1068:191:26","text":" @dev Remove a signer from the multi-sig configuration\n @param signer Address to remove from signers\n @return success Whether the signer was successfully removed"},"functionSelector":"0e316ab7","id":5402,"implemented":false,"kind":"function","modifiers":[],"name":"removeSigner","nameLocation":"1273:12:26","nodeType":"FunctionDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"signer","nameLocation":"1294:6:26","nodeType":"VariableDeclaration","scope":5402,"src":"1286:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5396,"name":"address","nodeType":"ElementaryTypeName","src":"1286:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1285:16:26"},"returnParameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5402,"src":"1320:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5399,"name":"bool","nodeType":"ElementaryTypeName","src":"1320:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1319:6:26"},"scope":5444,"src":"1264:62:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5403,"nodeType":"StructuredDocumentation","src":"1336:196:26","text":" @dev Set the required number of signatures for operations\n @param threshold Number of required signatures\n @return success Whether the threshold was successfully set"},"functionSelector":"960bfe04","id":5410,"implemented":false,"kind":"function","modifiers":[],"name":"setThreshold","nameLocation":"1546:12:26","nodeType":"FunctionDefinition","parameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"threshold","nameLocation":"1567:9:26","nodeType":"VariableDeclaration","scope":5410,"src":"1559:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1559:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:19:26"},"returnParameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5410,"src":"1596:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5407,"name":"bool","nodeType":"ElementaryTypeName","src":"1596:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1595:6:26"},"scope":5444,"src":"1537:65:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5411,"nodeType":"StructuredDocumentation","src":"1612:150:26","text":" @dev Check if an address is a signer\n @param account Address to check\n @return isSigner Whether the address is a signer"},"functionSelector":"7df73e27","id":5418,"implemented":false,"kind":"function","modifiers":[],"name":"isSigner","nameLocation":"1776:8:26","nodeType":"FunctionDefinition","parameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"account","nameLocation":"1793:7:26","nodeType":"VariableDeclaration","scope":5418,"src":"1785:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5412,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1784:17:26"},"returnParameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5418,"src":"1825:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5415,"name":"bool","nodeType":"ElementaryTypeName","src":"1825:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1824:6:26"},"scope":5444,"src":"1767:64:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"1841:116:26","text":" @dev Get the current signature threshold\n @return threshold The current signature threshold"},"functionSelector":"e75235b8","id":5424,"implemented":false,"kind":"function","modifiers":[],"name":"getThreshold","nameLocation":"1971:12:26","nodeType":"FunctionDefinition","parameters":{"id":5420,"nodeType":"ParameterList","parameters":[],"src":"1983:2:26"},"returnParameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"2009:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2008:9:26"},"scope":5444,"src":"1962:56:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"2028:104:26","text":" @dev Get all current signers\n @return signers Array of current signer addresses"},"functionSelector":"94cf795e","id":5431,"implemented":false,"kind":"function","modifiers":[],"name":"getSigners","nameLocation":"2146:10:26","nodeType":"FunctionDefinition","parameters":{"id":5426,"nodeType":"ParameterList","parameters":[],"src":"2156:2:26"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5431,"src":"2182:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5427,"name":"address","nodeType":"ElementaryTypeName","src":"2182:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5428,"nodeType":"ArrayTypeName","src":"2182:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2181:18:26"},"scope":5444,"src":"2137:63:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5432,"nodeType":"StructuredDocumentation","src":"2210:109:26","text":" @dev Emergency pause for the token\n @return success Whether the pause was successful"},"functionSelector":"51858e27","id":5437,"implemented":false,"kind":"function","modifiers":[],"name":"emergencyPause","nameLocation":"2333:14:26","nodeType":"FunctionDefinition","parameters":{"id":5433,"nodeType":"ParameterList","parameters":[],"src":"2347:2:26"},"returnParameters":{"id":5436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5437,"src":"2368:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5434,"name":"bool","nodeType":"ElementaryTypeName","src":"2368:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2367:6:26"},"scope":5444,"src":"2324:50:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5438,"nodeType":"StructuredDocumentation","src":"2384:115:26","text":" @dev Unpause the token after emergency\n @return success Whether the unpause was successful"},"functionSelector":"4a4e3bd5","id":5443,"implemented":false,"kind":"function","modifiers":[],"name":"emergencyUnpause","nameLocation":"2513:16:26","nodeType":"FunctionDefinition","parameters":{"id":5439,"nodeType":"ParameterList","parameters":[],"src":"2529:2:26"},"returnParameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5443,"src":"2550:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5440,"name":"bool","nodeType":"ElementaryTypeName","src":"2550:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2549:6:26"},"scope":5444,"src":"2504:52:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5445,"src":"163:2395:26","usedErrors":[],"usedEvents":[]}],"src":"32:2527:26"},"id":26},"src/contracts/interfaces/IV4TokenBase.sol":{"ast":{"absolutePath":"src/contracts/interfaces/IV4TokenBase.sol","exportedSymbols":{"IV4TokenBase":[5525]},"id":5526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5446,"literals":["solidity","0.8",".22"],"nodeType":"PragmaDirective","src":"32:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IV4TokenBase","contractDependencies":[],"contractKind":"interface","documentation":{"id":5447,"nodeType":"StructuredDocumentation","src":"57:70:27","text":" @title IV4TokenBase\n @dev Interface for the V4 token base"},"fullyImplemented":false,"id":5525,"linearizedBaseContracts":[5525],"name":"IV4TokenBase","nameLocation":"138:12:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5448,"nodeType":"StructuredDocumentation","src":"157:270:27","text":" @dev Initialize the token with basic parameters\n @param name_ Token name\n @param symbol_ Token symbol\n @param initialSupply Initial supply to mint\n @param owner_ Address that will receive the initial supply and become the owner"},"functionSelector":"bd3a13f6","id":5459,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"441:10:27","nodeType":"FunctionDefinition","parameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"name_","nameLocation":"475:5:27","nodeType":"VariableDeclaration","scope":5459,"src":"461:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5449,"name":"string","nodeType":"ElementaryTypeName","src":"461:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"symbol_","nameLocation":"504:7:27","nodeType":"VariableDeclaration","scope":5459,"src":"490:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5451,"name":"string","nodeType":"ElementaryTypeName","src":"490:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5454,"mutability":"mutable","name":"initialSupply","nameLocation":"529:13:27","nodeType":"VariableDeclaration","scope":5459,"src":"521:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5453,"name":"uint256","nodeType":"ElementaryTypeName","src":"521:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5456,"mutability":"mutable","name":"owner_","nameLocation":"560:6:27","nodeType":"VariableDeclaration","scope":5459,"src":"552:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5455,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"451:121:27"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[],"src":"581:0:27"},"scope":5525,"src":"432:150:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5460,"nodeType":"StructuredDocumentation","src":"592:225:27","text":" @dev Add a module to the token\n @param moduleAddress Address of the module to add\n @param data Initialization data for the module\n @return success Whether the module was successfully added"},"functionSelector":"2dd3a78c","id":5469,"implemented":false,"kind":"function","modifiers":[],"name":"addModule","nameLocation":"831:9:27","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"moduleAddress","nameLocation":"849:13:27","nodeType":"VariableDeclaration","scope":5469,"src":"841:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5461,"name":"address","nodeType":"ElementaryTypeName","src":"841:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5464,"mutability":"mutable","name":"data","nameLocation":"879:4:27","nodeType":"VariableDeclaration","scope":5469,"src":"864:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5463,"name":"bytes","nodeType":"ElementaryTypeName","src":"864:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"840:44:27"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5469,"src":"903:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5466,"name":"bool","nodeType":"ElementaryTypeName","src":"903:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"902:6:27"},"scope":5525,"src":"822:87:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5470,"nodeType":"StructuredDocumentation","src":"919:181:27","text":" @dev Remove a module from the token\n @param moduleAddress Address of the module to remove\n @return success Whether the module was successfully removed"},"functionSelector":"a0632461","id":5477,"implemented":false,"kind":"function","modifiers":[],"name":"removeModule","nameLocation":"1114:12:27","nodeType":"FunctionDefinition","parameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"moduleAddress","nameLocation":"1135:13:27","nodeType":"VariableDeclaration","scope":5477,"src":"1127:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5471,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1126:23:27"},"returnParameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5477,"src":"1168:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5474,"name":"bool","nodeType":"ElementaryTypeName","src":"1168:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1167:6:27"},"scope":5525,"src":"1105:69:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5478,"nodeType":"StructuredDocumentation","src":"1184:163:27","text":" @dev Check if a module is active\n @param moduleAddress Address of the module to check\n @return isActive Whether the module is active"},"functionSelector":"d21b9fbd","id":5485,"implemented":false,"kind":"function","modifiers":[],"name":"isModuleActive","nameLocation":"1361:14:27","nodeType":"FunctionDefinition","parameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"moduleAddress","nameLocation":"1384:13:27","nodeType":"VariableDeclaration","scope":5485,"src":"1376:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5479,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1375:23:27"},"returnParameters":{"id":5484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5485,"src":"1422:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5482,"name":"bool","nodeType":"ElementaryTypeName","src":"1422:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1421:6:27"},"scope":5525,"src":"1352:76:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5486,"nodeType":"StructuredDocumentation","src":"1438:102:27","text":" @dev Get all active modules\n @return modules Array of active module addresses"},"functionSelector":"b2494df3","id":5492,"implemented":false,"kind":"function","modifiers":[],"name":"getModules","nameLocation":"1554:10:27","nodeType":"FunctionDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[],"src":"1564:2:27"},"returnParameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5492,"src":"1590:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5488,"name":"address","nodeType":"ElementaryTypeName","src":"1590:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5489,"nodeType":"ArrayTypeName","src":"1590:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1589:18:27"},"scope":5525,"src":"1545:63:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5493,"nodeType":"StructuredDocumentation","src":"1618:246:27","text":" @dev Execute a function call from a module\n @param target Target address for the call\n @param data Call data\n @return success Whether the call was successful\n @return returnData Data returned by the call"},"functionSelector":"5607b780","id":5504,"implemented":false,"kind":"function","modifiers":[],"name":"executeFromModule","nameLocation":"1878:17:27","nodeType":"FunctionDefinition","parameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"target","nameLocation":"1904:6:27","nodeType":"VariableDeclaration","scope":5504,"src":"1896:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5494,"name":"address","nodeType":"ElementaryTypeName","src":"1896:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5497,"mutability":"mutable","name":"data","nameLocation":"1927:4:27","nodeType":"VariableDeclaration","scope":5504,"src":"1912:19:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5496,"name":"bytes","nodeType":"ElementaryTypeName","src":"1912:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1895:37:27"},"returnParameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5504,"src":"1951:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5499,"name":"bool","nodeType":"ElementaryTypeName","src":"1951:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5504,"src":"1957:12:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5501,"name":"bytes","nodeType":"ElementaryTypeName","src":"1957:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1950:20:27"},"scope":5525,"src":"1869:102:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5505,"nodeType":"StructuredDocumentation","src":"1981:39:27","text":" @dev Pause the token"},"functionSelector":"8456cb59","id":5508,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"2034:5:27","nodeType":"FunctionDefinition","parameters":{"id":5506,"nodeType":"ParameterList","parameters":[],"src":"2039:2:27"},"returnParameters":{"id":5507,"nodeType":"ParameterList","parameters":[],"src":"2050:0:27"},"scope":5525,"src":"2025:26:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"2061:41:27","text":" @dev Unpause the token"},"functionSelector":"3f4ba83a","id":5512,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"2116:7:27","nodeType":"FunctionDefinition","parameters":{"id":5510,"nodeType":"ParameterList","parameters":[],"src":"2123:2:27"},"returnParameters":{"id":5511,"nodeType":"ParameterList","parameters":[],"src":"2134:0:27"},"scope":5525,"src":"2107:28:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5513,"nodeType":"StructuredDocumentation","src":"2145:103:27","text":" @dev Transfer ownership of the token\n @param newOwner Address of the new owner"},"functionSelector":"f2fde38b","id":5518,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"2262:17:27","nodeType":"FunctionDefinition","parameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"newOwner","nameLocation":"2288:8:27","nodeType":"VariableDeclaration","scope":5518,"src":"2280:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5514,"name":"address","nodeType":"ElementaryTypeName","src":"2280:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2279:18:27"},"returnParameters":{"id":5517,"nodeType":"ParameterList","parameters":[],"src":"2306:0:27"},"scope":5525,"src":"2253:54:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5519,"nodeType":"StructuredDocumentation","src":"2313:106:27","text":" @dev Get the current owner of the token\n @return The address of the current owner"},"functionSelector":"8da5cb5b","id":5524,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2433:5:27","nodeType":"FunctionDefinition","parameters":{"id":5520,"nodeType":"ParameterList","parameters":[],"src":"2438:2:27"},"returnParameters":{"id":5523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5524,"src":"2464:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5521,"name":"address","nodeType":"ElementaryTypeName","src":"2464:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2463:9:27"},"scope":5525,"src":"2424:49:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5526,"src":"128:2347:27","usedErrors":[],"usedEvents":[]}],"src":"32:2444:27"},"id":27}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1525,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":11,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":131,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1525,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":323,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":428,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234610016576108b4908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146104b457508163095ea7b31461048a57816318160ddd1461046b57816323b872dd1461039f578163313ce56714610383578163395093511461031c57816370a08231146102e457816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6105db565b6100c26105f6565b6001600160a01b0391821683526034865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086105db565b602435903361070e565b5160018152f35b905082346101be57826003193601126101be576101346105db565b918360243592338152603460205281812060018060a01b038616825260205220549082821061016d57602085610112858503873361060c565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e5578051908260375460018160011c90600183169283156102da575b60209384841081146102c7578388529081156102ab5750600114610255575b505050829003601f01601f191682019267ffffffffffffffff841183851017610242575082918261023e925282610592565b0390f35b634e487b7160e01b815260418552602490fd5b603787529192508591837f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b838510610297575050505083010185808061020c565b805488860183015293019284908201610281565b60ff1916878501525050151560051b840101905085808061020c565b634e487b7160e01b895260228a52602489fd5b91607f16916101ed565b5050346100e55760203660031901126100e55760209181906001600160a01b0361030c6105db565b1681526033845220549051908152f35b8284346101be57816003193601126101be576103366105db565b338252603460209081528383206001600160a01b03831684529052828220546024358101929083106103705760208461011285853361060c565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e5576103bb6105db565b6103c36105f6565b6001600160a01b038216845260346020908152858520338652905292849020546044359392600182016103ff575b60208661011287878761070e565b848210610428575091839161041d602096956101129503338361060c565b9193948193506103f1565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906035549051908152f35b5050346100e557806003193601126100e5576020906101126104aa6105db565b602435903361060c565b8490843461058e578260031936011261058e578260365460018160011c9060018316928315610584575b60209384841081146102c7578388529081156102ab575060011461052e57505050829003601f01601f191682019267ffffffffffffffff841183851017610242575082918261023e925282610592565b603687529192508591837f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b838510610570575050505083010185808061020c565b80548886018301529301928490820161055a565b91607f16916104de565b8280fd5b6020808252825181830181905290939260005b8281106105c757505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016105a5565b600435906001600160a01b03821682036105f157565b600080fd5b602435906001600160a01b03821682036105f157565b6001600160a01b039081169182156106bd571691821561066d5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b0390811691821561082b57169182156107da576000828152603360205260408120549180831061078657604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fdfea2646970667358221220706a738e34f55106c8be04f99c573273655ac1332016fac55d0af9f137730d7964736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x8B4 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x4B4 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x48A JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x46B JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x39F JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x383 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x31C JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C1 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x5DB JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x34 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x70E JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1BE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x134 PUSH2 0x5DB JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x16D JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x37 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2DA JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C7 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x255 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x242 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23E SWAP3 MSTORE DUP3 PUSH2 0x592 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x37 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x42A7B7DD785CD69714A189DFFB3FD7D7174EDC9ECE837694CE50F7078F7C31AE JUMPDEST DUP4 DUP6 LT PUSH2 0x297 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x20C JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x281 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x20C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1ED JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x30C PUSH2 0x5DB JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x33 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x336 PUSH2 0x5DB JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 MSTORE SWAP1 MSTORE DUP3 DUP3 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD SWAP3 SWAP1 DUP4 LT PUSH2 0x370 JUMPI PUSH1 0x20 DUP5 PUSH2 0x112 DUP6 DUP6 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x3BB PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 MSTORE SWAP3 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 PUSH1 0x1 DUP3 ADD PUSH2 0x3FF JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x112 DUP8 DUP8 DUP8 PUSH2 0x70E JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x428 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x41D PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x112 SWAP6 SUB CALLER DUP4 PUSH2 0x60C JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x35 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x4AA PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x60C JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x58E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x58E JUMPI DUP3 PUSH1 0x36 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x584 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C7 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x52E JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x242 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23E SWAP3 MSTORE DUP3 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x36 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x4A11F94E20A93C79F6EC743A1954EC4FC2C08429AE2122118BF234B2185C81B8 JUMPDEST DUP4 DUP6 LT PUSH2 0x570 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x20C JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x55A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5C7 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5F1 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5F1 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x6BD JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x66D JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x34 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x82B JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x786 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x33 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x6A738E34F55106C8BE04F99C573273655A 0xC1 CALLER KECCAK256 AND STATICCALL 0xC5 0x5D EXP 0xF9 CALL CALLDATACOPY PUSH20 0xD7964736F6C6343000816003300000000000000 ","sourceMap":"1632:11861:3:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1499,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4782":{"entryPoint":1526,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1426,"id":null,"parameterSlots":2,"returnSlots":1},"fun_approve":{"entryPoint":1548,"id":971,"parameterSlots":3,"returnSlots":0},"fun_transfer":{"entryPoint":1806,"id":797,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146104b457508163095ea7b31461048a57816318160ddd1461046b57816323b872dd1461039f578163313ce56714610383578163395093511461031c57816370a08231146102e457816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba6105db565b6100c26105f6565b6001600160a01b0391821683526034865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e5576020906101126101086105db565b602435903361070e565b5160018152f35b905082346101be57826003193601126101be576101346105db565b918360243592338152603460205281812060018060a01b038616825260205220549082821061016d57602085610112858503873361060c565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e5578051908260375460018160011c90600183169283156102da575b60209384841081146102c7578388529081156102ab5750600114610255575b505050829003601f01601f191682019267ffffffffffffffff841183851017610242575082918261023e925282610592565b0390f35b634e487b7160e01b815260418552602490fd5b603787529192508591837f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b838510610297575050505083010185808061020c565b805488860183015293019284908201610281565b60ff1916878501525050151560051b840101905085808061020c565b634e487b7160e01b895260228a52602489fd5b91607f16916101ed565b5050346100e55760203660031901126100e55760209181906001600160a01b0361030c6105db565b1681526033845220549051908152f35b8284346101be57816003193601126101be576103366105db565b338252603460209081528383206001600160a01b03831684529052828220546024358101929083106103705760208461011285853361060c565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e5576103bb6105db565b6103c36105f6565b6001600160a01b038216845260346020908152858520338652905292849020546044359392600182016103ff575b60208661011287878761070e565b848210610428575091839161041d602096956101129503338361060c565b9193948193506103f1565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906035549051908152f35b5050346100e557806003193601126100e5576020906101126104aa6105db565b602435903361060c565b8490843461058e578260031936011261058e578260365460018160011c9060018316928315610584575b60209384841081146102c7578388529081156102ab575060011461052e57505050829003601f01601f191682019267ffffffffffffffff841183851017610242575082918261023e925282610592565b603687529192508591837f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b838510610570575050505083010185808061020c565b80548886018301529301928490820161055a565b91607f16916104de565b8280fd5b6020808252825181830181905290939260005b8281106105c757505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016105a5565b600435906001600160a01b03821682036105f157565b600080fd5b602435906001600160a01b03821682036105f157565b6001600160a01b039081169182156106bd571691821561066d5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b0390811691821561082b57169182156107da576000828152603360205260408120549180831061078657604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fdfea2646970667358221220706a738e34f55106c8be04f99c573273655ac1332016fac55d0af9f137730d7964736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x4B4 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x48A JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x46B JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x39F JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x383 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x31C JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2E4 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C1 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x5DB JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x34 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x70E JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1BE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x134 PUSH2 0x5DB JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x16D JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x37 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2DA JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C7 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x255 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x242 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23E SWAP3 MSTORE DUP3 PUSH2 0x592 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x37 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x42A7B7DD785CD69714A189DFFB3FD7D7174EDC9ECE837694CE50F7078F7C31AE JUMPDEST DUP4 DUP6 LT PUSH2 0x297 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x20C JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x281 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x20C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1ED JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x30C PUSH2 0x5DB JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x33 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x336 PUSH2 0x5DB JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 MSTORE SWAP1 MSTORE DUP3 DUP3 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD SWAP3 SWAP1 DUP4 LT PUSH2 0x370 JUMPI PUSH1 0x20 DUP5 PUSH2 0x112 DUP6 DUP6 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x3BB PUSH2 0x5DB JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 MSTORE SWAP3 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 PUSH1 0x1 DUP3 ADD PUSH2 0x3FF JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x112 DUP8 DUP8 DUP8 PUSH2 0x70E JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x428 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x41D PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x112 SWAP6 SUB CALLER DUP4 PUSH2 0x60C JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x35 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x4AA PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x60C JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x58E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x58E JUMPI DUP3 PUSH1 0x36 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x584 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2C7 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2AB JUMPI POP PUSH1 0x1 EQ PUSH2 0x52E JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x242 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23E SWAP3 MSTORE DUP3 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x36 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x4A11F94E20A93C79F6EC743A1954EC4FC2C08429AE2122118BF234B2185C81B8 JUMPDEST DUP4 DUP6 LT PUSH2 0x570 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x20C JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x55A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5C7 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5F1 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5F1 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x6BD JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x66D JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x34 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x82B JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x7DA JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x786 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x33 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x6A738E34F55106C8BE04F99C573273655A 0xC1 CALLER KECCAK256 AND STATICCALL 0xC5 0x5D EXP 0xF9 CALL CALLDATACOPY PUSH20 0xD7964736F6C6343000816003300000000000000 ","sourceMap":"1632:11861:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1632:11861:3;;;;;4460:11;1632:11861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4252:6;1632:11861;;:::i;:::-;;;965:10:7;;4252:6:3;:::i;:::-;1632:11861;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;965:10:7;;1632:11861:3;;4460:11;1632:11861;;;;;;;;;;;;;;;;;;7150:35;;;;1632:11861;;;;7286:34;1632:11861;;;;965:10:7;7286:34:3;:::i;1632:11861::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;;;;;;;;;;;;;;;;;2815:7;1632:11861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;-1:-1:-1;;1632:11861:3;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;2815:7;1632:11861;;;;-1:-1:-1;1632:11861:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1632:11861:3;;;;;-1:-1:-1;;1632:11861:3;;;;;;;;-1:-1:-1;1632:11861:3;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1632:11861:3;;;;;;;;-1:-1:-1;;;;;1632:11861:3;;:::i;:::-;;;;3877:9;1632:11861;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;965:10:7;1632:11861:3;;4460:11;1632:11861;;;;;;;-1:-1:-1;;;;;1632:11861:3;;;;;;;;;;;;;;;;;-1:-1:-1;1632:11861:3;;;965:10:7;6379:38:3;965:10:7;;;6379:38:3;:::i;1632:11861::-;-1:-1:-1;;;1632:11861:3;;;;;;;;;;;;;;;;;;;;;;;;;3544:2;1632:11861;;;;;;;;;;;;-1:-1:-1;;1632:11861:3;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1632:11861:3;;;;4460:11;1632:11861;;;;;;;965:10:7;1632:11861:3;;;;;;;;;;;;;;11602:37;;11598:243;;1632:11861;;5782:6;;;;;;:::i;11598:243::-;11663:26;;;1632:11861;;;;;;11790:25;1632:11861;;;5782:6;1632:11861;;965:10:7;11790:25:3;;:::i;:::-;11598:243;;;;;;;;1632:11861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3700:12;1632:11861;;;;;;;;;;;;;;;;;;;;;;;4964:6;1632:11861;;:::i;:::-;;;965:10:7;;4964:6:3;:::i;1632:11861::-;;;;;;;;;;;;;;;;2602:5;1632:11861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;-1:-1:-1;;1632:11861:3;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2602:5;1632:11861;;;;-1:-1:-1;1632:11861:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1632:11861:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1632:11861:3;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1632:11861:3;;;;;;:::o;10815:340::-;-1:-1:-1;;;;;1632:11861:3;;;;10916:19;;1632:11861;;;10994:21;;;1632:11861;;;11116:32;1632:11861;;10933:1;1632:11861;11065:11;1632:11861;;;10933:1;1632:11861;;10933:1;1632:11861;;;;;10933:1;1632:11861;;;;;;;11116:32;10815:340::o;1632:11861::-;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;7814:788;-1:-1:-1;;;;;1632:11861:3;;;;7910:18;;1632:11861;;;7988:16;;;1632:11861;;7926:1;1632:11861;;;8126:9;1632:11861;;;;;;8159:21;;;;1632:11861;;;;;8521:26;1632:11861;;;;;8126:9;1632:11861;;;;;;;;;;;;;;;;;;;;;;8521:26;7814:788::o;1632:11861::-;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;1632:11861:3;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"445600","executionCost":"487","totalCost":"446087"},"external":{"allowance(address,address)":"2788","approve(address,uint256)":"24387","balanceOf(address)":"2563","decimals()":"262","decreaseAllowance(address,uint256)":"26828","increaseAllowance(address,uint256)":"26763","name()":"infinite","symbol()":"infinite","totalSupply()":"2324","transfer(address,uint256)":"50966","transferFrom(address,address,uint256)":"77391"},"internal":{"__ERC20_init(string memory,string memory)":"infinite","__ERC20_init_unchained(string memory,string memory)":"infinite","_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1525,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":449,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":455,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":457,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":459,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":461,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1041,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200c1e15322043171d95dacfba6397b32b6d9a016ea3691cd1fc2aaf210b69292564736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0x1E ISZERO ORIGIN KECCAK256 NUMBER OR SAR SWAP6 0xDA 0xCF 0xBA PUSH4 0x97B32B6D SWAP11 ADD PUSH15 0xA3691CD1FC2AAF210B69292564736F PUSH13 0x63430008160033000000000000 ","sourceMap":"194:9180:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200c1e15322043171d95dacfba6397b32b6d9a016ea3691cd1fc2aaf210b69292564736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0x1E ISZERO ORIGIN KECCAK256 NUMBER OR SAR SWAP6 0xDA 0xCF 0xBA PUSH4 0x97B32B6D SWAP11 ADD PUSH15 0xA3691CD1FC2AAF210B69292564736F PUSH13 0x63430008160033000000000000 ","sourceMap":"194:9180:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1525,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol":{"EnumerableSetUpgradeable":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122094b65702f527af92ca928a0e8192da4ef430bce4009db21c6b625b0096c7e82364736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB6 JUMPI MUL CREATE2 0x27 0xAF SWAP3 0xCA SWAP3 DUP11 0xE DUP2 SWAP3 0xDA 0x4E DELEGATECALL ADDRESS 0xBC 0xE4 STOP SWAP14 0xB2 SHR PUSH12 0x625B0096C7E82364736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"1329:11641:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122094b65702f527af92ca928a0e8192da4ef430bce4009db21c6b625b0096c7e82364736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xB6 JUMPI MUL CREATE2 0x27 0xAF SWAP3 0xCA SWAP3 DUP11 0xE DUP2 SWAP3 0xDA 0x4E DELEGATECALL ADDRESS 0xBC 0xE4 STOP SWAP14 0xB2 SHR PUSH12 0x625B0096C7E82364736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ","sourceMap":"1329:11641:8:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_add(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_at(struct EnumerableSetUpgradeable.Set storage pointer,uint256)":"infinite","_contains(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_length(struct EnumerableSetUpgradeable.Set storage pointer)":"infinite","_remove(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)":"infinite","_values(struct EnumerableSetUpgradeable.Set storage pointer)":"infinite","add(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","add(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","add(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,uint256)":"infinite","at(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","contains(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","contains(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","contains(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","length(struct EnumerableSetUpgradeable.AddressSet storage pointer)":"infinite","length(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)":"infinite","length(struct EnumerableSetUpgradeable.UintSet storage pointer)":"infinite","remove(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)":"infinite","remove(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)":"infinite","remove(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)":"infinite","values(struct EnumerableSetUpgradeable.AddressSet storage pointer)":"infinite","values(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)":"infinite","values(struct EnumerableSetUpgradeable.UintSet storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSetUpgradeable {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2147,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol":{"ERC1967Upgrade":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol":{"BeaconProxy":{"abi":[{"inputs":[{"internalType":"address","name":"beacon","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":880,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":900,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":927,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":845,"id":null,"parameterSlots":2,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":962,"id":3075,"parameterSlots":4,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040908082526106728038038091610019828561034d565b8339810190828183031261023f5761003081610370565b6020828101516001600160401b039391929184821161023f57019084601f8301121561023f5781519161006283610384565b9261006f8851948561034d565b8084528484019685828401011161023f57868561008c930161039f565b803b156102fb578551635c60da1b60e01b80825292916001600160a01b0316908481600481855afa9081156102f0576000916102bb575b503b1561025e577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b03191682179055865192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e600080a2825115801590610256575b610142575b87516101fc90816104768239f35b6004848693819382525afa91821561024b5760009261020f575b5085519360608501908111858210176101f9578652602784527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c83850152660819985a5b195960ca1b84870152516101e3946000918291845af4903d156101f0573d6101c781610384565b906101d48851928361034d565b8152600081943d92013e6103c2565b5038808080808080610134565b606092506103c2565b634e487b7160e01b600052604160045260246000fd5b9091508281813d8311610244575b610227818361034d565b8101031261023f5761023890610370565b903861015c565b600080fd5b503d61021d565b86513d6000823e3d90fd5b50600061012f565b865162461bcd60e51b815260048101859052603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b90508481813d83116102e9575b6102d2818361034d565b8101031261023f576102e390610370565b386100c3565b503d6102c8565b88513d6000823e3d90fd5b855162461bcd60e51b815260048101849052602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b601f909101601f19168101906001600160401b038211908210176101f957604052565b51906001600160a01b038216820361023f57565b6001600160401b0381116101f957601f01601f191660200190565b60005b8381106103b25750506000910152565b81810151838201526020016103a2565b9192901561042457508151156103d6575090565b3b156103df5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156104375750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610467815180928160248601526020868601910161039f565b601f01601f19168101030190fdfe608080604052366100c7577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100bb57600091610060575b506101a7565b905060203d6020116100b4575b601f8101601f191682019167ffffffffffffffff83118184101761009e576100989260405201610161565b3861005a565b634e487b7160e01b600052604160045260246000fd5b503d61006d565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100bb5760009161012057506101a7565b602091503d8211610159575b601f8201601f191681019167ffffffffffffffff83118284101761009e5761009892604052810190610188565b3d915061012c565b602090607f190112610183576080516001600160a01b03811681036101835790565b600080fd5b9081602091031261018357516001600160a01b03811681036101835790565b6000808092368280378136915af43d82803e156101c2573d90f35b3d90fdfea264697066735822122054f1b4463bccdc05c56deee162ca6730ff9d30ee0b3fc732b7a0d6a6da3ea58564736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH2 0x672 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x19 DUP3 DUP6 PUSH2 0x34D JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH2 0x23F JUMPI PUSH2 0x30 DUP2 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP2 SWAP3 SWAP2 DUP5 DUP3 GT PUSH2 0x23F JUMPI ADD SWAP1 DUP5 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x23F JUMPI DUP2 MLOAD SWAP2 PUSH2 0x62 DUP4 PUSH2 0x384 JUMP JUMPDEST SWAP3 PUSH2 0x6F DUP9 MLOAD SWAP5 DUP6 PUSH2 0x34D JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP5 ADD SWAP7 DUP6 DUP3 DUP5 ADD ADD GT PUSH2 0x23F JUMPI DUP7 DUP6 PUSH2 0x8C SWAP4 ADD PUSH2 0x39F JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2FB JUMPI DUP6 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2BB JUMPI JUMPDEST POP EXTCODESIZE ISZERO PUSH2 0x25E JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP7 MLOAD SWAP3 DUP2 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH1 0x0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x256 JUMPI JUMPDEST PUSH2 0x142 JUMPI JUMPDEST DUP8 MLOAD PUSH2 0x1FC SWAP1 DUP2 PUSH2 0x476 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x4 DUP5 DUP7 SWAP4 DUP2 SWAP4 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x20F JUMPI JUMPDEST POP DUP6 MLOAD SWAP4 PUSH1 0x60 DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x1F9 JUMPI DUP7 MSTORE PUSH1 0x27 DUP5 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP4 DUP6 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP5 DUP8 ADD MSTORE MLOAD PUSH2 0x1E3 SWAP5 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1F0 JUMPI RETURNDATASIZE PUSH2 0x1C7 DUP2 PUSH2 0x384 JUMP JUMPDEST SWAP1 PUSH2 0x1D4 DUP9 MLOAD SWAP3 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3C2 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x134 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x3C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x244 JUMPI JUMPDEST PUSH2 0x227 DUP2 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23F JUMPI PUSH2 0x238 SWAP1 PUSH2 0x370 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x15C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x21D JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x12F JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2E9 JUMPI JUMPDEST PUSH2 0x2D2 DUP2 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23F JUMPI PUSH2 0x2E3 SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE PUSH2 0xC3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2C8 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x1F9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1F9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3B2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A2 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x424 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x3D6 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x3DF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x437 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x467 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xC7 JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x60 JUMPI JUMPDEST POP PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x9E JUMPI PUSH2 0x98 SWAP3 PUSH1 0x40 MSTORE ADD PUSH2 0x161 JUMP JUMPDEST CODESIZE PUSH2 0x5A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x120 JUMPI POP PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x20 SWAP2 POP RETURNDATASIZE DUP3 GT PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0x9E JUMPI PUSH2 0x98 SWAP3 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x188 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12C JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x183 JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x183 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x183 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x183 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD CALL 0xB4 CHAINID EXTCODESIZE 0xCC 0xDC SDIV 0xC5 PUSH14 0xEEE162CA6730FF9D30EE0B3FC732 0xB7 LOG0 0xD6 0xA6 0xDA RETURNDATACOPY 0xA5 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"580:1515:14:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;580:1515:14;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1702:19:17;;:23;580:1515:14;;;;-1:-1:-1;;;5240:35:12;;;580:1515:14;;-1:-1:-1;;;;;580:1515:14;;5240:35:12;580:1515:14;5240:35:12;580:1515:14;;5240:35:12;;;;;;;-1:-1:-1;5240:35:12;;;-1:-1:-1;1702:19:17;;:23;580:1515:14;;4719:66:12;;;-1:-1:-1;;;;;;4719:66:12;;;;;580:1515:14;;;;5870:25:12;-1:-1:-1;;5870:25:12;580:1515:14;;5909:15:12;;;:28;;;-1:-1:-1;5905:130:12;;-1:-1:-1;580:1515:14;;;;;;;;;5905:130:12;5240:35;5982;;;;;;;;;;;;;;-1:-1:-1;5982:35:12;;;5905:130;-1:-1:-1;580:1515:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;580:1515:14;;;;7265:25:17;7307:69;;-1:-1:-1;;;;7265:25:17;;;;580:1515:14;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;-1:-1:-1;580:1515:14;;;;;;7307:69:17;:::i;:::-;;5905:130:12;;;;;;;;;580:1515:14;;;-1:-1:-1;7307:69:17;:::i;580:1515:14:-;;;;-1:-1:-1;580:1515:14;;5240:35:12;580:1515:14;;-1:-1:-1;580:1515:14;5982:35:12;;;;;;;;;;;;;;;;;:::i;:::-;;;580:1515:14;;;;;;;:::i;:::-;5982:35:12;;;;580:1515:14;-1:-1:-1;580:1515:14;;5982:35:12;;;;;;580:1515:14;;;-1:-1:-1;580:1515:14;;;;;5909:28:12;;-1:-1:-1;5909:28:12;;580:1515:14;;;-1:-1:-1;;;580:1515:14;;5240:35:12;580:1515:14;;;;;;;;;;;;;;;-1:-1:-1;;;580:1515:14;;;;;;;5240:35:12;;;;;;;;;;;;;;;;:::i;:::-;;;580:1515:14;;;;;;;:::i;:::-;5240:35:12;;;;;;;;;580:1515:14;;;-1:-1:-1;580:1515:14;;;;;;;;-1:-1:-1;;;580:1515:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;580:1515:14;;;;;;;;;;;;-1:-1:-1;;580:1515:14;;;;-1:-1:-1;;;;;580:1515:14;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;580:1515:14;;;;;;:::o;:::-;-1:-1:-1;;;;;580:1515:14;;;;;;-1:-1:-1;;580:1515:14;;;;:::o;:::-;;;;;;;;-1:-1:-1;;580:1515:14;;;;:::o;:::-;;;;;;;;;;;;;7671:628:17;;;;7875:418;;;580:1515:14;;;7906:22:17;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;580:1515:14;;8201:17:17;:::o;580:1515:14:-;;;-1:-1:-1;;;580:1515:14;;;;;;;;;;;;;;;;;;;;7875:418:17;580:1515:14;;;;-1:-1:-1;8980:21:17;:17;;9152:142;;;;;;;8976:379;580:1515:14;;;;;;;;9324:20:17;;580:1515:14;9324:20:17;;;580:1515:14;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;580:1515:14;;;9324:20:17;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_address_fromMemory_676":{"entryPoint":353,"id":null,"parameterSlots":1,"returnSlots":1},"fun_delegate":{"entryPoint":423,"id":2598,"parameterSlots":1,"returnSlots":0},"fun_fallback":{"entryPoint":199,"id":2617,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052366100c7577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100bb57600091610060575b506101a7565b905060203d6020116100b4575b601f8101601f191682019167ffffffffffffffff83118184101761009e576100989260405201610161565b3861005a565b634e487b7160e01b600052604160045260246000fd5b503d61006d565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100bb5760009161012057506101a7565b602091503d8211610159575b601f8201601f191681019167ffffffffffffffff83118284101761009e5761009892604052810190610188565b3d915061012c565b602090607f190112610183576080516001600160a01b03811681036101835790565b600080fd5b9081602091031261018357516001600160a01b03811681036101835790565b6000808092368280378136915af43d82803e156101c2573d90f35b3d90fdfea264697066735822122054f1b4463bccdc05c56deee162ca6730ff9d30ee0b3fc732b7a0d6a6da3ea58564736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xC7 JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x60 JUMPI JUMPDEST POP PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x9E JUMPI PUSH2 0x98 SWAP3 PUSH1 0x40 MSTORE ADD PUSH2 0x161 JUMP JUMPDEST CODESIZE PUSH2 0x5A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x120 JUMPI POP PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x20 SWAP2 POP RETURNDATASIZE DUP3 GT PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0x9E JUMPI PUSH2 0x98 SWAP3 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x188 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12C JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x183 JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x183 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x183 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x183 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD CALL 0xB4 CHAINID EXTCODESIZE 0xCC 0xDC SDIV 0xC5 PUSH14 0xEEE162CA6730FF9D30EE0B3FC732 0xB7 LOG0 0xD6 0xA6 0xDA RETURNDATACOPY 0xA5 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"580:1515:14:-:0;;;;;2853:63:13;580:1515:14;4719:66:12;;-1:-1:-1;;;1537:38:14;;;;580:1515;;1537:38;;580:1515;;-1:-1:-1;;;;;580:1515:14;1537:38;;;;;;;-1:-1:-1;1537:38:14;;;580:1515;2407:17:13;;:::i;1537:38:14:-;;;;;;;;;;580:1515;;;-1:-1:-1;;580:1515:14;;;;;;;;;;;;;1537:38;580:1515;;;1537:38;;:::i;:::-;;;;580:1515;;;;-1:-1:-1;580:1515:14;;1537:38;580:1515;;-1:-1:-1;580:1515:14;1537:38;;;;;;580:1515;;;-1:-1:-1;580:1515:14;;;;;2322:110:13;4719:66:12;;580:1515:14;;-1:-1:-1;;;1537:38:14;;580:1515;1537:38;;580:1515;;1537:38;;580:1515;;-1:-1:-1;;;;;580:1515:14;1537:38;;;;;;;-1:-1:-1;1537:38:14;;;2407:17:13;;:::i;1537:38:14:-;;;-1:-1:-1;1537:38:14;;;;;;580:1515;;;-1:-1:-1;;580:1515:14;;;;;;;;;;;;;1537:38;580:1515;;;1537:38;;;;:::i;:::-;;;-1:-1:-1;1537:38:14;;580:1515;;;;;;;;;;;-1:-1:-1;;;;;580:1515:14;;;;;;;:::o;:::-;-1:-1:-1;580:1515:14;;;;;;;;;;;;-1:-1:-1;;;;;580:1515:14;;;;;;;:::o;948:895:13:-;1018:819;;;;;;;;;;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"101600","executionCost":"infinite","totalCost":"infinite"},"external":{"":"infinite"},"internal":{"_beacon()":"infinite","_implementation()":"infinite","_setBeacon(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"../ERC1967/ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\\n * conflict with the storage layout of the implementation behind the proxy.\\n *\\n * _Available since v3.4._\\n */\\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current beacon address.\\n     */\\n    function _beacon() internal view virtual returns (address) {\\n        return _getBeacon();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract.\\n     * - The implementation returned by `beacon` must be a contract.\\n     */\\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n}\\n\",\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol":{"UpgradeableBeacon":{"abi":[{"inputs":[{"internalType":"address","name":"implementation_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.","events":{"Upgraded(address)":{"details":"Emitted when the implementation returned by the beacon is changed."}},"kind":"dev","methods":{"constructor":{"details":"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."},"implementation()":{"details":"Returns the current implementation address."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeTo(address)":{"details":"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803461011a57601f61045a38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b25750600154161760015560405161032490816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146101c75780635c60da1b1461019e578063715018a6146101445780638da5cb5b1461011d5763f2fde38b1461005457600080fd5b3461011a57602036600319011261011a576004356001600160a01b038181169182900361011657610083610296565b81156100c25782546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b8280fd5b80fd5b503461011a578060031936011261011a57546040516001600160a01b039091168152602090f35b503461011a578060031936011261011a5761015d610296565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461011a578060031936011261011a576001546040516001600160a01b039091168152602090f35b503461011a57602036600319011261011a576004356001600160a01b03811690818103610116576101f6610296565b3b1561023557600180546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b6064820152608490fd5b6000546001600160a01b031633036102aa57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c17a697fa218ab66e1832a9cb889fea738e8787d12399361a9390095dd8fa1f464736f6c63430008160033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x1F PUSH2 0x45A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x324 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x116 JUMPI PUSH2 0x83 PUSH2 0x296 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC2 JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH2 0x15D PUSH2 0x296 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x116 JUMPI PUSH2 0x1F6 PUSH2 0x296 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x235 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1B881A5CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2AA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH27 0x697FA218AB66E1832A9CB889FEA738E8787D12399361A9390095DD DUP16 LOG1 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"543:1496:16:-:0;;;;;;;;;;;;;-1:-1:-1;;543:1496:16;;;;-1:-1:-1;;;;;543:1496:16;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:1496:16;;;;;;;;;;-1:-1:-1;543:1496:16;;;;;;;;734:10:18;;543:1496:16;;;;-1:-1:-1;543:1496:16;;;734:10:18;;543:1496:16;;2566:40:9;-1:-1:-1;2566:40:9;;1702:19:17;:23;543:1496:16;;;1995:35;543:1496;;;1995:35;543:1496;;;;;;;;;;;-1:-1:-1;;;543:1496:16;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:1496:16;;;;;;-1:-1:-1;543:1496:16;;;;;-1:-1:-1;543:1496:16"},"deployedBytecode":{"functionDebugData":{"fun_checkOwner":{"entryPoint":662,"id":2194,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146101c75780635c60da1b1461019e578063715018a6146101445780638da5cb5b1461011d5763f2fde38b1461005457600080fd5b3461011a57602036600319011261011a576004356001600160a01b038181169182900361011657610083610296565b81156100c25782546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b8280fd5b80fd5b503461011a578060031936011261011a57546040516001600160a01b039091168152602090f35b503461011a578060031936011261011a5761015d610296565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461011a578060031936011261011a576001546040516001600160a01b039091168152602090f35b503461011a57602036600319011261011a576004356001600160a01b03811690818103610116576101f6610296565b3b1561023557600180546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b6064820152608490fd5b6000546001600160a01b031633036102aa57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c17a697fa218ab66e1832a9cb889fea738e8787d12399361a9390095dd8fa1f464736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x116 JUMPI PUSH2 0x83 PUSH2 0x296 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC2 JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH2 0x15D PUSH2 0x296 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x116 JUMPI PUSH2 0x1F6 PUSH2 0x296 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x235 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1B881A5CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2AA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH27 0x697FA218AB66E1832A9CB889FEA738E8787D12399361A9390095DD DUP16 LOG1 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"543:1496:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:1496:16;;;;;;-1:-1:-1;;;;;543:1496:16;;;;;;;;;1063:62:9;;:::i;:::-;2162:22;;543:1496:16;;;;-1:-1:-1;;;;;;543:1496:16;;;;;;;2566:40:9;543:1496:16;;2566:40:9;543:1496:16;;;;;-1:-1:-1;;;543:1496:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:1496:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:1496:16;;;;;;;;;;;;;;;;;;;;;1063:62:9;;:::i;:::-;543:1496:16;;-1:-1:-1;;;;;;543:1496:16;;;;;;-1:-1:-1;;;;;543:1496:16;2566:40:9;543:1496:16;;2566:40:9;543:1496:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:1496:16;;;;;;;;;;;;;;;-1:-1:-1;;543:1496:16;;;;;;-1:-1:-1;;;;;543:1496:16;;;;;;;;1063:62:9;;:::i;:::-;1702:19:17;:23;543:1496:16;;1995:35;543:1496;;-1:-1:-1;;;;;;543:1496:16;;;;;1602:27;;;;543:1496;;;;;-1:-1:-1;;;543:1496:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:1496:16;;;;;;;1359:130:9;1273:6;543:1496:16;-1:-1:-1;;;;;543:1496:16;734:10:18;1422:23:9;543:1496:16;;1359:130:9:o;543:1496:16:-;;;;;;;;;;;;;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"160800","executionCost":"infinite","totalCost":"infinite"},"external":{"implementation()":"2301","owner()":"2342","renounceOwnership()":"28101","transferOwnership(address)":"28199","upgradeTo(address)":"30332"},"internal":{"_setImplementation(address)":"infinite"}},"methodIdentifiers":{"implementation()":"5c60da1b","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeTo(address)":"3659cfe6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\\n * implementation contract, which is where they will delegate all function calls.\\n *\\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\\n */\\ncontract UpgradeableBeacon is IBeacon, Ownable {\\n    address private _implementation;\\n\\n    /**\\n     * @dev Emitted when the implementation returned by the beacon is changed.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\\n     * beacon.\\n     */\\n    constructor(address implementation_) {\\n        _setImplementation(implementation_);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function implementation() public view virtual override returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev Upgrades the beacon to a new implementation.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * Requirements:\\n     *\\n     * - msg.sender must be the owner of the contract.\\n     * - `newImplementation` must be a contract.\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Sets the implementation contract address for this beacon\\n     *\\n     * Requirements:\\n     *\\n     * - `newImplementation` must be a contract.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"UpgradeableBeacon: implementation is not a contract\\\");\\n        _implementation = newImplementation;\\n    }\\n}\\n\",\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2147,"contract":"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2727,"contract":"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon","label":"_implementation","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220232a076c92a8dc87395e9cdc8a8759b7169390842064580950e09dda62558cbb64736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x2A SMOD PUSH13 0x92A8DC87395E9CDC8A8759B716 SWAP4 SWAP1 DUP5 KECCAK256 PUSH5 0x580950E09D 0xDA PUSH3 0x558CBB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"194:9169:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220232a076c92a8dc87395e9cdc8a8759b7169390842064580950e09dda62558cbb64736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x2A SMOD PUSH13 0x92A8DC87395E9CDC8A8759B716 SWAP4 SWAP1 DUP5 KECCAK256 PUSH5 0x580950E09D 0xDA PUSH3 0x558CBB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"194:9169:17:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122003dd63df25e9c3846276553673b0cb431fc3622be1b935a79497f731d9a0386664736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xDD PUSH4 0xDF25E9C3 DUP5 PUSH3 0x765536 PUSH20 0xB0CB431FC3622BE1B935A79497F731D9A0386664 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"1420:2685:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122003dd63df25e9c3846276553673b0cb431fc3622be1b935a79497f731d9a0386664736f6c63430008160033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xDD PUSH4 0xDF25E9C3 DUP5 PUSH3 0x765536 PUSH20 0xB0CB431FC3622BE1B935A79497F731D9A0386664 PUSH20 0x6F6C634300081600330000000000000000000000 ","sourceMap":"1420:2685:19:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/V4DistributionModule.sol":{"V4DistributionModule":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"label","type":"string"},{"indexed":false,"internalType":"bool","name":"locked","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"AllocationAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"label","type":"string"},{"indexed":false,"internalType":"bool","name":"locked","type":"bool"},{"indexed":false,"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"AllocationModified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"}],"name":"AllocationRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"totalDistributed","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"walletCount","type":"uint256"}],"name":"DistributionExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensUnlocked","type":"event"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"label","type":"string"},{"internalType":"bool","name":"locked","type":"bool"},{"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"addAllocation","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"wallets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"string[]","name":"labels","type":"string[]"},{"internalType":"bool[]","name":"lockStatus","type":"bool[]"},{"internalType":"uint256[]","name":"unlockTimes","type":"uint256[]"}],"name":"addMultipleAllocations","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executeDistribution","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllAllocations","outputs":[{"components":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"label","type":"string"},{"internalType":"bool","name":"locked","type":"bool"},{"internalType":"uint256","name":"unlockTime","type":"uint256"}],"internalType":"struct IV4DistributionModule.Allocation[]","name":"allocations","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getAllocation","outputs":[{"components":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"label","type":"string"},{"internalType":"bool","name":"locked","type":"bool"},{"internalType":"uint256","name":"unlockTime","type":"uint256"}],"internalType":"struct IV4DistributionModule.Allocation","name":"allocation","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getModuleType","outputs":[{"internalType":"bytes32","name":"moduleType","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getToken","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"label","type":"string"},{"internalType":"bool","name":"locked","type":"bool"},{"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"modifyAllocation","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"removeAllocation","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"supportsFunction","outputs":[{"internalType":"bool","name":"hasFunction","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"unlockTokens","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of distribution module with allocation capabilities","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"addAllocation(address,uint256,string,bool,uint256)":{"details":"Add a new allocation","params":{"amount":"Amount of tokens to allocate","label":"Optional label for this allocation (e.g. \"Team\", \"Marketing\")","locked":"Whether the allocation should be time-locked","unlockTime":"Timestamp when tokens become unlocked (0 if not locked)","wallet":"Recipient wallet address"},"returns":{"success":"Whether the allocation was successfully added"}},"addMultipleAllocations(address[],uint256[],string[],bool[],uint256[])":{"details":"Add multiple allocations at once","params":{"amounts":"Array of token amounts","labels":"Array of labels","lockStatus":"Array of lock statuses","unlockTimes":"Array of unlock times","wallets":"Array of recipient wallet addresses"},"returns":{"success":"Whether all allocations were successfully added"}},"constructor":{"details":"Constructor that disables initialization on the implementation contract"},"executeDistribution()":{"details":"Execute the distribution","returns":{"success":"Whether the distribution was successfully executed"}},"getAllAllocations()":{"details":"Get all allocations","returns":{"allocations":"Array of allocation details"}},"getAllocation(address)":{"details":"Get allocation for a specific wallet","params":{"wallet":"Recipient wallet address"},"returns":{"allocation":"The allocation details"}},"getModuleType()":{"details":"Get the type of this module","returns":{"moduleType":"Type identifier for this module"}},"getToken()":{"details":"Get the token this module is attached to","returns":{"tokenAddress":"Address of the token"}},"initialize(address,bytes)":{"details":"Initialize the module","params":{"data":"Additional initialization data (owner address)","tokenAddress":"Address of the token this module is attached to"}},"modifyAllocation(address,uint256,string,bool,uint256)":{"details":"Modify an existing allocation","params":{"amount":"New amount of tokens","label":"New label","locked":"New lock status","unlockTime":"New unlock time","wallet":"Recipient wallet address"},"returns":{"success":"Whether the allocation was successfully modified"}},"owner()":{"details":"Returns the address of the current owner."},"removeAllocation(address)":{"details":"Remove an allocation","params":{"wallet":"Recipient wallet address to remove"},"returns":{"success":"Whether the allocation was successfully removed"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"supportsFunction(bytes4)":{"details":"Check if this module has a specific function","params":{"functionSig":"Function signature to check for"},"returns":{"hasFunction":"Whether the module implements the function"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlockTokens(address)":{"details":"Unlock tokens for a wallet if the unlock time has passed","params":{"wallet":"Address of the wallet to unlock tokens for"},"returns":{"success":"Whether the tokens were successfully unlocked"}}},"title":"V4DistributionModule","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161244190816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe61022080604052600436101561001457600080fd5b60003560e01c9081630b9349b914611a95575080630e022923146119565780631ca00f621461176857806321df0da71461173f578063715018a6146116e2578063862c19c8146114365780638da5cb5b1461140d578063a8a4b4c014611123578063be4644641461103a578063c58156e014610f19578063cb67f94814610c71578063cc6becc814610686578063d1f5789414610415578063f2fde38b14610386578063ff0ed114146101475763ffa1ad74146100d057600080fd5b346101425760003660031901126101425760405160408101908082106001600160401b0383111761012c576101289160405260058152640342e302e360dc1b6020820152604051918291602083526020830190611b07565b0390f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b3461014257600036600319011261014257610160612167565b606a5460ff9061017360ff821615611d90565b606654918215610326576001809260ff191617606a5560005b8381106101d1577f219b165c65b7e1a5744d1a2543bb34326ac29d73e03bdac1abc7290ccd6c26106040856069549082519182526020820152a1602060405160018152f35b806000846101df8294612268565b9054600391821b1c6001600160a01b0390811680855260686020908152604086209384015490939190891686146102b65750909201546040516340c10f1960e01b92810192909252306024830152604482015261026e9161024d82606481015b03601f198101845283611c43565b606554169060405195868094819362ac0f6f60e71b83528560048401612145565b03925af19182156102aa578492610288575b505b0161018c565b6102a4903d806000833e61029c8183611c43565b8101906120d3565b50610280565b6040513d6000823e3d90fd5b9301546040516340c10f1960e01b938101939093526001600160a01b03909316602483015260448201929092526102f49161024d826064810161023f565b03925af19182156102aa57849261030c575b50610282565b610320903d806000833e61029c8183611c43565b50610306565b60405162461bcd60e51b815260206004820152603260248201527f5634446973747269627574696f6e4d6f64756c653a206e6f20616c6c6f636174604482015271696f6e7320746f206469737472696275746560701b6064820152608490fd5b346101425760203660031901126101425761039f611ace565b6103a7612167565b6001600160a01b038116156103c1576103bf906121bf565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101425760403660031901126101425761042e611ace565b6024356001600160401b0381116101425761044d903690600401611b74565b90916000549160ff8360081c161592838094610679575b8015610662575b156106065760ff198116600117600055836105f4575b50602093848203610595573590848110610584575b50906104cd60018060a01b0380936104be60ff60005460081c166104b981612208565b612208565b6104c7336121bf565b166121bf565b168015610524576001600160601b0360a01b60655416176065556104ed57005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196000541660005560405160018152a1005b60405162461bcd60e51b815260048101849052603260248201527f5634446973747269627574696f6e4d6f64756c653a20746f6b656e20616464726044820152716573732063616e6e6f74206265207a65726f60701b6064820152608490fd5b60001990850360031b1b1684610496565b60405162461bcd60e51b815260048101869052603160248201527f5634446973747269627574696f6e4d6f64756c653a20696e76616c696420696e604482015270697469616c697a6174696f6e206461746160781b6064820152608490fd5b61ffff19166101011760005584610481565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561046b5750600160ff82161461046b565b50600160ff821610610464565b346101425760a0366003190112610142576004356001600160401b038111610142576106b6903690600401611bf8565b61010052610200526024356001600160401b038111610142576106dd903690600401611bf8565b610120526101c0526044356001600160401b03811161014257610704903690600401611bf8565b610140526101e0526064356001600160401b0381116101425761072b903690600401611bf8565b6101a05260c0526084356001600160401b03811161014257610751903690600401611bf8565b6101605261018052610761612167565b61077060ff606a541615611d90565b61012051610100511480610c62575b80610c53575b80610c44575b15610be85760006080525b61010051608051106107ad57602060405160018152f35b6107da60018060a01b036107d26107cd6080516101005161020051612061565b612071565b161515611df8565b6107f86107f0608051610120516101c051612061565b351515611e60565b61083561082f60018060a01b0361081b6107cd6080516101005161020051612061565b166000526067602052604060002054151590565b15611ecb565b61084f61084a6080516101a05160c051612061565b612085565b610bc5575b61086a6107cd6080516101005161020051612061565b61090a610880608051610120516101c051612061565b3591610895608051610140516101e051612092565b92906108ac61084a6080516101a05160c051612061565b936108c261084a6080516101a05160c051612061565b15610bbd576108da6080516101605161018051612061565b35935b60405160a0526108ee60a051611c28565b60018060a01b031660a05152602060a051019586523691611fa5565b91604060a051019283521515606060a0510152608060a051015260018060a01b036109416107cd6080516101005161020051612061565b16600052606860205260406000209160018060a01b0360a05151166001600160601b0360a01b845416178355516001830155519081516001600160401b03811161012c576109926002830154611d15565b601f90818111610b80575b506020908211600114610b0b5781906109ce9394600092610b00575b50508160011b916000199060031b1c19161790565b60028201555b6109f5606060a05101511515600383019060ff801983541691151516179055565b6004608060a0510151910155610a2760018060a01b03610a216107cd6080516101005161020051612061565b1661229f565b50610a3b608051610120516101c051612061565b35610a496069918254611ff3565b9055610a616107cd6080516101005161020051612061565b7f3241139af5e2a8b260ac9c371bbcd5da66ac3ce01dfc401fb973a1f174a1bc07610aef610a98608051610120516101c051612061565b3592610aad608051610140516101e051612092565b610ac561084a6080959395516101a05160c051612061565b610ad86080516101605161018051612061565b359160405195869560018060a01b03169886612016565b0390a2600160805101608052610796565b0151905084806109b9565b60028301600052602060002060e05260005b601f1983168110610b6257506001929382601f19811610610b48575b5050811b0160028201556109d4565b015160001960f88360031b161c191660e051558380610b39565b90602081819287015160e05155600160e0510160e052019101610b1d565b610bae90600285016000526020600020600584808701821c83019360208810610bb4575b01901c0190611fdc565b8461099d565b93508293610ba4565b6000936108dd565b610be3610bdb6080516101605161018051612061565b354210611f33565b610854565b60405162461bcd60e51b815260206004820152602e60248201527f5634446973747269627574696f6e4d6f64756c653a206172726179206c656e6760448201526d0e8d0e640daeae6e840dac2e8c6d60931b6064820152608490fd5b5061016051610100511461078b565b506101a0516101005114610785565b5061014051610100511461077f565b346101425760208060031936011261014257610c8b611ace565b60ff606a541615610eb8576001600160a01b0381811660008181526067602052604090205490929190610cbf901515611cab565b82600052606884526040600020600381019160ff83541615610e5c5760048201544210610e0157606554600192909201805460405163a9059cbb60e01b8982019081526001600160a01b039790971660248201526044808201929092529081529094600093849316918390610d35606482611c43565b51925af13d15610dfc573d610d4981611c64565b90610d576040519283611c43565b81526000863d92013e5b15610da357805460ff19169055546040519081527fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888908390a260405160018152f35b60405162461bcd60e51b815260048101859052602b60248201527f5634446973747269627574696f6e4d6f64756c653a20746f6b656e207472616e60448201526a1cd9995c8819985a5b195960aa1b6064820152608490fd5b610d61565b60405162461bcd60e51b815260048101879052602d60248201527f5634446973747269627574696f6e4d6f64756c653a20746f6b656e732061726560448201526c081cdd1a5b1b081b1bd8dad959609a1b6064820152608490fd5b60405162461bcd60e51b815260048101879052602e60248201527f5634446973747269627574696f6e4d6f64756c653a20616c6c6f636174696f6e60448201526d081a5cc81b9bdd081b1bd8dad95960921b6064820152608490fd5b60405162461bcd60e51b815260048101839052603360248201527f5634446973747269627574696f6e4d6f64756c653a20646973747269627574696044820152721bdb881b9bdd081e595d08195e1958dd5d1959606a1b6064820152608490fd5b34610142576020366003190112610142576020610f34611ace565b610f3c612167565b610f4b60ff606a541615611d90565b6001600160a01b0316600081815260676020526040902054610f6e901515611cab565b8060005260688252610f8a600160406000200154606954612054565b6069558060005260688252600060046040822082815582600182015560028101610fb48154611d15565b9081610ffe575b50508260038201550155610fce81612321565b50604051907f85f179d4205edd87e18c80df3160316df70c87a3c515d0650c32dae6ead80afd600080a260018152f35b81601f8693116001146110155750555b8580610fbb565b908083918252611033601f8a8420940160051c840160018501611fdc565b555561100e565b346101425760203660031901126101425760043563ffffffff60e01b8116809103610142576020906310c5833960e31b8114908115611112575b8115611101575b81156110f0575b81156110df575b81156110ce575b81156110ba575b81156110a9575b506040519015158152f35b63196cff2960e31b1490508261109e565b6001623c4bbb60e21b031981149150611097565b630e02292360e01b81149150611090565b630e5007b160e11b81149150611089565b6302a292d360e61b81149150611082565b63062c0ab760e51b8114915061107b565b63198d7d9960e31b81149150611074565b346101425761113136611ba1565b9061113d959295612167565b61114c60ff606a541615611d90565b6001600160a01b038316600090815260676020526040902054611170901515611cab565b8061117c861515611e60565b6113fd575b6111b0856111ab60695460018060a01b038716600052606860205260016040600020015490612054565b611ff3565b60695580156113f55781955b604051966111c988611c28565b6001600160a01b038516885260208801878152906111e8368489611fa5565b9060408a0191825284151560608b015260808a015260018060a01b038616600052606860205260406000209160018060a01b038a51166001600160601b0360a01b845416178355516001830155519788516001600160401b03811161012c576112546002840154611d15565b601f81116113b5575b506020601f8211600114611318576112ff96959493926112bc836004946080947fa3c835fcd4d2b819d5e8f590f6b36f796e7b73652831d08cfca45f22a6d43b7b9e9f60009261130d5750508160011b916000199060031b1c19161790565b60028501555b6112e160608201511515600386019060ff801983541691151516179055565b01519101556040516001600160a01b03909516979495869586612016565b0390a2602060405160018152f35b015190508f806109b9565b6002840160005260206000209a60005b601f198416811061139d5750926001837fa3c835fcd4d2b819d5e8f590f6b36f796e7b73652831d08cfca45f22a6d43b7b9c9d6080946112ff9b9a999897600497601f19811610611384575b505050811b0160028501556112c2565b015160001960f88460031b161c191690558e8080611374565b828201518d556001909c019b60209283019201611328565b6113e590600285016000526020600020601f840160051c810191602085106113eb575b601f0160051c0190611fdc565b8a61125d565b90915081906113d8565b6000956111bc565b611408428311611f33565b611181565b34610142576000366003190112610142576033546040516001600160a01b039091168152602090f35b346101425761144436611ba1565b9061145195929395612167565b61146060ff606a541615611d90565b6001600160a01b03936114768486161515611df8565b611481861515611e60565b8161149e61082f8787166000526067602052604060002054151590565b6116d2575b81156116ca5782965b604051976114b989611c28565b868616895260208901908882526114d1368585611fa5565b9060408b0191825285151560608c015260808b01528787166000526068602052604060002091888b51166001600160601b0360a01b845416178355516001830155519889516001600160401b03811161012c576115316002840154611d15565b601f8111611695575b5060209a601f82116001146115f9576112ff97969594939261159b836004947f3241139af5e2a8b260ac9c371bbcd5da66ac3ce01dfc401fb973a1f174a1bc079e9f6080956000926115ee5750508160011b916000199060031b1c19161790565b60028501555b6115c060608201511515600386019060ff801983541691151516179055565b01519101556115d087871661229f565b506115dd89606954611ff3565b606955604051968796169886612016565b0151905038806109b9565b601f198216906002850160005260206000209160005b81811061167d5750836080937f3241139af5e2a8b260ac9c371bbcd5da66ac3ce01dfc401fb973a1f174a1bc079e9f6112ff9c9b9a9998979460049760019510611664575b505050811b0160028501556115a1565b015160001960f88460031b161c191690558f8080611654565b828f0151845560209e8f019e6001909401930161160f565b6116c490600285016000526020600020601f840160051c810191602085106113eb57601f0160051c0190611fdc565b8b61153a565b6000966114ac565b6116dd428411611f33565b6114a3565b34610142576000366003190112610142576116fb612167565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610142576000366003190112610142576065546040516001600160a01b039091168152602090f35b346101425760003660031901126101425760665461178581611d4f565b6117926040519182611c43565b81815261179e82611d4f565b60209290601f19018360005b8281106119405750600084845b80831061181c57604080518581528351818701819052600092600582901b830181019186890191899085015b8287106117f05785850386f35b90919293828061180c600193603f198a82030186528851611b2c565b96019201960195929190926117e3565b61182583612268565b939060018060a01b03809154600396871b1c166000526068865260406000206040519161185183611c28565b81541682526001808201548884015260028201886040519260009280549061187882611d15565b8087529183811690811561191c57506001146118df575b505050506001959697826118aa6004959460ff940382611c43565b60408601528201541615156060840152015460808201526118cb8286611d66565b526118d68185611d66565b500191906117b7565b909192935060005282600020916000925b8284106119095750505082010188826118aa600461188f565b80548685018601529284019281016118f0565b60ff1916858801525050151560051b84019091019150899050826118aa600461188f565b611948611c7f565b8282870101520184906117aa565b346101425760208060031936011261014257611970611ace565b611978611c7f565b506001600160a01b0390811660008181526067602052604090205461199e901515611cab565b60005260688252604060002091604051916119b883611c28565b835416825260019260018101548284015260028101604051906000958154916119e083611d15565b8085529260018116908115611a745750600114611a3a575b505050611a0b8160049495960382611c43565b604085015260ff6003820154161515606085015201546080830152610128604051928284938452830190611b2c565b60009081528581209097505b828810611a6157505050938401820193611a0b8160046119f8565b8054848901870152968501968101611a46565b60ff191685880152505050151560051b810183019450611a0b8160046119f8565b3461014257600036600319011261014257807f6e4379ad5abe51b1f38d7c717558b084ca50f05c182778be47e8aa04793cfe2d60209252f35b600435906001600160a01b038216820361014257565b60005b838110611af75750506000910152565b8181015183820152602001611ae7565b90602091611b2081518092818552858086019101611ae4565b601f01601f1916010190565b9060018060a01b03825116815260208201516020820152608080611b5f604085015160a0604086015260a0850190611b07565b93606081015115156060850152015191015290565b9181601f84011215610142578235916001600160401b038311610142576020838186019501011161014257565b60a0600319820112610142576004356001600160a01b0381168103610142579160243591604435906001600160401b03821161014257611be391600401611b74565b90916064358015158103610142579060843590565b9181601f84011215610142578235916001600160401b038311610142576020808501948460051b01011161014257565b60a081019081106001600160401b0382111761012c57604052565b90601f801991011681019081106001600160401b0382111761012c57604052565b6001600160401b03811161012c57601f01601f191660200190565b60405190611c8c82611c28565b6000608083828152826020820152606060408201528260608201520152565b15611cb257565b60405162461bcd60e51b815260206004820152603560248201527f5634446973747269627574696f6e4d6f64756c653a2077616c6c657420646f6560448201527439903737ba103430bb329030b63637b1b0ba34b7b760591b6064820152608490fd5b90600182811c92168015611d45575b6020831014611d2f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611d24565b6001600160401b03811161012c5760051b60200190565b8051821015611d7a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15611d9757565b60405162461bcd60e51b815260206004820152603360248201527f5634446973747269627574696f6e4d6f64756c653a20646973747269627574696044820152721bdb88185b1c9958591e48195e1958dd5d1959606a1b6064820152608490fd5b15611dff57565b60405162461bcd60e51b815260206004820152603360248201527f5634446973747269627574696f6e4d6f64756c653a2077616c6c65742063616e6044820152726e6f74206265207a65726f206164647265737360681b6064820152608490fd5b15611e6757565b60405162461bcd60e51b815260206004820152603660248201527f5634446973747269627574696f6e4d6f64756c653a20616d6f756e74206d7573604482015275742062652067726561746572207468616e207a65726f60501b6064820152608490fd5b15611ed257565b60405162461bcd60e51b815260206004820152603360248201527f5634446973747269627574696f6e4d6f64756c653a2077616c6c657420616c7260448201527232b0b23c903430b99030b63637b1b0ba34b7b760691b6064820152608490fd5b15611f3a57565b60405162461bcd60e51b815260206004820152603760248201527f5634446973747269627574696f6e4d6f64756c653a20756e6c6f636b2074696d60448201527f65206d75737420626520696e20746865206675747572650000000000000000006064820152608490fd5b929192611fb182611c64565b91611fbf6040519384611c43565b829481845281830111610142578281602093846000960137010152565b818110611fe7575050565b60008155600101611fdc565b9190820180921161200057565b634e487b7160e01b600052601160045260246000fd5b91928060609460a09398979698855260806020860152816080860152838501376000828285010152601f801991011682010194151560408201520152565b9190820391821161200057565b9190811015611d7a5760051b0190565b356001600160a01b03811681036101425790565b3580151581036101425790565b9190811015611d7a5760051b81013590601e19813603018212156101425701908135916001600160401b038311610142576020018236038113610142579190565b9190604083820312610142578251801515810361014257926020810151906001600160401b038211610142570181601f8201121561014257805161211681611c64565b926121246040519485611c43565b81845260208284010111610142576121429160208085019101611ae4565b90565b6001600160a01b03909116815260406020820181905261214292910190611b07565b6033546001600160a01b0316330361217b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561220f57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b606654811015611d7a5760666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540190600090565b60008181526067602052604081205461231c57606654680100000000000000008110156123085790826122f46122dd84600160409601606655612268565b819391549060031b91821b91600019901b19161790565b905560665492815260676020522055600190565b634e487b7160e01b82526041600452602482fd5b905090565b600081815260676020526040812054909190801561240657600019908082018181116123f257606654908382019182116123de578082036123aa575b50505060665480156123965781019061237582612268565b909182549160031b1b19169055606655815260676020526040812055600190565b634e487b7160e01b84526031600452602484fd5b6123c86123b96122dd93612268565b90549060031b1c928392612268565b905584526067602052604084205538808061235d565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b50509056fea26469706673582212209fb21abd03cb4cdd256504bf010c90ab8f284cdcf1e646747c45edb882b321e364736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x6F JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x34 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2441 SWAP1 DUP2 PUSH2 0xC7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x25 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH2 0x220 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xB9349B9 EQ PUSH2 0x1A95 JUMPI POP DUP1 PUSH4 0xE022923 EQ PUSH2 0x1956 JUMPI DUP1 PUSH4 0x1CA00F62 EQ PUSH2 0x1768 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x173F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E2 JUMPI DUP1 PUSH4 0x862C19C8 EQ PUSH2 0x1436 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x140D JUMPI DUP1 PUSH4 0xA8A4B4C0 EQ PUSH2 0x1123 JUMPI DUP1 PUSH4 0xBE464464 EQ PUSH2 0x103A JUMPI DUP1 PUSH4 0xC58156E0 EQ PUSH2 0xF19 JUMPI DUP1 PUSH4 0xCB67F948 EQ PUSH2 0xC71 JUMPI DUP1 PUSH4 0xCC6BECC8 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xFF0ED114 EQ PUSH2 0x147 JUMPI PUSH4 0xFFA1AD74 EQ PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0x12C JUMPI PUSH2 0x128 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x342E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH2 0x160 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0xFF SWAP1 PUSH2 0x173 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x326 JUMPI PUSH1 0x1 DUP1 SWAP3 PUSH1 0xFF NOT AND OR PUSH1 0x6A SSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1D1 JUMPI PUSH32 0x219B165C65B7E1A5744D1A2543BB34326AC29D73E03BDAC1ABC7290CCD6C2610 PUSH1 0x40 DUP6 PUSH1 0x69 SLOAD SWAP1 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH1 0x0 DUP5 PUSH2 0x1DF DUP3 SWAP5 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP4 DUP5 ADD SLOAD SWAP1 SWAP4 SWAP2 SWAP1 DUP10 AND DUP7 EQ PUSH2 0x2B6 JUMPI POP SWAP1 SWAP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x26E SWAP2 PUSH2 0x24D DUP3 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x65 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP5 DUP2 SWAP4 PUSH3 0xAC0F6F PUSH1 0xE7 SHL DUP4 MSTORE DUP6 PUSH1 0x4 DUP5 ADD PUSH2 0x2145 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2AA JUMPI DUP5 SWAP3 PUSH2 0x288 JUMPI JUMPDEST POP JUMPDEST ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x2A4 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x29C DUP2 DUP4 PUSH2 0x1C43 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x20D3 JUMP JUMPDEST POP PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x2F4 SWAP2 PUSH2 0x24D DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x23F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2AA JUMPI DUP5 SWAP3 PUSH2 0x30C JUMPI JUMPDEST POP PUSH2 0x282 JUMP JUMPDEST PUSH2 0x320 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x29C DUP2 DUP4 PUSH2 0x1C43 JUMP JUMPDEST POP PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A206E6F20616C6C6F636174 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x696F6E7320746F2064697374726962757465 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH2 0x39F PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3C1 JUMPI PUSH2 0x3BF SWAP1 PUSH2 0x21BF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH2 0x42E PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x44D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND ISZERO SWAP3 DUP4 DUP1 SWAP5 PUSH2 0x679 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x662 JUMPI JUMPDEST ISZERO PUSH2 0x606 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP4 PUSH2 0x5F4 JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 DUP5 DUP3 SUB PUSH2 0x595 JUMPI CALLDATALOAD SWAP1 DUP5 DUP2 LT PUSH2 0x584 JUMPI JUMPDEST POP SWAP1 PUSH2 0x4CD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 PUSH2 0x4BE PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x4B9 DUP2 PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x4C7 CALLER PUSH2 0x21BF JUMP JUMPDEST AND PUSH2 0x21BF JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x524 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x65 SLOAD AND OR PUSH1 0x65 SSTORE PUSH2 0x4ED JUMPI STOP JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20746F6B656E2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6573732063616E6E6F74206265207A65726F PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT SWAP1 DUP6 SUB PUSH1 0x3 SHL SHL AND DUP5 PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20696E76616C696420696E PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x697469616C697A6174696F6E2064617461 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP5 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46B JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x46B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x464 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x6B6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x100 MSTORE PUSH2 0x200 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x6DD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x1C0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x704 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH2 0x1E0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x72B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x751 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE PUSH2 0x761 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x770 PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH2 0x100 MLOAD EQ DUP1 PUSH2 0xC62 JUMPI JUMPDEST DUP1 PUSH2 0xC53 JUMPI JUMPDEST DUP1 PUSH2 0xC44 JUMPI JUMPDEST ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 PUSH1 0x80 MSTORE JUMPDEST PUSH2 0x100 MLOAD PUSH1 0x80 MLOAD LT PUSH2 0x7AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x7DA PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x7D2 PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x2071 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0x7F0 PUSH1 0x80 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x1E60 JUMP JUMPDEST PUSH2 0x835 PUSH2 0x82F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x81B PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1ECB JUMP JUMPDEST PUSH2 0x84F PUSH2 0x84A PUSH1 0x80 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x2085 JUMP JUMPDEST PUSH2 0xBC5 JUMPI JUMPDEST PUSH2 0x86A PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x880 PUSH1 0x80 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH2 0x895 PUSH1 0x80 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x2092 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x8AC PUSH2 0x84A PUSH1 0x80 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2061 JUMP JUMPDEST SWAP4 PUSH2 0x8C2 PUSH2 0x84A PUSH1 0x80 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2061 JUMP JUMPDEST ISZERO PUSH2 0xBBD JUMPI PUSH2 0x8DA PUSH1 0x80 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD SWAP4 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 MSTORE PUSH2 0x8EE PUSH1 0xA0 MLOAD PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x20 PUSH1 0xA0 MLOAD ADD SWAP6 DUP7 MSTORE CALLDATASIZE SWAP2 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 PUSH1 0x40 PUSH1 0xA0 MLOAD ADD SWAP3 DUP4 MSTORE ISZERO ISZERO PUSH1 0x60 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0x80 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x941 PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 MLOAD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH2 0x992 PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT PUSH2 0xB80 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP3 GT PUSH1 0x1 EQ PUSH2 0xB0B JUMPI DUP2 SWAP1 PUSH2 0x9CE SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xB00 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH2 0x9F5 PUSH1 0x60 PUSH1 0xA0 MLOAD ADD MLOAD ISZERO ISZERO PUSH1 0x3 DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x80 PUSH1 0xA0 MLOAD ADD MLOAD SWAP2 ADD SSTORE PUSH2 0xA27 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xA21 PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST AND PUSH2 0x229F JUMP JUMPDEST POP PUSH2 0xA3B PUSH1 0x80 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD PUSH2 0xA49 PUSH1 0x69 SWAP2 DUP3 SLOAD PUSH2 0x1FF3 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xA61 PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH32 0x3241139AF5E2A8B260AC9C371BBCD5DA66AC3CE01DFC401FB973A1F174A1BC07 PUSH2 0xAEF PUSH2 0xA98 PUSH1 0x80 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD SWAP3 PUSH2 0xAAD PUSH1 0x80 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x2092 JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0x84A PUSH1 0x80 SWAP6 SWAP4 SWAP6 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0xAD8 PUSH1 0x80 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP9 DUP7 PUSH2 0x2016 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x80 MLOAD ADD PUSH1 0x80 MSTORE PUSH2 0x796 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0xE0 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP2 LT PUSH2 0xB62 JUMPI POP PUSH1 0x1 SWAP3 SWAP4 DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xB48 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x9D4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP4 PUSH1 0x3 SHL AND SHR NOT AND PUSH1 0xE0 MLOAD SSTORE DUP4 DUP1 PUSH2 0xB39 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 DUP2 SWAP3 DUP8 ADD MLOAD PUSH1 0xE0 MLOAD SSTORE PUSH1 0x1 PUSH1 0xE0 MLOAD ADD PUSH1 0xE0 MSTORE ADD SWAP2 ADD PUSH2 0xB1D JUMP JUMPDEST PUSH2 0xBAE SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 DUP1 DUP8 ADD DUP3 SHR DUP4 ADD SWAP4 PUSH1 0x20 DUP9 LT PUSH2 0xBB4 JUMPI JUMPDEST ADD SWAP1 SHR ADD SWAP1 PUSH2 0x1FDC JUMP JUMPDEST DUP5 PUSH2 0x99D JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0xBDB PUSH1 0x80 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD TIMESTAMP LT PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A206172726179206C656E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0xE8D0E640DAEAE6E840DAC2E8C6D PUSH1 0x93 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x160 MLOAD PUSH2 0x100 MLOAD EQ PUSH2 0x78B JUMP JUMPDEST POP PUSH2 0x1A0 MLOAD PUSH2 0x100 MLOAD EQ PUSH2 0x785 JUMP JUMPDEST POP PUSH2 0x140 MLOAD PUSH2 0x100 MLOAD EQ PUSH2 0x77F JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH2 0xC8B PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCBF SWAP1 ISZERO ISZERO PUSH2 0x1CAB JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x68 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND ISZERO PUSH2 0xE5C JUMPI PUSH1 0x4 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0xE01 JUMPI PUSH1 0x65 SLOAD PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP10 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP1 SWAP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 MSTORE SWAP1 SWAP5 PUSH1 0x0 SWAP4 DUP5 SWAP4 AND SWAP2 DUP4 SWAP1 PUSH2 0xD35 PUSH1 0x64 DUP3 PUSH2 0x1C43 JUMP JUMPDEST MLOAD SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xDFC JUMPI RETURNDATASIZE PUSH2 0xD49 DUP2 PUSH2 0x1C64 JUMP JUMPDEST SWAP1 PUSH2 0xD57 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1C43 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP7 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0xDA3 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 DUP4 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20746F6B656E207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1CD9995C8819985A5B1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20746F6B656E7320617265 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x81CDD1A5B1B081B1BD8DAD959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20616C6C6F636174696F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x81A5CC81B9BDD081B1BD8DAD959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2064697374726962757469 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1BDB881B9BDD081E595D08195E1958DD5D1959 PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x20 PUSH2 0xF34 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0xF3C PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xF4B PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF6E SWAP1 ISZERO ISZERO PUSH2 0x1CAB JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x68 DUP3 MSTORE PUSH2 0xF8A PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x69 SLOAD PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x69 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x68 DUP3 MSTORE PUSH1 0x0 PUSH1 0x4 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD PUSH2 0xFB4 DUP2 SLOAD PUSH2 0x1D15 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xFFE JUMPI JUMPDEST POP POP DUP3 PUSH1 0x3 DUP3 ADD SSTORE ADD SSTORE PUSH2 0xFCE DUP2 PUSH2 0x2321 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0x85F179D4205EDD87E18C80DF3160316DF70C87A3C515D0650C32DAE6EAD80AFD PUSH1 0x0 DUP1 LOG2 PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP2 PUSH1 0x1F DUP7 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x1015 JUMPI POP SSTORE JUMPDEST DUP6 DUP1 PUSH2 0xFBB JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x1033 PUSH1 0x1F DUP11 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x1FDC JUMP JUMPDEST SSTORE SSTORE PUSH2 0x100E JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x142 JUMPI PUSH1 0x20 SWAP1 PUSH4 0x10C58339 PUSH1 0xE3 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1112 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1101 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10F0 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10DF JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10CE JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10BA JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10A9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x196CFF29 PUSH1 0xE3 SHL EQ SWAP1 POP DUP3 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x1 PUSH3 0x3C4BBB PUSH1 0xE2 SHL SUB NOT DUP2 EQ SWAP2 POP PUSH2 0x1097 JUMP JUMPDEST PUSH4 0xE022923 PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x1090 JUMP JUMPDEST PUSH4 0xE5007B1 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP PUSH2 0x1089 JUMP JUMPDEST PUSH4 0x2A292D3 PUSH1 0xE6 SHL DUP2 EQ SWAP2 POP PUSH2 0x1082 JUMP JUMPDEST PUSH4 0x62C0AB7 PUSH1 0xE5 SHL DUP2 EQ SWAP2 POP PUSH2 0x107B JUMP JUMPDEST PUSH4 0x198D7D99 PUSH1 0xE3 SHL DUP2 EQ SWAP2 POP PUSH2 0x1074 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH2 0x1131 CALLDATASIZE PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 PUSH2 0x113D SWAP6 SWAP3 SWAP6 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x114C PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1170 SWAP1 ISZERO ISZERO PUSH2 0x1CAB JUMP JUMPDEST DUP1 PUSH2 0x117C DUP7 ISZERO ISZERO PUSH2 0x1E60 JUMP JUMPDEST PUSH2 0x13FD JUMPI JUMPDEST PUSH2 0x11B0 DUP6 PUSH2 0x11AB PUSH1 0x69 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x2054 JUMP JUMPDEST PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x69 SSTORE DUP1 ISZERO PUSH2 0x13F5 JUMPI DUP2 SWAP6 JUMPDEST PUSH1 0x40 MLOAD SWAP7 PUSH2 0x11C9 DUP9 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD DUP8 DUP2 MSTORE SWAP1 PUSH2 0x11E8 CALLDATASIZE DUP5 DUP10 PUSH2 0x1FA5 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP11 ADD SWAP2 DUP3 MSTORE DUP5 ISZERO ISZERO PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD SWAP8 DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH2 0x1254 PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x13B5 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1318 JUMPI PUSH2 0x12FF SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x12BC DUP4 PUSH1 0x4 SWAP5 PUSH1 0x80 SWAP5 PUSH32 0xA3C835FCD4D2B819D5E8F590F6B36F796E7B73652831D08CFCA45F22A6D43B7B SWAP15 SWAP16 PUSH1 0x0 SWAP3 PUSH2 0x130D JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST PUSH2 0x12E1 PUSH1 0x60 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x3 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP8 SWAP5 SWAP6 DUP7 SWAP6 DUP7 PUSH2 0x2016 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP11 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x139D JUMPI POP SWAP3 PUSH1 0x1 DUP4 PUSH32 0xA3C835FCD4D2B819D5E8F590F6B36F796E7B73652831D08CFCA45F22A6D43B7B SWAP13 SWAP14 PUSH1 0x80 SWAP5 PUSH2 0x12FF SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 PUSH1 0x4 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1384 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x12C2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x1374 JUMP JUMPDEST DUP3 DUP3 ADD MLOAD DUP14 SSTORE PUSH1 0x1 SWAP1 SWAP13 ADD SWAP12 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x13E5 SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x13EB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1FDC JUMP JUMPDEST DUP11 PUSH2 0x125D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x1408 TIMESTAMP DUP4 GT PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH2 0x1444 CALLDATASIZE PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 PUSH2 0x1451 SWAP6 SWAP3 SWAP4 SWAP6 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1460 PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x1476 DUP5 DUP7 AND ISZERO ISZERO PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x1481 DUP7 ISZERO ISZERO PUSH2 0x1E60 JUMP JUMPDEST DUP2 PUSH2 0x149E PUSH2 0x82F DUP8 DUP8 AND PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x16D2 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x16CA JUMPI DUP3 SWAP7 JUMPDEST PUSH1 0x40 MLOAD SWAP8 PUSH2 0x14B9 DUP10 PUSH2 0x1C28 JUMP JUMPDEST DUP7 DUP7 AND DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP1 DUP9 DUP3 MSTORE PUSH2 0x14D1 CALLDATASIZE DUP6 DUP6 PUSH2 0x1FA5 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP12 ADD SWAP2 DUP3 MSTORE DUP6 ISZERO ISZERO PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE DUP8 DUP8 AND PUSH1 0x0 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP9 DUP12 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD SWAP9 DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH2 0x1531 PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1695 JUMPI JUMPDEST POP PUSH1 0x20 SWAP11 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x15F9 JUMPI PUSH2 0x12FF SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x159B DUP4 PUSH1 0x4 SWAP5 PUSH32 0x3241139AF5E2A8B260AC9C371BBCD5DA66AC3CE01DFC401FB973A1F174A1BC07 SWAP15 SWAP16 PUSH1 0x80 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x15EE JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST PUSH2 0x15C0 PUSH1 0x60 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x3 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x15D0 DUP8 DUP8 AND PUSH2 0x229F JUMP JUMPDEST POP PUSH2 0x15DD DUP10 PUSH1 0x69 SLOAD PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x69 SSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 AND SWAP9 DUP7 PUSH2 0x2016 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x167D JUMPI POP DUP4 PUSH1 0x80 SWAP4 PUSH32 0x3241139AF5E2A8B260AC9C371BBCD5DA66AC3CE01DFC401FB973A1F174A1BC07 SWAP15 SWAP16 PUSH2 0x12FF SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP5 PUSH1 0x4 SWAP8 PUSH1 0x1 SWAP6 LT PUSH2 0x1664 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x15A1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x1654 JUMP JUMPDEST DUP3 DUP16 ADD MLOAD DUP5 SSTORE PUSH1 0x20 SWAP15 DUP16 ADD SWAP15 PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 ADD PUSH2 0x160F JUMP JUMPDEST PUSH2 0x16C4 SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x13EB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1FDC JUMP JUMPDEST DUP12 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x16DD TIMESTAMP DUP5 GT PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH2 0x16FB PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x66 SLOAD PUSH2 0x1785 DUP2 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1792 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1C43 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x179E DUP3 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP1 PUSH1 0x1F NOT ADD DUP4 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1940 JUMPI POP PUSH1 0x0 DUP5 DUP5 JUMPDEST DUP1 DUP4 LT PUSH2 0x181C JUMPI PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE DUP4 MLOAD DUP2 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x5 DUP3 SWAP1 SHL DUP4 ADD DUP2 ADD SWAP2 DUP7 DUP10 ADD SWAP2 DUP10 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP8 LT PUSH2 0x17F0 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x180C PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1B2C JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x1825 DUP4 PUSH2 0x2268 JUMP JUMPDEST SWAP4 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 SLOAD PUSH1 0x3 SWAP7 DUP8 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0x68 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1851 DUP4 PUSH2 0x1C28 JUMP JUMPDEST DUP2 SLOAD AND DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP9 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP9 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP3 DUP1 SLOAD SWAP1 PUSH2 0x1878 DUP3 PUSH2 0x1D15 JUMP JUMPDEST DUP1 DUP8 MSTORE SWAP2 DUP4 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x191C JUMPI POP PUSH1 0x1 EQ PUSH2 0x18DF JUMPI JUMPDEST POP POP POP POP PUSH1 0x1 SWAP6 SWAP7 SWAP8 DUP3 PUSH2 0x18AA PUSH1 0x4 SWAP6 SWAP5 PUSH1 0xFF SWAP5 SUB DUP3 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x18CB DUP3 DUP7 PUSH2 0x1D66 JUMP JUMPDEST MSTORE PUSH2 0x18D6 DUP2 DUP6 PUSH2 0x1D66 JUMP JUMPDEST POP ADD SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1909 JUMPI POP POP POP DUP3 ADD ADD DUP9 DUP3 PUSH2 0x18AA PUSH1 0x4 PUSH2 0x188F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP9 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP DUP10 SWAP1 POP DUP3 PUSH2 0x18AA PUSH1 0x4 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x1948 PUSH2 0x1C7F JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD DUP5 SWAP1 PUSH2 0x17AA JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH2 0x1970 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1978 PUSH2 0x1C7F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x199E SWAP1 ISZERO ISZERO PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x68 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x19B8 DUP4 PUSH2 0x1C28 JUMP JUMPDEST DUP4 SLOAD AND DUP3 MSTORE PUSH1 0x1 SWAP3 PUSH1 0x1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 SWAP6 DUP2 SLOAD SWAP2 PUSH2 0x19E0 DUP4 PUSH2 0x1D15 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1A74 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A3A JUMPI JUMPDEST POP POP POP PUSH2 0x1A0B DUP2 PUSH1 0x4 SWAP5 SWAP6 SWAP7 SUB DUP3 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x128 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP1 SWAP8 POP JUMPDEST DUP3 DUP9 LT PUSH2 0x1A61 JUMPI POP POP POP SWAP4 DUP5 ADD DUP3 ADD SWAP4 PUSH2 0x1A0B DUP2 PUSH1 0x4 PUSH2 0x19F8 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP10 ADD DUP8 ADD MSTORE SWAP7 DUP6 ADD SWAP7 DUP2 ADD PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP9 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP2 ADD DUP4 ADD SWAP5 POP PUSH2 0x1A0B DUP2 PUSH1 0x4 PUSH2 0x19F8 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI DUP1 PUSH32 0x6E4379AD5ABE51B1F38D7C717558B084CA50F05C182778BE47E8AA04793CFE2D PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x142 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1AF7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1B20 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP1 PUSH2 0x1B5F PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0xA0 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x142 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x142 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x142 JUMPI JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x142 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x142 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x142 JUMPI PUSH2 0x1BE3 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x142 JUMPI SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x142 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x142 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x142 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C8C DUP3 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1CB2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2077616C6C657420646F65 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x39903737BA103430BB329030B63637B1B0BA34B7B7 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1D45 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1D2F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1D97 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2064697374726962757469 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1BDB88185B1C9958591E48195E1958DD5D1959 PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DFF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2077616C6C65742063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x6E6F74206265207A65726F2061646472657373 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E67 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20616D6F756E74206D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x742062652067726561746572207468616E207A65726F PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1ED2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2077616C6C657420616C72 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x32B0B23C903430B99030B63637B1B0BA34B7B7 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F3A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20756E6C6F636B2074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65206D75737420626520696E2074686520667574757265000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1FB1 DUP3 PUSH2 0x1C64 JUMP JUMPDEST SWAP2 PUSH2 0x1FBF PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C43 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x142 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1FE7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FDC JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2000 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP3 DUP1 PUSH1 0x60 SWAP5 PUSH1 0xA0 SWAP4 SWAP9 SWAP8 SWAP7 SWAP9 DUP6 MSTORE PUSH1 0x80 PUSH1 0x20 DUP7 ADD MSTORE DUP2 PUSH1 0x80 DUP7 ADD MSTORE DUP4 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP3 ADD ADD SWAP5 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2000 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x142 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x142 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x142 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x142 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x142 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x142 JUMPI DUP3 MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x142 JUMPI SWAP3 PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x142 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x142 JUMPI DUP1 MLOAD PUSH2 0x2116 DUP2 PUSH2 0x1C64 JUMP JUMPDEST SWAP3 PUSH2 0x2124 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1C43 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x142 JUMPI PUSH2 0x2142 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2142 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x217B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x220F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x66 SLOAD DUP2 LT ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x66 PUSH1 0x0 MSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x231C JUMPI PUSH1 0x66 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x2308 JUMPI SWAP1 DUP3 PUSH2 0x22F4 PUSH2 0x22DD DUP5 PUSH1 0x1 PUSH1 0x40 SWAP7 ADD PUSH1 0x66 SSTORE PUSH2 0x2268 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x66 SLOAD SWAP3 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP1 ISZERO PUSH2 0x2406 JUMPI PUSH1 0x0 NOT SWAP1 DUP1 DUP3 ADD DUP2 DUP2 GT PUSH2 0x23F2 JUMPI PUSH1 0x66 SLOAD SWAP1 DUP4 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x23DE JUMPI DUP1 DUP3 SUB PUSH2 0x23AA JUMPI JUMPDEST POP POP POP PUSH1 0x66 SLOAD DUP1 ISZERO PUSH2 0x2396 JUMPI DUP2 ADD SWAP1 PUSH2 0x2375 DUP3 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x66 SSTORE DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0x23C8 PUSH2 0x23B9 PUSH2 0x22DD SWAP4 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SSTORE DUP5 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x235D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xB2 BYTE 0xBD SUB 0xCB 0x4C 0xDD 0x25 PUSH6 0x4BF010C90AB DUP16 0x28 0x4C 0xDC CALL 0xE6 CHAINID PUSH21 0x7C45EDB882B321E364736F6C634300081600330000 ","sourceMap":"539:13145:20:-:0;;;;;;;6007:13:1;539:13145:20;;;;;;;;;;;;;;6078:31:1;6074:139;;-1:-1:-1;539:13145:20;;;;;;;;;6074:139:1;539:13145:20;;;;;;6007:13:1;539:13145:20;6174:28:1;539:13145:20;;;;;;6174:28:1;6074:139;;;539:13145:20;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6862,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_uint256t_string_calldatat_boolt_uint256":{"entryPoint":7073,"id":null,"parameterSlots":1,"returnSlots":6},"abi_decode_array_address_dyn_calldata":{"entryPoint":7160,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_string":{"entryPoint":8101,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_boolt_bytes_fromMemory":{"entryPoint":8403,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string_calldata":{"entryPoint":7028,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_bytes":{"entryPoint":8517,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":6919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Allocation":{"entryPoint":6956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_string_calldata_bool_uint256":{"entryPoint":8214,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Allocation":{"entryPoint":7295,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Allocation_dyn":{"entryPoint":7503,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":7268,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":8289,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_string_calldata_dyn_calldata":{"entryPoint":8338,"id":null,"parameterSlots":3,"returnSlots":2},"checked_add_uint256":{"entryPoint":8179,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8276,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":8156,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6884,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7445,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":7235,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_24135":{"entryPoint":7208,"id":null,"parameterSlots":1,"returnSlots":0},"fun_add":{"entryPoint":8863,"id":1579,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":8551,"id":69,"parameterSlots":0,"returnSlots":0},"fun_contains":{"entryPoint":null,"id":1682,"parameterSlots":1,"returnSlots":1},"fun_remove":{"entryPoint":8993,"id":1663,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership":{"entryPoint":8639,"id":126,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_struct_Allocation_dyn":{"entryPoint":7526,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":8305,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_bool":{"entryPoint":8325,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":7568,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_464d":{"entryPoint":7672,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4b60":{"entryPoint":7883,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_951f":{"entryPoint":7776,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":8712,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ee15":{"entryPoint":7987,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f192":{"entryPoint":7339,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":8808,"id":null,"parameterSlots":1,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"61022080604052600436101561001457600080fd5b60003560e01c9081630b9349b914611a95575080630e022923146119565780631ca00f621461176857806321df0da71461173f578063715018a6146116e2578063862c19c8146114365780638da5cb5b1461140d578063a8a4b4c014611123578063be4644641461103a578063c58156e014610f19578063cb67f94814610c71578063cc6becc814610686578063d1f5789414610415578063f2fde38b14610386578063ff0ed114146101475763ffa1ad74146100d057600080fd5b346101425760003660031901126101425760405160408101908082106001600160401b0383111761012c576101289160405260058152640342e302e360dc1b6020820152604051918291602083526020830190611b07565b0390f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b3461014257600036600319011261014257610160612167565b606a5460ff9061017360ff821615611d90565b606654918215610326576001809260ff191617606a5560005b8381106101d1577f219b165c65b7e1a5744d1a2543bb34326ac29d73e03bdac1abc7290ccd6c26106040856069549082519182526020820152a1602060405160018152f35b806000846101df8294612268565b9054600391821b1c6001600160a01b0390811680855260686020908152604086209384015490939190891686146102b65750909201546040516340c10f1960e01b92810192909252306024830152604482015261026e9161024d82606481015b03601f198101845283611c43565b606554169060405195868094819362ac0f6f60e71b83528560048401612145565b03925af19182156102aa578492610288575b505b0161018c565b6102a4903d806000833e61029c8183611c43565b8101906120d3565b50610280565b6040513d6000823e3d90fd5b9301546040516340c10f1960e01b938101939093526001600160a01b03909316602483015260448201929092526102f49161024d826064810161023f565b03925af19182156102aa57849261030c575b50610282565b610320903d806000833e61029c8183611c43565b50610306565b60405162461bcd60e51b815260206004820152603260248201527f5634446973747269627574696f6e4d6f64756c653a206e6f20616c6c6f636174604482015271696f6e7320746f206469737472696275746560701b6064820152608490fd5b346101425760203660031901126101425761039f611ace565b6103a7612167565b6001600160a01b038116156103c1576103bf906121bf565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101425760403660031901126101425761042e611ace565b6024356001600160401b0381116101425761044d903690600401611b74565b90916000549160ff8360081c161592838094610679575b8015610662575b156106065760ff198116600117600055836105f4575b50602093848203610595573590848110610584575b50906104cd60018060a01b0380936104be60ff60005460081c166104b981612208565b612208565b6104c7336121bf565b166121bf565b168015610524576001600160601b0360a01b60655416176065556104ed57005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196000541660005560405160018152a1005b60405162461bcd60e51b815260048101849052603260248201527f5634446973747269627574696f6e4d6f64756c653a20746f6b656e20616464726044820152716573732063616e6e6f74206265207a65726f60701b6064820152608490fd5b60001990850360031b1b1684610496565b60405162461bcd60e51b815260048101869052603160248201527f5634446973747269627574696f6e4d6f64756c653a20696e76616c696420696e604482015270697469616c697a6174696f6e206461746160781b6064820152608490fd5b61ffff19166101011760005584610481565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561046b5750600160ff82161461046b565b50600160ff821610610464565b346101425760a0366003190112610142576004356001600160401b038111610142576106b6903690600401611bf8565b61010052610200526024356001600160401b038111610142576106dd903690600401611bf8565b610120526101c0526044356001600160401b03811161014257610704903690600401611bf8565b610140526101e0526064356001600160401b0381116101425761072b903690600401611bf8565b6101a05260c0526084356001600160401b03811161014257610751903690600401611bf8565b6101605261018052610761612167565b61077060ff606a541615611d90565b61012051610100511480610c62575b80610c53575b80610c44575b15610be85760006080525b61010051608051106107ad57602060405160018152f35b6107da60018060a01b036107d26107cd6080516101005161020051612061565b612071565b161515611df8565b6107f86107f0608051610120516101c051612061565b351515611e60565b61083561082f60018060a01b0361081b6107cd6080516101005161020051612061565b166000526067602052604060002054151590565b15611ecb565b61084f61084a6080516101a05160c051612061565b612085565b610bc5575b61086a6107cd6080516101005161020051612061565b61090a610880608051610120516101c051612061565b3591610895608051610140516101e051612092565b92906108ac61084a6080516101a05160c051612061565b936108c261084a6080516101a05160c051612061565b15610bbd576108da6080516101605161018051612061565b35935b60405160a0526108ee60a051611c28565b60018060a01b031660a05152602060a051019586523691611fa5565b91604060a051019283521515606060a0510152608060a051015260018060a01b036109416107cd6080516101005161020051612061565b16600052606860205260406000209160018060a01b0360a05151166001600160601b0360a01b845416178355516001830155519081516001600160401b03811161012c576109926002830154611d15565b601f90818111610b80575b506020908211600114610b0b5781906109ce9394600092610b00575b50508160011b916000199060031b1c19161790565b60028201555b6109f5606060a05101511515600383019060ff801983541691151516179055565b6004608060a0510151910155610a2760018060a01b03610a216107cd6080516101005161020051612061565b1661229f565b50610a3b608051610120516101c051612061565b35610a496069918254611ff3565b9055610a616107cd6080516101005161020051612061565b7f3241139af5e2a8b260ac9c371bbcd5da66ac3ce01dfc401fb973a1f174a1bc07610aef610a98608051610120516101c051612061565b3592610aad608051610140516101e051612092565b610ac561084a6080959395516101a05160c051612061565b610ad86080516101605161018051612061565b359160405195869560018060a01b03169886612016565b0390a2600160805101608052610796565b0151905084806109b9565b60028301600052602060002060e05260005b601f1983168110610b6257506001929382601f19811610610b48575b5050811b0160028201556109d4565b015160001960f88360031b161c191660e051558380610b39565b90602081819287015160e05155600160e0510160e052019101610b1d565b610bae90600285016000526020600020600584808701821c83019360208810610bb4575b01901c0190611fdc565b8461099d565b93508293610ba4565b6000936108dd565b610be3610bdb6080516101605161018051612061565b354210611f33565b610854565b60405162461bcd60e51b815260206004820152602e60248201527f5634446973747269627574696f6e4d6f64756c653a206172726179206c656e6760448201526d0e8d0e640daeae6e840dac2e8c6d60931b6064820152608490fd5b5061016051610100511461078b565b506101a0516101005114610785565b5061014051610100511461077f565b346101425760208060031936011261014257610c8b611ace565b60ff606a541615610eb8576001600160a01b0381811660008181526067602052604090205490929190610cbf901515611cab565b82600052606884526040600020600381019160ff83541615610e5c5760048201544210610e0157606554600192909201805460405163a9059cbb60e01b8982019081526001600160a01b039790971660248201526044808201929092529081529094600093849316918390610d35606482611c43565b51925af13d15610dfc573d610d4981611c64565b90610d576040519283611c43565b81526000863d92013e5b15610da357805460ff19169055546040519081527fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888908390a260405160018152f35b60405162461bcd60e51b815260048101859052602b60248201527f5634446973747269627574696f6e4d6f64756c653a20746f6b656e207472616e60448201526a1cd9995c8819985a5b195960aa1b6064820152608490fd5b610d61565b60405162461bcd60e51b815260048101879052602d60248201527f5634446973747269627574696f6e4d6f64756c653a20746f6b656e732061726560448201526c081cdd1a5b1b081b1bd8dad959609a1b6064820152608490fd5b60405162461bcd60e51b815260048101879052602e60248201527f5634446973747269627574696f6e4d6f64756c653a20616c6c6f636174696f6e60448201526d081a5cc81b9bdd081b1bd8dad95960921b6064820152608490fd5b60405162461bcd60e51b815260048101839052603360248201527f5634446973747269627574696f6e4d6f64756c653a20646973747269627574696044820152721bdb881b9bdd081e595d08195e1958dd5d1959606a1b6064820152608490fd5b34610142576020366003190112610142576020610f34611ace565b610f3c612167565b610f4b60ff606a541615611d90565b6001600160a01b0316600081815260676020526040902054610f6e901515611cab565b8060005260688252610f8a600160406000200154606954612054565b6069558060005260688252600060046040822082815582600182015560028101610fb48154611d15565b9081610ffe575b50508260038201550155610fce81612321565b50604051907f85f179d4205edd87e18c80df3160316df70c87a3c515d0650c32dae6ead80afd600080a260018152f35b81601f8693116001146110155750555b8580610fbb565b908083918252611033601f8a8420940160051c840160018501611fdc565b555561100e565b346101425760203660031901126101425760043563ffffffff60e01b8116809103610142576020906310c5833960e31b8114908115611112575b8115611101575b81156110f0575b81156110df575b81156110ce575b81156110ba575b81156110a9575b506040519015158152f35b63196cff2960e31b1490508261109e565b6001623c4bbb60e21b031981149150611097565b630e02292360e01b81149150611090565b630e5007b160e11b81149150611089565b6302a292d360e61b81149150611082565b63062c0ab760e51b8114915061107b565b63198d7d9960e31b81149150611074565b346101425761113136611ba1565b9061113d959295612167565b61114c60ff606a541615611d90565b6001600160a01b038316600090815260676020526040902054611170901515611cab565b8061117c861515611e60565b6113fd575b6111b0856111ab60695460018060a01b038716600052606860205260016040600020015490612054565b611ff3565b60695580156113f55781955b604051966111c988611c28565b6001600160a01b038516885260208801878152906111e8368489611fa5565b9060408a0191825284151560608b015260808a015260018060a01b038616600052606860205260406000209160018060a01b038a51166001600160601b0360a01b845416178355516001830155519788516001600160401b03811161012c576112546002840154611d15565b601f81116113b5575b506020601f8211600114611318576112ff96959493926112bc836004946080947fa3c835fcd4d2b819d5e8f590f6b36f796e7b73652831d08cfca45f22a6d43b7b9e9f60009261130d5750508160011b916000199060031b1c19161790565b60028501555b6112e160608201511515600386019060ff801983541691151516179055565b01519101556040516001600160a01b03909516979495869586612016565b0390a2602060405160018152f35b015190508f806109b9565b6002840160005260206000209a60005b601f198416811061139d5750926001837fa3c835fcd4d2b819d5e8f590f6b36f796e7b73652831d08cfca45f22a6d43b7b9c9d6080946112ff9b9a999897600497601f19811610611384575b505050811b0160028501556112c2565b015160001960f88460031b161c191690558e8080611374565b828201518d556001909c019b60209283019201611328565b6113e590600285016000526020600020601f840160051c810191602085106113eb575b601f0160051c0190611fdc565b8a61125d565b90915081906113d8565b6000956111bc565b611408428311611f33565b611181565b34610142576000366003190112610142576033546040516001600160a01b039091168152602090f35b346101425761144436611ba1565b9061145195929395612167565b61146060ff606a541615611d90565b6001600160a01b03936114768486161515611df8565b611481861515611e60565b8161149e61082f8787166000526067602052604060002054151590565b6116d2575b81156116ca5782965b604051976114b989611c28565b868616895260208901908882526114d1368585611fa5565b9060408b0191825285151560608c015260808b01528787166000526068602052604060002091888b51166001600160601b0360a01b845416178355516001830155519889516001600160401b03811161012c576115316002840154611d15565b601f8111611695575b5060209a601f82116001146115f9576112ff97969594939261159b836004947f3241139af5e2a8b260ac9c371bbcd5da66ac3ce01dfc401fb973a1f174a1bc079e9f6080956000926115ee5750508160011b916000199060031b1c19161790565b60028501555b6115c060608201511515600386019060ff801983541691151516179055565b01519101556115d087871661229f565b506115dd89606954611ff3565b606955604051968796169886612016565b0151905038806109b9565b601f198216906002850160005260206000209160005b81811061167d5750836080937f3241139af5e2a8b260ac9c371bbcd5da66ac3ce01dfc401fb973a1f174a1bc079e9f6112ff9c9b9a9998979460049760019510611664575b505050811b0160028501556115a1565b015160001960f88460031b161c191690558f8080611654565b828f0151845560209e8f019e6001909401930161160f565b6116c490600285016000526020600020601f840160051c810191602085106113eb57601f0160051c0190611fdc565b8b61153a565b6000966114ac565b6116dd428411611f33565b6114a3565b34610142576000366003190112610142576116fb612167565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610142576000366003190112610142576065546040516001600160a01b039091168152602090f35b346101425760003660031901126101425760665461178581611d4f565b6117926040519182611c43565b81815261179e82611d4f565b60209290601f19018360005b8281106119405750600084845b80831061181c57604080518581528351818701819052600092600582901b830181019186890191899085015b8287106117f05785850386f35b90919293828061180c600193603f198a82030186528851611b2c565b96019201960195929190926117e3565b61182583612268565b939060018060a01b03809154600396871b1c166000526068865260406000206040519161185183611c28565b81541682526001808201548884015260028201886040519260009280549061187882611d15565b8087529183811690811561191c57506001146118df575b505050506001959697826118aa6004959460ff940382611c43565b60408601528201541615156060840152015460808201526118cb8286611d66565b526118d68185611d66565b500191906117b7565b909192935060005282600020916000925b8284106119095750505082010188826118aa600461188f565b80548685018601529284019281016118f0565b60ff1916858801525050151560051b84019091019150899050826118aa600461188f565b611948611c7f565b8282870101520184906117aa565b346101425760208060031936011261014257611970611ace565b611978611c7f565b506001600160a01b0390811660008181526067602052604090205461199e901515611cab565b60005260688252604060002091604051916119b883611c28565b835416825260019260018101548284015260028101604051906000958154916119e083611d15565b8085529260018116908115611a745750600114611a3a575b505050611a0b8160049495960382611c43565b604085015260ff6003820154161515606085015201546080830152610128604051928284938452830190611b2c565b60009081528581209097505b828810611a6157505050938401820193611a0b8160046119f8565b8054848901870152968501968101611a46565b60ff191685880152505050151560051b810183019450611a0b8160046119f8565b3461014257600036600319011261014257807f6e4379ad5abe51b1f38d7c717558b084ca50f05c182778be47e8aa04793cfe2d60209252f35b600435906001600160a01b038216820361014257565b60005b838110611af75750506000910152565b8181015183820152602001611ae7565b90602091611b2081518092818552858086019101611ae4565b601f01601f1916010190565b9060018060a01b03825116815260208201516020820152608080611b5f604085015160a0604086015260a0850190611b07565b93606081015115156060850152015191015290565b9181601f84011215610142578235916001600160401b038311610142576020838186019501011161014257565b60a0600319820112610142576004356001600160a01b0381168103610142579160243591604435906001600160401b03821161014257611be391600401611b74565b90916064358015158103610142579060843590565b9181601f84011215610142578235916001600160401b038311610142576020808501948460051b01011161014257565b60a081019081106001600160401b0382111761012c57604052565b90601f801991011681019081106001600160401b0382111761012c57604052565b6001600160401b03811161012c57601f01601f191660200190565b60405190611c8c82611c28565b6000608083828152826020820152606060408201528260608201520152565b15611cb257565b60405162461bcd60e51b815260206004820152603560248201527f5634446973747269627574696f6e4d6f64756c653a2077616c6c657420646f6560448201527439903737ba103430bb329030b63637b1b0ba34b7b760591b6064820152608490fd5b90600182811c92168015611d45575b6020831014611d2f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611d24565b6001600160401b03811161012c5760051b60200190565b8051821015611d7a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b15611d9757565b60405162461bcd60e51b815260206004820152603360248201527f5634446973747269627574696f6e4d6f64756c653a20646973747269627574696044820152721bdb88185b1c9958591e48195e1958dd5d1959606a1b6064820152608490fd5b15611dff57565b60405162461bcd60e51b815260206004820152603360248201527f5634446973747269627574696f6e4d6f64756c653a2077616c6c65742063616e6044820152726e6f74206265207a65726f206164647265737360681b6064820152608490fd5b15611e6757565b60405162461bcd60e51b815260206004820152603660248201527f5634446973747269627574696f6e4d6f64756c653a20616d6f756e74206d7573604482015275742062652067726561746572207468616e207a65726f60501b6064820152608490fd5b15611ed257565b60405162461bcd60e51b815260206004820152603360248201527f5634446973747269627574696f6e4d6f64756c653a2077616c6c657420616c7260448201527232b0b23c903430b99030b63637b1b0ba34b7b760691b6064820152608490fd5b15611f3a57565b60405162461bcd60e51b815260206004820152603760248201527f5634446973747269627574696f6e4d6f64756c653a20756e6c6f636b2074696d60448201527f65206d75737420626520696e20746865206675747572650000000000000000006064820152608490fd5b929192611fb182611c64565b91611fbf6040519384611c43565b829481845281830111610142578281602093846000960137010152565b818110611fe7575050565b60008155600101611fdc565b9190820180921161200057565b634e487b7160e01b600052601160045260246000fd5b91928060609460a09398979698855260806020860152816080860152838501376000828285010152601f801991011682010194151560408201520152565b9190820391821161200057565b9190811015611d7a5760051b0190565b356001600160a01b03811681036101425790565b3580151581036101425790565b9190811015611d7a5760051b81013590601e19813603018212156101425701908135916001600160401b038311610142576020018236038113610142579190565b9190604083820312610142578251801515810361014257926020810151906001600160401b038211610142570181601f8201121561014257805161211681611c64565b926121246040519485611c43565b81845260208284010111610142576121429160208085019101611ae4565b90565b6001600160a01b03909116815260406020820181905261214292910190611b07565b6033546001600160a01b0316330361217b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561220f57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b606654811015611d7a5760666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540190600090565b60008181526067602052604081205461231c57606654680100000000000000008110156123085790826122f46122dd84600160409601606655612268565b819391549060031b91821b91600019901b19161790565b905560665492815260676020522055600190565b634e487b7160e01b82526041600452602482fd5b905090565b600081815260676020526040812054909190801561240657600019908082018181116123f257606654908382019182116123de578082036123aa575b50505060665480156123965781019061237582612268565b909182549160031b1b19169055606655815260676020526040812055600190565b634e487b7160e01b84526031600452602484fd5b6123c86123b96122dd93612268565b90549060031b1c928392612268565b905584526067602052604084205538808061235d565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b50509056fea26469706673582212209fb21abd03cb4cdd256504bf010c90ab8f284cdcf1e646747c45edb882b321e364736f6c63430008160033","opcodes":"PUSH2 0x220 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xB9349B9 EQ PUSH2 0x1A95 JUMPI POP DUP1 PUSH4 0xE022923 EQ PUSH2 0x1956 JUMPI DUP1 PUSH4 0x1CA00F62 EQ PUSH2 0x1768 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x173F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E2 JUMPI DUP1 PUSH4 0x862C19C8 EQ PUSH2 0x1436 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x140D JUMPI DUP1 PUSH4 0xA8A4B4C0 EQ PUSH2 0x1123 JUMPI DUP1 PUSH4 0xBE464464 EQ PUSH2 0x103A JUMPI DUP1 PUSH4 0xC58156E0 EQ PUSH2 0xF19 JUMPI DUP1 PUSH4 0xCB67F948 EQ PUSH2 0xC71 JUMPI DUP1 PUSH4 0xCC6BECC8 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xFF0ED114 EQ PUSH2 0x147 JUMPI PUSH4 0xFFA1AD74 EQ PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0x12C JUMPI PUSH2 0x128 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x342E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH2 0x160 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x6A SLOAD PUSH1 0xFF SWAP1 PUSH2 0x173 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x326 JUMPI PUSH1 0x1 DUP1 SWAP3 PUSH1 0xFF NOT AND OR PUSH1 0x6A SSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1D1 JUMPI PUSH32 0x219B165C65B7E1A5744D1A2543BB34326AC29D73E03BDAC1ABC7290CCD6C2610 PUSH1 0x40 DUP6 PUSH1 0x69 SLOAD SWAP1 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH1 0x0 DUP5 PUSH2 0x1DF DUP3 SWAP5 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP4 DUP5 ADD SLOAD SWAP1 SWAP4 SWAP2 SWAP1 DUP10 AND DUP7 EQ PUSH2 0x2B6 JUMPI POP SWAP1 SWAP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x26E SWAP2 PUSH2 0x24D DUP3 PUSH1 0x64 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x65 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP5 DUP2 SWAP4 PUSH3 0xAC0F6F PUSH1 0xE7 SHL DUP4 MSTORE DUP6 PUSH1 0x4 DUP5 ADD PUSH2 0x2145 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2AA JUMPI DUP5 SWAP3 PUSH2 0x288 JUMPI JUMPDEST POP JUMPDEST ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x2A4 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x29C DUP2 DUP4 PUSH2 0x1C43 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x20D3 JUMP JUMPDEST POP PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x2F4 SWAP2 PUSH2 0x24D DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x23F JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x2AA JUMPI DUP5 SWAP3 PUSH2 0x30C JUMPI JUMPDEST POP PUSH2 0x282 JUMP JUMPDEST PUSH2 0x320 SWAP1 RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH2 0x29C DUP2 DUP4 PUSH2 0x1C43 JUMP JUMPDEST POP PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A206E6F20616C6C6F636174 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x696F6E7320746F2064697374726962757465 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH2 0x39F PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3C1 JUMPI PUSH2 0x3BF SWAP1 PUSH2 0x21BF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH2 0x42E PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x44D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND ISZERO SWAP3 DUP4 DUP1 SWAP5 PUSH2 0x679 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x662 JUMPI JUMPDEST ISZERO PUSH2 0x606 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP4 PUSH2 0x5F4 JUMPI JUMPDEST POP PUSH1 0x20 SWAP4 DUP5 DUP3 SUB PUSH2 0x595 JUMPI CALLDATALOAD SWAP1 DUP5 DUP2 LT PUSH2 0x584 JUMPI JUMPDEST POP SWAP1 PUSH2 0x4CD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 PUSH2 0x4BE PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x4B9 DUP2 PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x4C7 CALLER PUSH2 0x21BF JUMP JUMPDEST AND PUSH2 0x21BF JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x524 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x65 SLOAD AND OR PUSH1 0x65 SSTORE PUSH2 0x4ED JUMPI STOP JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20746F6B656E2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6573732063616E6E6F74206265207A65726F PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT SWAP1 DUP6 SUB PUSH1 0x3 SHL SHL AND DUP5 PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20696E76616C696420696E PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x697469616C697A6174696F6E2064617461 PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP5 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46B JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x46B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x464 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x6B6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x100 MSTORE PUSH2 0x200 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x6DD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0x1C0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x704 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH2 0x1E0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x72B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x142 JUMPI PUSH2 0x751 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BF8 JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE PUSH2 0x761 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x770 PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH2 0x100 MLOAD EQ DUP1 PUSH2 0xC62 JUMPI JUMPDEST DUP1 PUSH2 0xC53 JUMPI JUMPDEST DUP1 PUSH2 0xC44 JUMPI JUMPDEST ISZERO PUSH2 0xBE8 JUMPI PUSH1 0x0 PUSH1 0x80 MSTORE JUMPDEST PUSH2 0x100 MLOAD PUSH1 0x80 MLOAD LT PUSH2 0x7AD JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x7DA PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x7D2 PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x2071 JUMP JUMPDEST AND ISZERO ISZERO PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0x7F0 PUSH1 0x80 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x1E60 JUMP JUMPDEST PUSH2 0x835 PUSH2 0x82F PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x81B PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1ECB JUMP JUMPDEST PUSH2 0x84F PUSH2 0x84A PUSH1 0x80 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x2085 JUMP JUMPDEST PUSH2 0xBC5 JUMPI JUMPDEST PUSH2 0x86A PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x880 PUSH1 0x80 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH2 0x895 PUSH1 0x80 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x2092 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x8AC PUSH2 0x84A PUSH1 0x80 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2061 JUMP JUMPDEST SWAP4 PUSH2 0x8C2 PUSH2 0x84A PUSH1 0x80 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2061 JUMP JUMPDEST ISZERO PUSH2 0xBBD JUMPI PUSH2 0x8DA PUSH1 0x80 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD SWAP4 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 MSTORE PUSH2 0x8EE PUSH1 0xA0 MLOAD PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 MLOAD MSTORE PUSH1 0x20 PUSH1 0xA0 MLOAD ADD SWAP6 DUP7 MSTORE CALLDATASIZE SWAP2 PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 PUSH1 0x40 PUSH1 0xA0 MLOAD ADD SWAP3 DUP4 MSTORE ISZERO ISZERO PUSH1 0x60 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0x80 PUSH1 0xA0 MLOAD ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x941 PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 MLOAD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD SWAP1 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH2 0x992 PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT PUSH2 0xB80 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP3 GT PUSH1 0x1 EQ PUSH2 0xB0B JUMPI DUP2 SWAP1 PUSH2 0x9CE SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xB00 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH2 0x9F5 PUSH1 0x60 PUSH1 0xA0 MLOAD ADD MLOAD ISZERO ISZERO PUSH1 0x3 DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x80 PUSH1 0xA0 MLOAD ADD MLOAD SWAP2 ADD SSTORE PUSH2 0xA27 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xA21 PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST AND PUSH2 0x229F JUMP JUMPDEST POP PUSH2 0xA3B PUSH1 0x80 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD PUSH2 0xA49 PUSH1 0x69 SWAP2 DUP3 SLOAD PUSH2 0x1FF3 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xA61 PUSH2 0x7CD PUSH1 0x80 MLOAD PUSH2 0x100 MLOAD PUSH2 0x200 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH32 0x3241139AF5E2A8B260AC9C371BBCD5DA66AC3CE01DFC401FB973A1F174A1BC07 PUSH2 0xAEF PUSH2 0xA98 PUSH1 0x80 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD SWAP3 PUSH2 0xAAD PUSH1 0x80 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x2092 JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0x84A PUSH1 0x80 SWAP6 SWAP4 SWAP6 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2061 JUMP JUMPDEST PUSH2 0xAD8 PUSH1 0x80 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP9 DUP7 PUSH2 0x2016 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x80 MLOAD ADD PUSH1 0x80 MSTORE PUSH2 0x796 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0xE0 MSTORE PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP2 LT PUSH2 0xB62 JUMPI POP PUSH1 0x1 SWAP3 SWAP4 DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xB48 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x9D4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP4 PUSH1 0x3 SHL AND SHR NOT AND PUSH1 0xE0 MLOAD SSTORE DUP4 DUP1 PUSH2 0xB39 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 DUP2 SWAP3 DUP8 ADD MLOAD PUSH1 0xE0 MLOAD SSTORE PUSH1 0x1 PUSH1 0xE0 MLOAD ADD PUSH1 0xE0 MSTORE ADD SWAP2 ADD PUSH2 0xB1D JUMP JUMPDEST PUSH2 0xBAE SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP5 DUP1 DUP8 ADD DUP3 SHR DUP4 ADD SWAP4 PUSH1 0x20 DUP9 LT PUSH2 0xBB4 JUMPI JUMPDEST ADD SWAP1 SHR ADD SWAP1 PUSH2 0x1FDC JUMP JUMPDEST DUP5 PUSH2 0x99D JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH2 0xBA4 JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0xBE3 PUSH2 0xBDB PUSH1 0x80 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x2061 JUMP JUMPDEST CALLDATALOAD TIMESTAMP LT PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A206172726179206C656E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0xE8D0E640DAEAE6E840DAC2E8C6D PUSH1 0x93 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x160 MLOAD PUSH2 0x100 MLOAD EQ PUSH2 0x78B JUMP JUMPDEST POP PUSH2 0x1A0 MLOAD PUSH2 0x100 MLOAD EQ PUSH2 0x785 JUMP JUMPDEST POP PUSH2 0x140 MLOAD PUSH2 0x100 MLOAD EQ PUSH2 0x77F JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH2 0xC8B PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCBF SWAP1 ISZERO ISZERO PUSH2 0x1CAB JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x68 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND ISZERO PUSH2 0xE5C JUMPI PUSH1 0x4 DUP3 ADD SLOAD TIMESTAMP LT PUSH2 0xE01 JUMPI PUSH1 0x65 SLOAD PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP10 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP1 SWAP8 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 MSTORE SWAP1 SWAP5 PUSH1 0x0 SWAP4 DUP5 SWAP4 AND SWAP2 DUP4 SWAP1 PUSH2 0xD35 PUSH1 0x64 DUP3 PUSH2 0x1C43 JUMP JUMPDEST MLOAD SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xDFC JUMPI RETURNDATASIZE PUSH2 0xD49 DUP2 PUSH2 0x1C64 JUMP JUMPDEST SWAP1 PUSH2 0xD57 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1C43 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP7 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0xDA3 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 SWAP1 DUP4 SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20746F6B656E207472616E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1CD9995C8819985A5B1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20746F6B656E7320617265 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x81CDD1A5B1B081B1BD8DAD959 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20616C6C6F636174696F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x81A5CC81B9BDD081B1BD8DAD959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2064697374726962757469 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1BDB881B9BDD081E595D08195E1958DD5D1959 PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x20 PUSH2 0xF34 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0xF3C PUSH2 0x2167 JUMP JUMPDEST PUSH2 0xF4B PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF6E SWAP1 ISZERO ISZERO PUSH2 0x1CAB JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x68 DUP3 MSTORE PUSH2 0xF8A PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x69 SLOAD PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x69 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x68 DUP3 MSTORE PUSH1 0x0 PUSH1 0x4 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD PUSH2 0xFB4 DUP2 SLOAD PUSH2 0x1D15 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xFFE JUMPI JUMPDEST POP POP DUP3 PUSH1 0x3 DUP3 ADD SSTORE ADD SSTORE PUSH2 0xFCE DUP2 PUSH2 0x2321 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0x85F179D4205EDD87E18C80DF3160316DF70C87A3C515D0650C32DAE6EAD80AFD PUSH1 0x0 DUP1 LOG2 PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP2 PUSH1 0x1F DUP7 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x1015 JUMPI POP SSTORE JUMPDEST DUP6 DUP1 PUSH2 0xFBB JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x1033 PUSH1 0x1F DUP11 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x1FDC JUMP JUMPDEST SSTORE SSTORE PUSH2 0x100E JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x142 JUMPI PUSH1 0x20 SWAP1 PUSH4 0x10C58339 PUSH1 0xE3 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1112 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1101 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10F0 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10DF JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10CE JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10BA JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x10A9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x196CFF29 PUSH1 0xE3 SHL EQ SWAP1 POP DUP3 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x1 PUSH3 0x3C4BBB PUSH1 0xE2 SHL SUB NOT DUP2 EQ SWAP2 POP PUSH2 0x1097 JUMP JUMPDEST PUSH4 0xE022923 PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x1090 JUMP JUMPDEST PUSH4 0xE5007B1 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP PUSH2 0x1089 JUMP JUMPDEST PUSH4 0x2A292D3 PUSH1 0xE6 SHL DUP2 EQ SWAP2 POP PUSH2 0x1082 JUMP JUMPDEST PUSH4 0x62C0AB7 PUSH1 0xE5 SHL DUP2 EQ SWAP2 POP PUSH2 0x107B JUMP JUMPDEST PUSH4 0x198D7D99 PUSH1 0xE3 SHL DUP2 EQ SWAP2 POP PUSH2 0x1074 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH2 0x1131 CALLDATASIZE PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 PUSH2 0x113D SWAP6 SWAP3 SWAP6 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x114C PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1170 SWAP1 ISZERO ISZERO PUSH2 0x1CAB JUMP JUMPDEST DUP1 PUSH2 0x117C DUP7 ISZERO ISZERO PUSH2 0x1E60 JUMP JUMPDEST PUSH2 0x13FD JUMPI JUMPDEST PUSH2 0x11B0 DUP6 PUSH2 0x11AB PUSH1 0x69 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x2054 JUMP JUMPDEST PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x69 SSTORE DUP1 ISZERO PUSH2 0x13F5 JUMPI DUP2 SWAP6 JUMPDEST PUSH1 0x40 MLOAD SWAP7 PUSH2 0x11C9 DUP9 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD DUP8 DUP2 MSTORE SWAP1 PUSH2 0x11E8 CALLDATASIZE DUP5 DUP10 PUSH2 0x1FA5 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP11 ADD SWAP2 DUP3 MSTORE DUP5 ISZERO ISZERO PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD SWAP8 DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH2 0x1254 PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x13B5 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1318 JUMPI PUSH2 0x12FF SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x12BC DUP4 PUSH1 0x4 SWAP5 PUSH1 0x80 SWAP5 PUSH32 0xA3C835FCD4D2B819D5E8F590F6B36F796E7B73652831D08CFCA45F22A6D43B7B SWAP15 SWAP16 PUSH1 0x0 SWAP3 PUSH2 0x130D JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST PUSH2 0x12E1 PUSH1 0x60 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x3 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP8 SWAP5 SWAP6 DUP7 SWAP6 DUP7 PUSH2 0x2016 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP11 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x139D JUMPI POP SWAP3 PUSH1 0x1 DUP4 PUSH32 0xA3C835FCD4D2B819D5E8F590F6B36F796E7B73652831D08CFCA45F22A6D43B7B SWAP13 SWAP14 PUSH1 0x80 SWAP5 PUSH2 0x12FF SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 PUSH1 0x4 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1384 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x12C2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x1374 JUMP JUMPDEST DUP3 DUP3 ADD MLOAD DUP14 SSTORE PUSH1 0x1 SWAP1 SWAP13 ADD SWAP12 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x13E5 SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x13EB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1FDC JUMP JUMPDEST DUP11 PUSH2 0x125D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x1408 TIMESTAMP DUP4 GT PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH2 0x1444 CALLDATASIZE PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 PUSH2 0x1451 SWAP6 SWAP3 SWAP4 SWAP6 PUSH2 0x2167 JUMP JUMPDEST PUSH2 0x1460 PUSH1 0xFF PUSH1 0x6A SLOAD AND ISZERO PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH2 0x1476 DUP5 DUP7 AND ISZERO ISZERO PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x1481 DUP7 ISZERO ISZERO PUSH2 0x1E60 JUMP JUMPDEST DUP2 PUSH2 0x149E PUSH2 0x82F DUP8 DUP8 AND PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x16D2 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x16CA JUMPI DUP3 SWAP7 JUMPDEST PUSH1 0x40 MLOAD SWAP8 PUSH2 0x14B9 DUP10 PUSH2 0x1C28 JUMP JUMPDEST DUP7 DUP7 AND DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP1 DUP9 DUP3 MSTORE PUSH2 0x14D1 CALLDATASIZE DUP6 DUP6 PUSH2 0x1FA5 JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP12 ADD SWAP2 DUP3 MSTORE DUP6 ISZERO ISZERO PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD MSTORE DUP8 DUP8 AND PUSH1 0x0 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP9 DUP12 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD SWAP9 DUP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH2 0x1531 PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1695 JUMPI JUMPDEST POP PUSH1 0x20 SWAP11 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x15F9 JUMPI PUSH2 0x12FF SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 PUSH2 0x159B DUP4 PUSH1 0x4 SWAP5 PUSH32 0x3241139AF5E2A8B260AC9C371BBCD5DA66AC3CE01DFC401FB973A1F174A1BC07 SWAP15 SWAP16 PUSH1 0x80 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x15EE JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST PUSH2 0x15C0 PUSH1 0x60 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x3 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x15D0 DUP8 DUP8 AND PUSH2 0x229F JUMP JUMPDEST POP PUSH2 0x15DD DUP10 PUSH1 0x69 SLOAD PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x69 SSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 AND SWAP9 DUP7 PUSH2 0x2016 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x167D JUMPI POP DUP4 PUSH1 0x80 SWAP4 PUSH32 0x3241139AF5E2A8B260AC9C371BBCD5DA66AC3CE01DFC401FB973A1F174A1BC07 SWAP15 SWAP16 PUSH2 0x12FF SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP5 PUSH1 0x4 SWAP8 PUSH1 0x1 SWAP6 LT PUSH2 0x1664 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x15A1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x1654 JUMP JUMPDEST DUP3 DUP16 ADD MLOAD DUP5 SSTORE PUSH1 0x20 SWAP15 DUP16 ADD SWAP15 PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 ADD PUSH2 0x160F JUMP JUMPDEST PUSH2 0x16C4 SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x13EB JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1FDC JUMP JUMPDEST DUP12 PUSH2 0x153A JUMP JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x16DD TIMESTAMP DUP5 GT PUSH2 0x1F33 JUMP JUMPDEST PUSH2 0x14A3 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH2 0x16FB PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI PUSH1 0x66 SLOAD PUSH2 0x1785 DUP2 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1792 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1C43 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH2 0x179E DUP3 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x20 SWAP3 SWAP1 PUSH1 0x1F NOT ADD DUP4 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1940 JUMPI POP PUSH1 0x0 DUP5 DUP5 JUMPDEST DUP1 DUP4 LT PUSH2 0x181C JUMPI PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE DUP4 MLOAD DUP2 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x5 DUP3 SWAP1 SHL DUP4 ADD DUP2 ADD SWAP2 DUP7 DUP10 ADD SWAP2 DUP10 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP8 LT PUSH2 0x17F0 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x180C PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1B2C JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x1825 DUP4 PUSH2 0x2268 JUMP JUMPDEST SWAP4 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 SLOAD PUSH1 0x3 SWAP7 DUP8 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0x68 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1851 DUP4 PUSH2 0x1C28 JUMP JUMPDEST DUP2 SLOAD AND DUP3 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP9 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP9 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP3 DUP1 SLOAD SWAP1 PUSH2 0x1878 DUP3 PUSH2 0x1D15 JUMP JUMPDEST DUP1 DUP8 MSTORE SWAP2 DUP4 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x191C JUMPI POP PUSH1 0x1 EQ PUSH2 0x18DF JUMPI JUMPDEST POP POP POP POP PUSH1 0x1 SWAP6 SWAP7 SWAP8 DUP3 PUSH2 0x18AA PUSH1 0x4 SWAP6 SWAP5 PUSH1 0xFF SWAP5 SUB DUP3 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x18CB DUP3 DUP7 PUSH2 0x1D66 JUMP JUMPDEST MSTORE PUSH2 0x18D6 DUP2 DUP6 PUSH2 0x1D66 JUMP JUMPDEST POP ADD SWAP2 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1909 JUMPI POP POP POP DUP3 ADD ADD DUP9 DUP3 PUSH2 0x18AA PUSH1 0x4 PUSH2 0x188F JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP9 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD SWAP1 SWAP2 ADD SWAP2 POP DUP10 SWAP1 POP DUP3 PUSH2 0x18AA PUSH1 0x4 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x1948 PUSH2 0x1C7F JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD DUP5 SWAP1 PUSH2 0x17AA JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x142 JUMPI PUSH2 0x1970 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x1978 PUSH2 0x1C7F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x199E SWAP1 ISZERO ISZERO PUSH2 0x1CAB JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x68 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x19B8 DUP4 PUSH2 0x1C28 JUMP JUMPDEST DUP4 SLOAD AND DUP3 MSTORE PUSH1 0x1 SWAP3 PUSH1 0x1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 SWAP6 DUP2 SLOAD SWAP2 PUSH2 0x19E0 DUP4 PUSH2 0x1D15 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1A74 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A3A JUMPI JUMPDEST POP POP POP PUSH2 0x1A0B DUP2 PUSH1 0x4 SWAP5 SWAP6 SWAP7 SUB DUP3 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x128 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP1 SWAP8 POP JUMPDEST DUP3 DUP9 LT PUSH2 0x1A61 JUMPI POP POP POP SWAP4 DUP5 ADD DUP3 ADD SWAP4 PUSH2 0x1A0B DUP2 PUSH1 0x4 PUSH2 0x19F8 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP10 ADD DUP8 ADD MSTORE SWAP7 DUP6 ADD SWAP7 DUP2 ADD PUSH2 0x1A46 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP9 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP2 ADD DUP4 ADD SWAP5 POP PUSH2 0x1A0B DUP2 PUSH1 0x4 PUSH2 0x19F8 JUMP JUMPDEST CALLVALUE PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x142 JUMPI DUP1 PUSH32 0x6E4379AD5ABE51B1F38D7C717558B084CA50F05C182778BE47E8AA04793CFE2D PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x142 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1AF7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1B20 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP1 PUSH2 0x1B5F PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0xA0 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x142 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x142 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x142 JUMPI JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x142 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x142 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x142 JUMPI PUSH2 0x1BE3 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B74 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x142 JUMPI SWAP1 PUSH1 0x84 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x142 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x142 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x142 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x12C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1C8C DUP3 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1CB2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2077616C6C657420646F65 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x39903737BA103430BB329030B63637B1B0BA34B7B7 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1D45 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1D2F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x12C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1D97 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2064697374726962757469 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1BDB88185B1C9958591E48195E1958DD5D1959 PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DFF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2077616C6C65742063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x6E6F74206265207A65726F2061646472657373 PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E67 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20616D6F756E74206D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x742062652067726561746572207468616E207A65726F PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1ED2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A2077616C6C657420616C72 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x32B0B23C903430B99030B63637B1B0BA34B7B7 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F3A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634446973747269627574696F6E4D6F64756C653A20756E6C6F636B2074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65206D75737420626520696E2074686520667574757265000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1FB1 DUP3 PUSH2 0x1C64 JUMP JUMPDEST SWAP2 PUSH2 0x1FBF PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C43 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x142 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1FE7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1FDC JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2000 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP3 DUP1 PUSH1 0x60 SWAP5 PUSH1 0xA0 SWAP4 SWAP9 SWAP8 SWAP7 SWAP9 DUP6 MSTORE PUSH1 0x80 PUSH1 0x20 DUP7 ADD MSTORE DUP2 PUSH1 0x80 DUP7 ADD MSTORE DUP4 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP3 ADD ADD SWAP5 ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2000 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x142 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x142 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x142 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x142 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0x142 JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0x142 JUMPI DUP3 MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x142 JUMPI SWAP3 PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x142 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x142 JUMPI DUP1 MLOAD PUSH2 0x2116 DUP2 PUSH2 0x1C64 JUMP JUMPDEST SWAP3 PUSH2 0x2124 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1C43 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x142 JUMPI PUSH2 0x2142 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1AE4 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x2142 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x217B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x220F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x66 SLOAD DUP2 LT ISZERO PUSH2 0x1D7A JUMPI PUSH1 0x66 PUSH1 0x0 MSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x231C JUMPI PUSH1 0x66 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x2308 JUMPI SWAP1 DUP3 PUSH2 0x22F4 PUSH2 0x22DD DUP5 PUSH1 0x1 PUSH1 0x40 SWAP7 ADD PUSH1 0x66 SSTORE PUSH2 0x2268 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x66 SLOAD SWAP3 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP1 ISZERO PUSH2 0x2406 JUMPI PUSH1 0x0 NOT SWAP1 DUP1 DUP3 ADD DUP2 DUP2 GT PUSH2 0x23F2 JUMPI PUSH1 0x66 SLOAD SWAP1 DUP4 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x23DE JUMPI DUP1 DUP3 SUB PUSH2 0x23AA JUMPI JUMPDEST POP POP POP PUSH1 0x66 SLOAD DUP1 ISZERO PUSH2 0x2396 JUMPI DUP2 ADD SWAP1 PUSH2 0x2375 DUP3 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x66 SSTORE DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0x23C8 PUSH2 0x23B9 PUSH2 0x22DD SWAP4 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 PUSH2 0x2268 JUMP JUMPDEST SWAP1 SSTORE DUP5 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x235D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xB2 BYTE 0xBD SUB 0xCB 0x4C 0xDD 0x25 PUSH6 0x4BF010C90AB DUP16 0x28 0x4C 0xDC CALL 0xE6 CHAINID PUSH21 0x7C45EDB882B321E364736F6C634300081600330000 ","sourceMap":"539:13145:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5065:181;539:13145;5065:181;;;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;1324:62:0;;:::i;:::-;10938:21:20;539:13145;;;10929:86;539:13145;;;10937:22;10929:86;:::i;:::-;11033:18;539:13145;11033:31;;;539:13145;;11162:4;;539:13145;;;;;10938:21;539:13145;;11306:15;;;;;;12315:50;539:13145;;12336:15;539:13145;;;;;;;;;;;12315:50;539:13145;;;11162:4;539:13145;;;11323:3;5016:18:8;539:13145:20;5016:18:8;;;;;:::i;:::-;539:13145:20;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;11429:12;539:13145;;;;;;;11559:17;;;539:13145;;;;;;;;;;;-1:-1:-1;11818:17:20;;;539:13145;;;-1:-1:-1;;;11693:160:20;;;;;;;11791:4;11693:160;;;539:13145;;;;;11871:56;;11693:160;539:13145;;;;11693:160;;539:13145;;11693:160;;;;;;:::i;:::-;11884:6;539:13145;;;;;;;;;;;;;;11871:56;;;539:13145;11871:56;;;:::i;:::-;;;;;;;;;;;;;;11555:727;;;539:13145;11291:13;;11871:56;;;;;539:13145;11871:56;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;539:13145;;;;;;;;;11555:727;12158:17;;539:13145;;;-1:-1:-1;;;12040:153:20;;;;;;;-1:-1:-1;;;;;539:13145:20;;;12040:153;;;539:13145;;;;;;;;12211:56;;12040:153;539:13145;;;;12040:153;539:13145;12211:56;;;;;;;;;;;;;;11555:727;;;;12211:56;;;;;539:13145;12211:56;;;;;;:::i;:::-;;;;539:13145;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;:::i;:::-;1324:62:0;;:::i;:::-;-1:-1:-1;;;;;539:13145:20;;2423:22:0;539:13145:20;;2517:8:0;;;:::i;:::-;539:13145:20;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;:::i;:::-;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;:::i;:::-;;;;;;;;;;;3301:14:1;3347:34;;;;;;539:13145:20;3346:108:1;;;;539:13145:20;;;;-1:-1:-1;;539:13145:20;;3551:1:1;539:13145:20;;;;3562:65:1;;539:13145:20;;;2037:17;;;;539:13145;;;;;;;;;;;;2229:5;539:13145;;;;;;;5366:69:1;539:13145:20;;;;;;5366:69:1;;;:::i;:::-;;:::i;:::-;1216:12:0;965:10:7;1216:12:0;:::i;:::-;539:13145:20;2229:5;:::i;:::-;539:13145;2262:26;;539:13145;;-1:-1:-1;;;;;539:13145:20;;2353:21;539:13145;;;2353:21;539:13145;3647:99:1;;539:13145:20;3647:99:1;3721:14;539:13145:20;;;;;;;;;;3551:1:1;539:13145:20;;3721:14:1;539:13145:20;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;3562:65:1;-1:-1:-1;;539:13145:20;;;;;3562:65:1;;;539:13145:20;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;3346:108:1;3426:4;;1713:19:6;:23;3387:66:1;;3346:108;3387:66;539:13145:20;3452:1:1;539:13145:20;;;3436:17:1;3346:108;;3347:34;539:13145:20;3380:1:1;539:13145:20;;;3365:16:1;3347:34;;539:13145:20;;;;;;-1:-1:-1;;539:13145:20;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;:::i;:::-;;;;;1324:62:0;;:::i;:::-;6099:86:20;539:13145;6108:21;539:13145;;6107:22;6099:86;:::i;:::-;6216:32;;;;;:80;;;539:13145;6216:132;;;539:13145;6216:185;;;539:13145;;;;;6497:13;;6512:18;;;;;;;;539:13145;;;;;;;6532:3;6551:88;539:13145;;;;;6559:10;;;;;;;;;:::i;:::-;;:::i;:::-;539:13145;6559:24;;6551:88;:::i;:::-;6653:81;6661:10;;;;;;;;:::i;:::-;539:13145;6661:14;;6653:81;:::i;:::-;6748:104;8974:55:8;539:13145:20;;;;;6785:10;;;;;;;;;:::i;:::-;539:13145;-1:-1:-1;539:13145:20;4362:12:8;539:13145:20;;;-1:-1:-1;539:13145:20;;4362:24:8;;4266:127;;8974:55;6756:40:20;6748:104;:::i;:::-;6883:13;;;;;;;;;:::i;:::-;;:::i;:::-;6879:152;;6532:3;7121:10;;;;;;;;;:::i;:::-;539:13145;7157:10;;;;;;;;:::i;:::-;539:13145;7192:9;;;;;;;;;:::i;:::-;7227:13;;;;;;;;;;;:::i;:::-;7270;;;;;;;;;;:::i;:::-;:34;;;7286:14;;;;;;;;:::i;:::-;539:13145;7270:34;;539:13145;;;;;;;;:::i;:::-;;;;;;;;;;;7084:235;;;539:13145;;;;;;:::i;:::-;7084:235;539:13145;7084:235;;;539:13145;;;;;;7084:235;;;539:13145;;7084:235;;;539:13145;;;;;;7070:10;;;;;;;;;:::i;:::-;539:13145;;;7057:12;539:13145;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;:::i;:::-;;;;;;;;7270:34;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7084:235;;;539:13145;;;;;;;;;;;;;;;;;;;;;;;;7084:235;;;539:13145;;;;8409:50:8;539:13145:20;;;;;7369:10;;;;;;;;;:::i;:::-;539:13145;8409:50:8;:::i;:::-;;7413:10:20;;;;;;;;:::i;:::-;539:13145;7394:29;;539:13145;;;7394:29;:::i;:::-;539:13145;;7471:10;;;;;;;;;:::i;:::-;7455:81;;7483:10;;;;;;;;:::i;:::-;539:13145;7495:9;;;;;;;;;:::i;:::-;7506:13;;;;;;;;;;;;:::i;:::-;7521:14;;;;;;;;:::i;:::-;539:13145;;;;;;;;;;;;;7455:81;;;:::i;:::-;;;;539:13145;6532:3;;539:13145;6532:3;;6497:13;;539:13145;;;;-1:-1:-1;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;7270:34;539:13145;7270:34;;;6879:152;6916:100;6924:14;;;;;;;;:::i;:::-;539:13145;6941:15;-1:-1:-1;6916:100:20;:::i;:::-;6879:152;;539:13145;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;6216:185;6383:18;;;6365:36;;;6216:185;;:132;6331:17;;;6313:35;;;6216:132;;:80;6283:13;;;6265:31;;;6216:80;;539:13145;;;;;;;;;;;;;;;:::i;:::-;;12718:21;539:13145;;;;;-1:-1:-1;;;;;539:13145:20;;;-1:-1:-1;539:13145:20;;;4362:12:8;539:13145:20;;;;;;;;;;12805:101;;4362:24:8;;12805:101:20;:::i;:::-;539:13145;;;12957:12;539:13145;;;;;12995:17;;;539:13145;;;;;;;;;13100:21;;539:13145;13081:15;:40;539:13145;;13260:6;539:13145;13395:17;;;;;539:13145;;;;-1:-1:-1;;;13285:141:20;;;;;;-1:-1:-1;;;;;539:13145:20;;;;13285:141;;;539:13145;;;;;;;;;13285:141;;;13395:17;;-1:-1:-1;;;;539:13145:20;;-1:-1:-1;;13285:141:20;539:13145;;13285:141;:::i;:::-;13260:176;;;;539:13145;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;;;;13613:41;;539:13145;;13613:41;539:13145;;13395:17;539:13145;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;13285:141;539:13145;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;;:::i;:::-;1324:62:0;;:::i;:::-;7872:86:20;539:13145;7881:21;539:13145;;7880:22;7872:86;:::i;:::-;-1:-1:-1;;;;;539:13145:20;-1:-1:-1;539:13145:20;;;4362:12:8;539:13145:20;;;;;;7968:101;;4362:24:8;;12805:101:20;:::i;7968:::-;539:13145;;;8105:12;539:13145;;8142:25;8105:27;539:13145;;;8105:27;539:13145;8142:25;539:13145;8142:25;:::i;:::-;;539:13145;;;;8105:12;539:13145;;;;;;;;;;;8105:27;539:13145;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;8730:53:8;;;:::i;:::-;;539:13145:20;;8280:25;;539:13145;8280:25;;8105:27;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8105:27;539:13145;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2975:59:20;;;:143;;;;539:13145;2975:221;;;;539:13145;2975:299;;;;539:13145;2975:378;;;;539:13145;2975:453;;;;539:13145;2975:534;;;;539:13145;2975:608;;;;539:13145;;;;;;;;;;2975:608;-1:-1:-1;;;3525:58:20;;-1:-1:-1;2975:608:20;;;:534;-1:-1:-1;;;;;;3444:65:20;;;-1:-1:-1;2975:534:20;;:453;-1:-1:-1;;;3369:59:20;;;-1:-1:-1;2975:453:20;;:378;-1:-1:-1;;;3290:63:20;;;-1:-1:-1;2975:378:20;;:299;-1:-1:-1;;;3212:62:20;;;-1:-1:-1;2975:299:20;;:221;-1:-1:-1;;;3134:62:20;;;-1:-1:-1;2975:221:20;;:143;-1:-1:-1;;;3050:68:20;;;-1:-1:-1;2975:143:20;;539:13145;;;;;;;:::i;:::-;1324:62:0;;;;;;:::i;:::-;8890:86:20;539:13145;8899:21;539:13145;;8898:22;8890:86;:::i;:::-;-1:-1:-1;;;;;539:13145:20;;-1:-1:-1;539:13145:20;;;4362:12:8;539:13145:20;;;;;;8986:101;;4362:24:8;;12805:101:20;:::i;8986:::-;9105:10;9097:77;9105:10;;;9097:77;:::i;:::-;9193:133;;539:13145;9362:54;539:13145;9362:45;:15;539:13145;;;;;;;;;;9380:12;539:13145;;9380:27;539:13145;;;9380:27;539:13145;9362:45;;:::i;:::-;:54;:::i;:::-;:15;539:13145;9605:23;;;;;;;539:13145;;;;;;:::i;:::-;-1:-1:-1;;;;;539:13145:20;;;;;9458:181;;539:13145;;;9458:181;539:13145;;;;;:::i;:::-;9458:181;539:13145;9458:181;;539:13145;;;;;;9458:181;;;539:13145;9458:181;;;539:13145;;;;;;;;;;9380:12;539:13145;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;9380:27;539:13145;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;:::i;:::-;;;;;;9605:23;539:13145;;;;;;;;;9663:61;539:13145;;;;;;;;;9458:181;539:13145;9663:61;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9458:181;;;539:13145;;;;;;;;;;;;;;;;;;;;;;9458:181;539:13145;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;9663:61;:::i;:::-;;;;539:13145;;;9380:27;539:13145;;;;;;;-1:-1:-1;539:13145:20;;;;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;;;;9380:27;539:13145;9663:61;539:13145;;9458:181;539:13145;9663:61;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9380:27;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;539:13145:20;;;;9605:23;539:13145;9605:23;;;9193:133;9219:96;9240:15;9227:28;;9219:96;:::i;:::-;9193:133;;539:13145;;;;;;-1:-1:-1;;539:13145:20;;;;1534:6:0;539:13145:20;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;;:::i;:::-;1324:62:0;;;;;;;:::i;:::-;4495:86:20;539:13145;4504:21;539:13145;;4503:22;4495:86;:::i;:::-;-1:-1:-1;;;;;539:13145:20;4591:84;539:13145;;;4599:20;;4591:84;:::i;:::-;4685:77;4693:10;;;4685:77;:::i;:::-;539:13145;4772:100;8974:55:8;539:13145:20;;;-1:-1:-1;539:13145:20;4362:12:8;539:13145:20;;;-1:-1:-1;539:13145:20;;4362:24:8;;4266:127;;4772:100:20;4891:133;;539:13145;5212:23;;;;;;;539:13145;;;;;;:::i;:::-;;;;;;5065:181;;;539:13145;;;;;;;;;:::i;:::-;5065:181;539:13145;5065:181;;539:13145;;;;;;5065:181;;;539:13145;5065:181;;;539:13145;;;;;;5042:12;5065:181;539:13145;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;:::i;:::-;;;;;;5212:23;539:13145;5065:181;539:13145;;;;;;;;5354:58;539:13145;;;;;;;;;;5354:58;539:13145;;5065:181;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5065:181;;;539:13145;;;;;;;;;;;;;;;;;;;;;;5065:181;539:13145;;;;8409:50:8;539:13145:20;;;8409:50:8;:::i;:::-;;5305:25:20;539:13145;5305:25;539:13145;5305:25;:::i;:::-;;539:13145;;;;;;;5354:58;;;:::i;539:13145::-;;;;-1:-1:-1;539:13145:20;;;;;;;;;;;;;;;5065:181;539:13145;;;;;;;;;;;;5065:181;539:13145;5354:58;539:13145;;5354:58;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5065:181;539:13145;;;;;;;;;;;;;;;;;;;;5065:181;539:13145;;;;;;;;;;5065:181;539:13145;;;;;;;;;;;:::i;:::-;;;;5212:23;539:13145;5212:23;;;4891:133;4917:96;4938:15;4925:28;;4917:96;:::i;:::-;4891:133;;539:13145;;;;;;-1:-1:-1;;539:13145:20;;;;1324:62:0;;:::i;:::-;2779:6;539:13145:20;;-1:-1:-1;;;;;;539:13145:20;;;;;;;-1:-1:-1;;;;;539:13145:20;2827:40:0;539:13145:20;;2827:40:0;539:13145:20;;;;;;;-1:-1:-1;;539:13145:20;;;;3809:6;539:13145;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;9985:18;539:13145;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;539:13145:20;;;;;;;;;-1:-1:-1;539:13145:20;10083:13;;10098:9;;;;;;539:13145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;10109:3;5016:18:8;;;:::i;:::-;539:13145:20;;;;;;;;;;;;;;;;;;10200:12;539:13145;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10183:37;;;;:::i;:::-;;;;;;:::i;:::-;;539:13145;10083:13;;;;539:13145;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;-1:-1:-1;;539:13145:20;;;;;;;;;;-1:-1:-1;539:13145:20;;-1:-1:-1;539:13145:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;;539:13145:20;;;-1:-1:-1;539:13145:20;;;4362:12:8;539:13145:20;;;;;;10555:101;;4362:24:8;;12805:101:20;:::i;10555:::-;539:13145;;10673:12;539:13145;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;539:13145:20;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;-1:-1:-1;539:13145:20;;;;;;;;;;;-1:-1:-1;;539:13145:20;;;;;2599:32;539:13145;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;539:13145:20;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;539:13145:20;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;539:13145:20;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;:::o;:::-;-1:-1:-1;;;;;539:13145:20;;;;;;-1:-1:-1;;539:13145:20;;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;539:13145:20;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;539:13145:20;;;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;539:13145:20;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;539:13145:20;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;;;;539:13145:20;;;;;;;;;;;;;;;;;;:::i;1620:130:0:-;1534:6;539:13145:20;-1:-1:-1;;;;;539:13145:20;965:10:7;1683:23:0;539:13145:20;;1620:130:0:o;539:13145:20:-;;;;;;;;;;;;;;;;;;;;;;;;;2687:187:0;2779:6;539:13145:20;;-1:-1:-1;;;;;539:13145:20;;;-1:-1:-1;;;;;;539:13145:20;;;;;;;;;;2827:40:0;-1:-1:-1;;2827:40:0;2687:187::o;539:13145:20:-;;;;:::o;:::-;;;-1:-1:-1;;;539:13145:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;9985:18;539:13145;;;;;;9985:18;-1:-1:-1;539:13145:20;;;;-1:-1:-1;539:13145:20;:::o;2225:404:8:-;-1:-1:-1;539:13145:20;;;4362:12:8;539:13145:20;;;;;;;;4781:18;539:13145;;;;;;;;;;;;4362:12:8;539:13145:20;;;4781:18;539:13145;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4781:18;539:13145;;;;4362:12:8;539:13145:20;;;;4362:12:8;2558:11;:::o;539:13145:20:-;-1:-1:-1;;;539:13145:20;;;;;;;;2304:319:8;2600:12;;;:::o;2797:1388::-;-1:-1:-1;539:13145:20;;;3000:12:8;539:13145:20;;;;;;-1:-1:-1;;539:13145:20;3034:15:8;;;;-1:-1:-1;;539:13145:20;;;;;;;;;7976:18;539:13145;;;;;;;;;;3516:26:8;;;3512:398;;3030:1149;539:13145:20;;;7976:18;539:13145;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7976:18;539:13145;;;3000:12:8;539:13145:20;;;;;;3000:12:8;4114:11;:::o;539:13145:20:-;-1:-1:-1;;;539:13145:20;;;;;;;;3512:398:8;539:13145:20;3582:22:8;3704:26;3582:22;;:::i;:::-;539:13145:20;;;;;;3704:26:8;;;;:::i;539:13145:20:-;;;;;3000:12:8;539:13145:20;;;;;;3512:398:8;;;;;539:13145:20;-1:-1:-1;;;539:13145:20;;;;;;;;;-1:-1:-1;;;539:13145:20;;;;;;;;3030:1149:8;4156:12;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1856200","executionCost":"27305","totalCost":"1883505"},"external":{"VERSION()":"infinite","addAllocation(address,uint256,string,bool,uint256)":"infinite","addMultipleAllocations(address[],uint256[],string[],bool[],uint256[])":"infinite","executeDistribution()":"infinite","getAllAllocations()":"infinite","getAllocation(address)":"infinite","getModuleType()":"189","getToken()":"2387","initialize(address,bytes)":"infinite","modifyAllocation(address,uint256,string,bool,uint256)":"infinite","owner()":"2453","removeAllocation(address)":"infinite","renounceOwnership()":"28151","supportsFunction(bytes4)":"815","transferOwnership(address)":"28501","unlockTokens(address)":"infinite"}},"methodIdentifiers":{"VERSION()":"ffa1ad74","addAllocation(address,uint256,string,bool,uint256)":"862c19c8","addMultipleAllocations(address[],uint256[],string[],bool[],uint256[])":"cc6becc8","executeDistribution()":"ff0ed114","getAllAllocations()":"1ca00f62","getAllocation(address)":"0e022923","getModuleType()":"0b9349b9","getToken()":"21df0da7","initialize(address,bytes)":"d1f57894","modifyAllocation(address,uint256,string,bool,uint256)":"a8a4b4c0","owner()":"8da5cb5b","removeAllocation(address)":"c58156e0","renounceOwnership()":"715018a6","supportsFunction(bytes4)":"be464464","transferOwnership(address)":"f2fde38b","unlockTokens(address)":"cb67f948"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"AllocationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"AllocationModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"AllocationRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"walletCount\",\"type\":\"uint256\"}],\"name\":\"DistributionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"addAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"labels\",\"type\":\"string[]\"},{\"internalType\":\"bool[]\",\"name\":\"lockStatus\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"unlockTimes\",\"type\":\"uint256[]\"}],\"name\":\"addMultipleAllocations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeDistribution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IV4DistributionModule.Allocation[]\",\"name\":\"allocations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IV4DistributionModule.Allocation\",\"name\":\"allocation\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModuleType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"moduleType\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"modifyAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"removeAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"supportsFunction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasFunction\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"unlockTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of distribution module with allocation capabilities\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addAllocation(address,uint256,string,bool,uint256)\":{\"details\":\"Add a new allocation\",\"params\":{\"amount\":\"Amount of tokens to allocate\",\"label\":\"Optional label for this allocation (e.g. \\\"Team\\\", \\\"Marketing\\\")\",\"locked\":\"Whether the allocation should be time-locked\",\"unlockTime\":\"Timestamp when tokens become unlocked (0 if not locked)\",\"wallet\":\"Recipient wallet address\"},\"returns\":{\"success\":\"Whether the allocation was successfully added\"}},\"addMultipleAllocations(address[],uint256[],string[],bool[],uint256[])\":{\"details\":\"Add multiple allocations at once\",\"params\":{\"amounts\":\"Array of token amounts\",\"labels\":\"Array of labels\",\"lockStatus\":\"Array of lock statuses\",\"unlockTimes\":\"Array of unlock times\",\"wallets\":\"Array of recipient wallet addresses\"},\"returns\":{\"success\":\"Whether all allocations were successfully added\"}},\"constructor\":{\"details\":\"Constructor that disables initialization on the implementation contract\"},\"executeDistribution()\":{\"details\":\"Execute the distribution\",\"returns\":{\"success\":\"Whether the distribution was successfully executed\"}},\"getAllAllocations()\":{\"details\":\"Get all allocations\",\"returns\":{\"allocations\":\"Array of allocation details\"}},\"getAllocation(address)\":{\"details\":\"Get allocation for a specific wallet\",\"params\":{\"wallet\":\"Recipient wallet address\"},\"returns\":{\"allocation\":\"The allocation details\"}},\"getModuleType()\":{\"details\":\"Get the type of this module\",\"returns\":{\"moduleType\":\"Type identifier for this module\"}},\"getToken()\":{\"details\":\"Get the token this module is attached to\",\"returns\":{\"tokenAddress\":\"Address of the token\"}},\"initialize(address,bytes)\":{\"details\":\"Initialize the module\",\"params\":{\"data\":\"Additional initialization data (owner address)\",\"tokenAddress\":\"Address of the token this module is attached to\"}},\"modifyAllocation(address,uint256,string,bool,uint256)\":{\"details\":\"Modify an existing allocation\",\"params\":{\"amount\":\"New amount of tokens\",\"label\":\"New label\",\"locked\":\"New lock status\",\"unlockTime\":\"New unlock time\",\"wallet\":\"Recipient wallet address\"},\"returns\":{\"success\":\"Whether the allocation was successfully modified\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAllocation(address)\":{\"details\":\"Remove an allocation\",\"params\":{\"wallet\":\"Recipient wallet address to remove\"},\"returns\":{\"success\":\"Whether the allocation was successfully removed\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsFunction(bytes4)\":{\"details\":\"Check if this module has a specific function\",\"params\":{\"functionSig\":\"Function signature to check for\"},\"returns\":{\"hasFunction\":\"Whether the module implements the function\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockTokens(address)\":{\"details\":\"Unlock tokens for a wallet if the unlock time has passed\",\"params\":{\"wallet\":\"Address of the wallet to unlock tokens for\"},\"returns\":{\"success\":\"Whether the tokens were successfully unlocked\"}}},\"title\":\"V4DistributionModule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/V4DistributionModule.sol\":\"V4DistributionModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSetUpgradeable {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\"},\"src/contracts/V4DistributionModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\\\";\\nimport \\\"./interfaces/IV4DistributionModule.sol\\\";\\nimport \\\"./interfaces/IV4Module.sol\\\";\\nimport \\\"./interfaces/IV4TokenBase.sol\\\";\\n\\n/**\\n * @title V4DistributionModule\\n * @dev Implementation of distribution module with allocation capabilities\\n */\\ncontract V4DistributionModule is \\n    Initializable, \\n    OwnableUpgradeable, \\n    IV4DistributionModule,\\n    IV4Module\\n{\\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\\n    \\n    // Token this module is attached to\\n    address private _token;\\n    \\n    // Allocation tracking\\n    EnumerableSetUpgradeable.AddressSet private _allocationWallets;\\n    mapping(address => Allocation) private _allocations;\\n    uint256 private _totalAllocated;\\n    bool private _distributionExecuted;\\n    \\n    // Version info\\n    string public constant VERSION = \\\"4.0.0\\\";\\n    \\n    // Events\\n    event AllocationAdded(address indexed wallet, uint256 amount, string label, bool locked, uint256 unlockTime);\\n    event AllocationRemoved(address indexed wallet);\\n    event AllocationModified(address indexed wallet, uint256 amount, string label, bool locked, uint256 unlockTime);\\n    event DistributionExecuted(uint256 totalDistributed, uint256 walletCount);\\n    event TokensUnlocked(address indexed wallet, uint256 amount);\\n    \\n    /**\\n     * @dev Constructor that disables initialization on the implementation contract\\n     */\\n    constructor() {\\n        _disableInitializers();\\n    }\\n    \\n    /**\\n     * @dev Initialize the module\\n     * @param tokenAddress Address of the token this module is attached to\\n     * @param data Additional initialization data (owner address)\\n     */\\n    function initialize(address tokenAddress, bytes calldata data) external override initializer {\\n        require(data.length == 32, \\\"V4DistributionModule: invalid initialization data\\\");\\n        address owner = address(uint160(uint256(bytes32(data))));\\n        __Ownable_init();\\n        _transferOwnership(owner);\\n        \\n        require(tokenAddress != address(0), \\\"V4DistributionModule: token address cannot be zero\\\");\\n        _token = tokenAddress;\\n    }\\n    \\n    /**\\n     * @dev Get the type of this module\\n     * @return moduleType Type identifier for this module\\n     */\\n    function getModuleType() external pure override returns (bytes32 moduleType) {\\n        return keccak256(\\\"DISTRIBUTION_MODULE\\\");\\n    }\\n    \\n    /**\\n     * @dev Check if this module has a specific function\\n     * @param functionSig Function signature to check for\\n     * @return hasFunction Whether the module implements the function\\n     */\\n    function supportsFunction(bytes4 functionSig) external pure override returns (bool hasFunction) {\\n        return \\n            functionSig == IV4DistributionModule.addAllocation.selector ||\\n            functionSig == IV4DistributionModule.addMultipleAllocations.selector ||\\n            functionSig == IV4DistributionModule.removeAllocation.selector ||\\n            functionSig == IV4DistributionModule.modifyAllocation.selector ||\\n            functionSig == IV4DistributionModule.getAllAllocations.selector ||\\n            functionSig == IV4DistributionModule.getAllocation.selector ||\\n            functionSig == IV4DistributionModule.executeDistribution.selector ||\\n            functionSig == IV4DistributionModule.unlockTokens.selector;\\n    }\\n    \\n    /**\\n     * @dev Get the token this module is attached to\\n     * @return tokenAddress Address of the token\\n     */\\n    function getToken() external view override returns (address tokenAddress) {\\n        return _token;\\n    }\\n    \\n    /**\\n     * @dev Add a new allocation\\n     * @param wallet Recipient wallet address\\n     * @param amount Amount of tokens to allocate\\n     * @param label Optional label for this allocation (e.g. \\\"Team\\\", \\\"Marketing\\\")\\n     * @param locked Whether the allocation should be time-locked\\n     * @param unlockTime Timestamp when tokens become unlocked (0 if not locked)\\n     * @return success Whether the allocation was successfully added\\n     */\\n    function addAllocation(\\n        address wallet, \\n        uint256 amount, \\n        string calldata label,\\n        bool locked,\\n        uint256 unlockTime\\n    ) external override onlyOwner returns (bool success) {\\n        require(!_distributionExecuted, \\\"V4DistributionModule: distribution already executed\\\");\\n        require(wallet != address(0), \\\"V4DistributionModule: wallet cannot be zero address\\\");\\n        require(amount > 0, \\\"V4DistributionModule: amount must be greater than zero\\\");\\n        require(!_allocationWallets.contains(wallet), \\\"V4DistributionModule: wallet already has allocation\\\");\\n        \\n        if (locked) {\\n            require(unlockTime > block.timestamp, \\\"V4DistributionModule: unlock time must be in the future\\\");\\n        }\\n        \\n        _allocations[wallet] = Allocation({\\n            wallet: wallet,\\n            amount: amount,\\n            label: label,\\n            locked: locked,\\n            unlockTime: locked ? unlockTime : 0\\n        });\\n        \\n        _allocationWallets.add(wallet);\\n        _totalAllocated += amount;\\n        \\n        emit AllocationAdded(wallet, amount, label, locked, unlockTime);\\n        return true;\\n    }\\n    \\n    /**\\n     * @dev Add multiple allocations at once\\n     * @param wallets Array of recipient wallet addresses\\n     * @param amounts Array of token amounts\\n     * @param labels Array of labels\\n     * @param lockStatus Array of lock statuses\\n     * @param unlockTimes Array of unlock times\\n     * @return success Whether all allocations were successfully added\\n     */\\n    function addMultipleAllocations(\\n        address[] calldata wallets,\\n        uint256[] calldata amounts,\\n        string[] calldata labels,\\n        bool[] calldata lockStatus,\\n        uint256[] calldata unlockTimes\\n    ) external override onlyOwner returns (bool success) {\\n        require(!_distributionExecuted, \\\"V4DistributionModule: distribution already executed\\\");\\n        require(\\n            wallets.length == amounts.length && \\n            wallets.length == labels.length && \\n            wallets.length == lockStatus.length && \\n            wallets.length == unlockTimes.length,\\n            \\\"V4DistributionModule: array lengths must match\\\"\\n        );\\n        \\n        for (uint256 i = 0; i < wallets.length; i++) {\\n            require(wallets[i] != address(0), \\\"V4DistributionModule: wallet cannot be zero address\\\");\\n            require(amounts[i] > 0, \\\"V4DistributionModule: amount must be greater than zero\\\");\\n            require(!_allocationWallets.contains(wallets[i]), \\\"V4DistributionModule: wallet already has allocation\\\");\\n            \\n            if (lockStatus[i]) {\\n                require(unlockTimes[i] > block.timestamp, \\\"V4DistributionModule: unlock time must be in the future\\\");\\n            }\\n            \\n            _allocations[wallets[i]] = Allocation({\\n                wallet: wallets[i],\\n                amount: amounts[i],\\n                label: labels[i],\\n                locked: lockStatus[i],\\n                unlockTime: lockStatus[i] ? unlockTimes[i] : 0\\n            });\\n            \\n            _allocationWallets.add(wallets[i]);\\n            _totalAllocated += amounts[i];\\n            \\n            emit AllocationAdded(wallets[i], amounts[i], labels[i], lockStatus[i], unlockTimes[i]);\\n        }\\n        \\n        return true;\\n    }\\n    \\n    /**\\n     * @dev Remove an allocation\\n     * @param wallet Recipient wallet address to remove\\n     * @return success Whether the allocation was successfully removed\\n     */\\n    function removeAllocation(address wallet) external override onlyOwner returns (bool success) {\\n        require(!_distributionExecuted, \\\"V4DistributionModule: distribution already executed\\\");\\n        require(_allocationWallets.contains(wallet), \\\"V4DistributionModule: wallet does not have allocation\\\");\\n        \\n        uint256 amount = _allocations[wallet].amount;\\n        _totalAllocated -= amount;\\n        \\n        delete _allocations[wallet];\\n        _allocationWallets.remove(wallet);\\n        \\n        emit AllocationRemoved(wallet);\\n        return true;\\n    }\\n    \\n    /**\\n     * @dev Modify an existing allocation\\n     * @param wallet Recipient wallet address\\n     * @param amount New amount of tokens\\n     * @param label New label\\n     * @param locked New lock status\\n     * @param unlockTime New unlock time\\n     * @return success Whether the allocation was successfully modified\\n     */\\n    function modifyAllocation(\\n        address wallet,\\n        uint256 amount,\\n        string calldata label,\\n        bool locked,\\n        uint256 unlockTime\\n    ) external override onlyOwner returns (bool success) {\\n        require(!_distributionExecuted, \\\"V4DistributionModule: distribution already executed\\\");\\n        require(_allocationWallets.contains(wallet), \\\"V4DistributionModule: wallet does not have allocation\\\");\\n        require(amount > 0, \\\"V4DistributionModule: amount must be greater than zero\\\");\\n        \\n        if (locked) {\\n            require(unlockTime > block.timestamp, \\\"V4DistributionModule: unlock time must be in the future\\\");\\n        }\\n        \\n        _totalAllocated = _totalAllocated - _allocations[wallet].amount + amount;\\n        \\n        _allocations[wallet] = Allocation({\\n            wallet: wallet,\\n            amount: amount,\\n            label: label,\\n            locked: locked,\\n            unlockTime: locked ? unlockTime : 0\\n        });\\n        \\n        emit AllocationModified(wallet, amount, label, locked, unlockTime);\\n        return true;\\n    }\\n    \\n    /**\\n     * @dev Get all allocations\\n     * @return allocations Array of allocation details\\n     */\\n    function getAllAllocations() external view override returns (Allocation[] memory allocations) {\\n        uint256 count = _allocationWallets.length();\\n        allocations = new Allocation[](count);\\n        \\n        for (uint256 i = 0; i < count; i++) {\\n            address wallet = _allocationWallets.at(i);\\n            allocations[i] = _allocations[wallet];\\n        }\\n        \\n        return allocations;\\n    }\\n    \\n    /**\\n     * @dev Get allocation for a specific wallet\\n     * @param wallet Recipient wallet address\\n     * @return allocation The allocation details\\n     */\\n    function getAllocation(address wallet) external view override returns (Allocation memory allocation) {\\n        require(_allocationWallets.contains(wallet), \\\"V4DistributionModule: wallet does not have allocation\\\");\\n        return _allocations[wallet];\\n    }\\n    \\n    /**\\n     * @dev Execute the distribution\\n     * @return success Whether the distribution was successfully executed\\n     */\\n    function executeDistribution() external override onlyOwner returns (bool success) {\\n        require(!_distributionExecuted, \\\"V4DistributionModule: distribution already executed\\\");\\n        require(_allocationWallets.length() > 0, \\\"V4DistributionModule: no allocations to distribute\\\");\\n        \\n        _distributionExecuted = true;\\n        uint256 walletCount = _allocationWallets.length();\\n        \\n        // Transfer tokens to each wallet\\n        for (uint256 i = 0; i < walletCount; i++) {\\n            address wallet = _allocationWallets.at(i);\\n            Allocation storage allocation = _allocations[wallet];\\n            \\n            // If tokens are locked, they stay in this contract until unlocked\\n            if (allocation.locked) {\\n                // Request tokens from the token contract to this module\\n                bytes memory mintData = abi.encodeWithSignature(\\n                    \\\"mint(address,uint256)\\\",\\n                    address(this),\\n                    allocation.amount\\n                );\\n                IV4TokenBase(_token).executeFromModule(_token, mintData);\\n            } else {\\n                // Mint directly to the recipient\\n                bytes memory mintData = abi.encodeWithSignature(\\n                    \\\"mint(address,uint256)\\\",\\n                    wallet,\\n                    allocation.amount\\n                );\\n                IV4TokenBase(_token).executeFromModule(_token, mintData);\\n            }\\n        }\\n        \\n        emit DistributionExecuted(_totalAllocated, walletCount);\\n        return true;\\n    }\\n    \\n    /**\\n     * @dev Unlock tokens for a wallet if the unlock time has passed\\n     * @param wallet Address of the wallet to unlock tokens for\\n     * @return success Whether the tokens were successfully unlocked\\n     */\\n    function unlockTokens(address wallet) external override returns (bool success) {\\n        require(_distributionExecuted, \\\"V4DistributionModule: distribution not yet executed\\\");\\n        require(_allocationWallets.contains(wallet), \\\"V4DistributionModule: wallet does not have allocation\\\");\\n        \\n        Allocation storage allocation = _allocations[wallet];\\n        require(allocation.locked, \\\"V4DistributionModule: allocation is not locked\\\");\\n        require(block.timestamp >= allocation.unlockTime, \\\"V4DistributionModule: tokens are still locked\\\");\\n        \\n        // Transfer tokens to the recipient\\n        (bool transferSuccess,) = _token.call(\\n            abi.encodeWithSignature(\\n                \\\"transfer(address,uint256)\\\",\\n                wallet,\\n                allocation.amount\\n            )\\n        );\\n        require(transferSuccess, \\\"V4DistributionModule: token transfer failed\\\");\\n        \\n        // Mark as unlocked\\n        allocation.locked = false;\\n        \\n        emit TokensUnlocked(wallet, allocation.amount);\\n        return true;\\n    }\\n} \",\"keccak256\":\"0x1916f25b633a54bb6b62ea33919a896407865df57312b654f93854e79cc422d3\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4DistributionModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4DistributionModule\\n * @dev Interface for the distribution module with allocation capabilities\\n */\\ninterface IV4DistributionModule {\\n    /**\\n     * @dev Struct for each allocation entry\\n     */\\n    struct Allocation {\\n        address wallet;\\n        uint256 amount;\\n        string label;\\n        bool locked;\\n        uint256 unlockTime;\\n    }\\n    \\n    /**\\n     * @dev Add a new allocation\\n     * @param wallet Recipient wallet address\\n     * @param amount Amount of tokens to allocate\\n     * @param label Optional label for this allocation (e.g. \\\"Team\\\", \\\"Marketing\\\")\\n     * @param locked Whether the allocation should be time-locked\\n     * @param unlockTime Timestamp when tokens become unlocked (0 if not locked)\\n     * @return success Whether the allocation was successfully added\\n     */\\n    function addAllocation(\\n        address wallet, \\n        uint256 amount, \\n        string calldata label,\\n        bool locked,\\n        uint256 unlockTime\\n    ) external returns (bool success);\\n    \\n    /**\\n     * @dev Add multiple allocations at once\\n     * @param wallets Array of recipient wallet addresses\\n     * @param amounts Array of token amounts\\n     * @param labels Array of labels\\n     * @param lockStatus Array of lock statuses\\n     * @param unlockTimes Array of unlock times\\n     * @return success Whether all allocations were successfully added\\n     */\\n    function addMultipleAllocations(\\n        address[] calldata wallets,\\n        uint256[] calldata amounts,\\n        string[] calldata labels,\\n        bool[] calldata lockStatus,\\n        uint256[] calldata unlockTimes\\n    ) external returns (bool success);\\n    \\n    /**\\n     * @dev Remove an allocation\\n     * @param wallet Recipient wallet address to remove\\n     * @return success Whether the allocation was successfully removed\\n     */\\n    function removeAllocation(address wallet) external returns (bool success);\\n    \\n    /**\\n     * @dev Modify an existing allocation\\n     * @param wallet Recipient wallet address\\n     * @param amount New amount of tokens\\n     * @param label New label\\n     * @param locked New lock status\\n     * @param unlockTime New unlock time\\n     * @return success Whether the allocation was successfully modified\\n     */\\n    function modifyAllocation(\\n        address wallet,\\n        uint256 amount,\\n        string calldata label,\\n        bool locked,\\n        uint256 unlockTime\\n    ) external returns (bool success);\\n    \\n    /**\\n     * @dev Get all allocations\\n     * @return allocations Array of allocation details\\n     */\\n    function getAllAllocations() external view returns (Allocation[] memory allocations);\\n    \\n    /**\\n     * @dev Get allocation for a specific wallet\\n     * @param wallet Recipient wallet address\\n     * @return allocation The allocation details\\n     */\\n    function getAllocation(address wallet) external view returns (Allocation memory allocation);\\n    \\n    /**\\n     * @dev Execute the distribution\\n     * @return success Whether the distribution was successfully executed\\n     */\\n    function executeDistribution() external returns (bool success);\\n    \\n    /**\\n     * @dev Unlock tokens for a wallet if the unlock time has passed\\n     * @param wallet Address of the wallet to unlock tokens for\\n     * @return success Whether the tokens were successfully unlocked\\n     */\\n    function unlockTokens(address wallet) external returns (bool success);\\n} \",\"keccak256\":\"0x335e3df8483c8a9abd7e98f6fcc02a102080f8e216ba2fd928ea0c9633bb6810\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4Module.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4Module\\n * @dev Interface for all V4 modules\\n */\\ninterface IV4Module {\\n    /**\\n     * @dev Initialize the module\\n     * @param tokenAddress Address of the token this module is attached to\\n     * @param data Additional initialization data\\n     */\\n    function initialize(address tokenAddress, bytes calldata data) external;\\n    \\n    /**\\n     * @dev Get the type of this module\\n     * @return moduleType Type identifier for this module\\n     */\\n    function getModuleType() external pure returns (bytes32);\\n    \\n    /**\\n     * @dev Check if this module has a specific function\\n     * @param functionSig Function signature to check for\\n     * @return hasFunction Whether the module implements the function\\n     */\\n    function supportsFunction(bytes4 functionSig) external pure returns (bool);\\n    \\n    /**\\n     * @dev Get the token this module is attached to\\n     * @return tokenAddress Address of the token\\n     */\\n    function getToken() external view returns (address);\\n} \",\"keccak256\":\"0xbfa89c396644cc001c310540892c7b0156d548f31e610cc02fd3239fc732fd71\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4TokenBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4TokenBase\\n * @dev Interface for the V4 token base\\n */\\ninterface IV4TokenBase {\\n    /**\\n     * @dev Initialize the token with basic parameters\\n     * @param name_ Token name\\n     * @param symbol_ Token symbol\\n     * @param initialSupply Initial supply to mint\\n     * @param owner_ Address that will receive the initial supply and become the owner\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupply,\\n        address owner_\\n    ) external;\\n    \\n    /**\\n     * @dev Add a module to the token\\n     * @param moduleAddress Address of the module to add\\n     * @param data Initialization data for the module\\n     * @return success Whether the module was successfully added\\n     */\\n    function addModule(address moduleAddress, bytes calldata data) external returns (bool);\\n    \\n    /**\\n     * @dev Remove a module from the token\\n     * @param moduleAddress Address of the module to remove\\n     * @return success Whether the module was successfully removed\\n     */\\n    function removeModule(address moduleAddress) external returns (bool);\\n    \\n    /**\\n     * @dev Check if a module is active\\n     * @param moduleAddress Address of the module to check\\n     * @return isActive Whether the module is active\\n     */\\n    function isModuleActive(address moduleAddress) external view returns (bool);\\n    \\n    /**\\n     * @dev Get all active modules\\n     * @return modules Array of active module addresses\\n     */\\n    function getModules() external view returns (address[] memory);\\n    \\n    /**\\n     * @dev Execute a function call from a module\\n     * @param target Target address for the call\\n     * @param data Call data\\n     * @return success Whether the call was successful\\n     * @return returnData Data returned by the call\\n     */\\n    function executeFromModule(address target, bytes calldata data) external returns (bool, bytes memory);\\n    \\n    /**\\n     * @dev Pause the token\\n     */\\n    function pause() external;\\n    \\n    /**\\n     * @dev Unpause the token\\n     */\\n    function unpause() external;\\n    \\n    /**\\n     * @dev Transfer ownership of the token\\n     * @param newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) external;\\n\\n    /**\\n     * @dev Get the current owner of the token\\n     * @return The address of the current owner\\n     */\\n    function owner() external view returns (address);\\n} \",\"keccak256\":\"0xdef03abd1361f901042d1e4fbd58ca222d1956f036d593e5278ba00e3875b9d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1525,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":11,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":131,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":3283,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_token","offset":0,"slot":"101","type":"t_address"},{"astId":3286,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_allocationWallets","offset":0,"slot":"102","type":"t_struct(AddressSet)1852_storage"},{"astId":3291,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_allocations","offset":0,"slot":"104","type":"t_mapping(t_address,t_struct(Allocation)5242_storage)"},{"astId":3293,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_totalAllocated","offset":0,"slot":"105","type":"t_uint256"},{"astId":3295,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_distributionExecuted","offset":0,"slot":"106","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_struct(Allocation)5242_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct IV4DistributionModule.Allocation)","numberOfBytes":"32","value":"t_struct(Allocation)5242_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AddressSet)1852_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.AddressSet","members":[{"astId":1851,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)1537_storage"}],"numberOfBytes":"64"},"t_struct(Allocation)5242_storage":{"encoding":"inplace","label":"struct IV4DistributionModule.Allocation","members":[{"astId":5233,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"wallet","offset":0,"slot":"0","type":"t_address"},{"astId":5235,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":5237,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"label","offset":0,"slot":"2","type":"t_string_storage"},{"astId":5239,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"locked","offset":0,"slot":"3","type":"t_bool"},{"astId":5241,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"unlockTime","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_struct(Set)1537_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":1532,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":1536,"contract":"src/contracts/V4DistributionModule.sol:V4DistributionModule","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/V4Factory.sol":{"V4Factory":{"abi":[{"inputs":[{"internalType":"address","name":"owner_","type":"address"},{"internalType":"address","name":"tokenImpl_","type":"address"},{"internalType":"address","name":"securityModuleImpl_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"TokenCreated","type":"event"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"createToken","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"securityModuleBeacon","outputs":[{"internalType":"contract UpgradeableBeacon","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"securityModuleImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenBeacon","outputs":[{"internalType":"contract UpgradeableBeacon","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Factory for creating V4 tokens with modular architecture","kind":"dev","methods":{"constructor":{"details":"Initialize the factory with implementation contracts","params":{"owner_":"The owner of the factory","securityModuleImpl_":"The security module implementation address","tokenImpl_":"The token implementation address"}},"createToken(string,string,uint256,address)":{"details":"Create a new V4 token with default modules","params":{"initialSupply":"Initial supply to mint","name":"Token name","owner":"Owner of the new token","symbol":"Token symbol"},"returns":{"tokenAddress":"Address of the newly created token"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"V4Factory","version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":569,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":528,"id":null,"parameterSlots":1,"returnSlots":0},"fun_transferOwnership":{"entryPoint":589,"id":2251,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60803461020b57601f620014e638819003918201601f19168301926000926001600160401b0392838611838710176101f75781606092849260409889528339810103126101f35761004f81610239565b916100678561006060208501610239565b9301610239565b906100713361024d565b61007a8461024d565b60018060a01b03809316908360018060a01b0319938385600154161760015516836002541617600255865161045a90818101818110848211176101d557816020916200108c9685888439815203019088f080156101e957851684600354161760035584600254169088519381850193858510908511176101d557916020939185938439815203019085f080156101cb578216906004541617600455806003541690813b156101aa5784518481602481838663f2fde38b60e01b998a845216978860048401525af180156101c1576101ae575b506004541691823b156101aa5790602484928387519586948593845260048401525af180156101a057610189575b8251610df79081620002958239f35b6101938291610210565b61019d578061017a565b80fd5b83513d84823e3d90fd5b8380fd5b6101ba90949194610210565b923861014c565b86513d87823e3d90fd5b85513d86823e3d90fd5b634e487b7160e01b89526041600452602489fd5b88513d89823e3d90fd5b8280fd5b634e487b7160e01b85526041600452602485fd5b600080fd5b6001600160401b03811161022357604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361020b57565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe60806040818152600490813610156200001757600080fd5b600092833560e01c9081632f3a3d5d14620005af5750806334f359f91462000266578063715018a614620002055780638008334c14620001da5780638da5cb5b14620001b05780639651d0a81462000186578063ccf5a77c14620001575763f2fde38b146200008557600080fd5b346200015357602036600319011262000153576001600160a01b038235818116939192908490036200014f57620000bb620006f6565b8315620000fd57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b838234620001825781600319360112620001825760035490516001600160a01b039091168152602090f35b5080fd5b50903462000153578260031936011262000153575490516001600160a01b03909116815260209150f35b8382346200018257816003193601126200018257905490516001600160a01b039091168152602090f35b838234620001825781600319360112620001825760025490516001600160a01b039091168152602090f35b8334620002635780600319360112620002635762000222620006f6565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50913462000263576080366003190112620002635767ffffffffffffffff92823584811162000153576200029e90369085016200062c565b9260249384358681116200014f57620002bb90369084016200062c565b6001600160a01b0395606435878116949190859003620005ab57855196602098635e9d09fb60e11b8a8a01526080838a01528a89620003156200030260a483018a6200068d565b828103602319016044840152886200068d565b6044356064830152896084830152039962000339601f199b8c810183528262000609565b8260035416908a5190610672928383019483861090861117620005995782916200036c91620007509686888639620006cf565b039085f080156200058f5790838d92169b8a8c51938401528d83526200039283620005d6565b8d8d8d5194859263347d5e2560e21b9084015289830191620003b492620006cf565b039081018352620003c6908362000609565b8d84885416918c519481860192868410908411176200057d5791620003f193918695938639620006cf565b039083f080156200052f571692818a620004368b8b518b848201528381526200041a81620005d6565b8c51948580948193630b74e9e360e21b83528c8a8401620006cf565b03925af18015620005735762000539575b50883b15620001825787519363f2fde38b60e01b85528185015281848481838d5af19a8b156200052f57899a9b99979899620004d7575b50505050507f6596c1670eb3390048d23721809c3da5d3f531375ac0e2cab0f77a808ed6433191620004ce620004c0928751938493898552898501906200068d565b908382038b8501526200068d565b0390a351908152f35b909192938095969750116200051f57505050845284919081620004ce620004c07f6596c1670eb3390048d23721809c3da5d3f531375ac0e2cab0f77a808ed64331386200047e565b634e487b7160e01b825260419052fd5b88513d84823e3d90fd5b8a81813d83116200056b575b62000551818362000609565b810103126200015357518015150362000182573862000447565b503d62000545565b89513d85823e3d90fd5b634e487b7160e01b885260418a528888fd5b8a513d86823e3d90fd5b634e487b7160e01b8752604189528787fd5b8680fd5b84903462000182578160031936011262000182576001546001600160a01b03168152602090f35b6040810190811067ffffffffffffffff821117620005f357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117620005f357604052565b81601f82011215620006885780359067ffffffffffffffff8211620005f3576040519262000665601f8401601f19166020018562000609565b828452602083830101116200068857816000926020809301838601378301015290565b600080fd5b919082519283825260005b848110620006ba575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520162000698565b6001600160a01b039091168152604060208201819052620006f3929101906200068d565b90565b6000546001600160a01b031633036200070b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60806040908082526106728038038091610019828561034d565b8339810190828183031261023f5761003081610370565b6020828101516001600160401b039391929184821161023f57019084601f8301121561023f5781519161006283610384565b9261006f8851948561034d565b8084528484019685828401011161023f57868561008c930161039f565b803b156102fb578551635c60da1b60e01b80825292916001600160a01b0316908481600481855afa9081156102f0576000916102bb575b503b1561025e577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b03191682179055865192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e600080a2825115801590610256575b610142575b87516101fc90816104768239f35b6004848693819382525afa91821561024b5760009261020f575b5085519360608501908111858210176101f9578652602784527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c83850152660819985a5b195960ca1b84870152516101e3946000918291845af4903d156101f0573d6101c781610384565b906101d48851928361034d565b8152600081943d92013e6103c2565b5038808080808080610134565b606092506103c2565b634e487b7160e01b600052604160045260246000fd5b9091508281813d8311610244575b610227818361034d565b8101031261023f5761023890610370565b903861015c565b600080fd5b503d61021d565b86513d6000823e3d90fd5b50600061012f565b865162461bcd60e51b815260048101859052603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b90508481813d83116102e9575b6102d2818361034d565b8101031261023f576102e390610370565b386100c3565b503d6102c8565b88513d6000823e3d90fd5b855162461bcd60e51b815260048101849052602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b601f909101601f19168101906001600160401b038211908210176101f957604052565b51906001600160a01b038216820361023f57565b6001600160401b0381116101f957601f01601f191660200190565b60005b8381106103b25750506000910152565b81810151838201526020016103a2565b9192901561042457508151156103d6575090565b3b156103df5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156104375750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610467815180928160248601526020868601910161039f565b601f01601f19168101030190fdfe608080604052366100c7577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100bb57600091610060575b506101a7565b905060203d6020116100b4575b601f8101601f191682019167ffffffffffffffff83118184101761009e576100989260405201610161565b3861005a565b634e487b7160e01b600052604160045260246000fd5b503d61006d565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100bb5760009161012057506101a7565b602091503d8211610159575b601f8201601f191681019167ffffffffffffffff83118284101761009e5761009892604052810190610188565b3d915061012c565b602090607f190112610183576080516001600160a01b03811681036101835790565b600080fd5b9081602091031261018357516001600160a01b03811681036101835790565b6000808092368280378136915af43d82803e156101c2573d90f35b3d90fdfea264697066735822122054f1b4463bccdc05c56deee162ca6730ff9d30ee0b3fc732b7a0d6a6da3ea58564736f6c63430008160033a2646970667358221220850cc53779db42882ce413ef85b141cbffdab9f9a7775c49e32d8935891a8b0864736f6c6343000816003360803461011a57601f61045a38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b25750600154161760015560405161032490816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146101c75780635c60da1b1461019e578063715018a6146101445780638da5cb5b1461011d5763f2fde38b1461005457600080fd5b3461011a57602036600319011261011a576004356001600160a01b038181169182900361011657610083610296565b81156100c25782546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b8280fd5b80fd5b503461011a578060031936011261011a57546040516001600160a01b039091168152602090f35b503461011a578060031936011261011a5761015d610296565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461011a578060031936011261011a576001546040516001600160a01b039091168152602090f35b503461011a57602036600319011261011a576004356001600160a01b03811690818103610116576101f6610296565b3b1561023557600180546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60405162461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6044820152721b881a5cc81b9bdd08184818dbdb9d1c9858dd606a1b6064820152608490fd5b6000546001600160a01b031633036102aa57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c17a697fa218ab66e1832a9cb889fea738e8787d12399361a9390095dd8fa1f464736f6c63430008160033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x20B JUMPI PUSH1 0x1F PUSH3 0x14E6 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP7 GT DUP4 DUP8 LT OR PUSH2 0x1F7 JUMPI DUP2 PUSH1 0x60 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP9 DUP10 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x1F3 JUMPI PUSH2 0x4F DUP2 PUSH2 0x239 JUMP JUMPDEST SWAP2 PUSH2 0x67 DUP6 PUSH2 0x60 PUSH1 0x20 DUP6 ADD PUSH2 0x239 JUMP JUMPDEST SWAP4 ADD PUSH2 0x239 JUMP JUMPDEST SWAP1 PUSH2 0x71 CALLER PUSH2 0x24D JUMP JUMPDEST PUSH2 0x7A DUP5 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP1 DUP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP4 DUP6 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE AND DUP4 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP7 MLOAD PUSH2 0x45A SWAP1 DUP2 DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP2 PUSH3 0x108C SWAP7 DUP6 DUP9 DUP5 CODECOPY DUP2 MSTORE SUB ADD SWAP1 DUP9 CREATE DUP1 ISZERO PUSH2 0x1E9 JUMPI DUP6 AND DUP5 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE DUP5 PUSH1 0x2 SLOAD AND SWAP1 DUP9 MLOAD SWAP4 DUP2 DUP6 ADD SWAP4 DUP6 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0x1D5 JUMPI SWAP2 PUSH1 0x20 SWAP4 SWAP2 DUP6 SWAP4 DUP5 CODECOPY DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0x1CB JUMPI DUP3 AND SWAP1 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP1 PUSH1 0x3 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x1AA JUMPI DUP5 MLOAD DUP5 DUP2 PUSH1 0x24 DUP2 DUP4 DUP7 PUSH4 0xF2FDE38B PUSH1 0xE0 SHL SWAP10 DUP11 DUP5 MSTORE AND SWAP8 DUP9 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH2 0x1AE JUMPI JUMPDEST POP PUSH1 0x4 SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x1AA JUMPI SWAP1 PUSH1 0x24 DUP5 SWAP3 DUP4 DUP8 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH2 0x189 JUMPI JUMPDEST DUP3 MLOAD PUSH2 0xDF7 SWAP1 DUP2 PUSH3 0x295 DUP3 CODECOPY RETURN JUMPDEST PUSH2 0x193 DUP3 SWAP2 PUSH2 0x210 JUMP JUMPDEST PUSH2 0x19D JUMPI DUP1 PUSH2 0x17A JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x1BA SWAP1 SWAP5 SWAP2 SWAP5 PUSH2 0x210 JUMP JUMPDEST SWAP3 CODESIZE PUSH2 0x14C JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x223 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x20B JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2F3A3D5D EQ PUSH3 0x5AF JUMPI POP DUP1 PUSH4 0x34F359F9 EQ PUSH3 0x266 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x205 JUMPI DUP1 PUSH4 0x8008334C EQ PUSH3 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x1B0 JUMPI DUP1 PUSH4 0x9651D0A8 EQ PUSH3 0x186 JUMPI DUP1 PUSH4 0xCCF5A77C EQ PUSH3 0x157 JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x153 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x153 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH3 0x14F JUMPI PUSH3 0xBB PUSH3 0x6F6 JUMP JUMPDEST DUP4 ISZERO PUSH3 0xFD JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x182 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x182 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x153 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x153 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x182 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x182 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x182 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x182 JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH3 0x263 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x263 JUMPI PUSH3 0x222 PUSH3 0x6F6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH3 0x263 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x263 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP3 CALLDATALOAD DUP5 DUP2 GT PUSH3 0x153 JUMPI PUSH3 0x29E SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH3 0x62C JUMP JUMPDEST SWAP3 PUSH1 0x24 SWAP4 DUP5 CALLDATALOAD DUP7 DUP2 GT PUSH3 0x14F JUMPI PUSH3 0x2BB SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH3 0x62C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH1 0x64 CALLDATALOAD DUP8 DUP2 AND SWAP5 SWAP2 SWAP1 DUP6 SWAP1 SUB PUSH3 0x5AB JUMPI DUP6 MLOAD SWAP7 PUSH1 0x20 SWAP9 PUSH4 0x5E9D09FB PUSH1 0xE1 SHL DUP11 DUP11 ADD MSTORE PUSH1 0x80 DUP4 DUP11 ADD MSTORE DUP11 DUP10 PUSH3 0x315 PUSH3 0x302 PUSH1 0xA4 DUP4 ADD DUP11 PUSH3 0x68D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x23 NOT ADD PUSH1 0x44 DUP5 ADD MSTORE DUP9 PUSH3 0x68D JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE DUP10 PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP10 PUSH3 0x339 PUSH1 0x1F NOT SWAP12 DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH3 0x609 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP11 MLOAD SWAP1 PUSH2 0x672 SWAP3 DUP4 DUP4 ADD SWAP5 DUP4 DUP7 LT SWAP1 DUP7 GT OR PUSH3 0x599 JUMPI DUP3 SWAP2 PUSH3 0x36C SWAP2 PUSH3 0x750 SWAP7 DUP7 DUP9 DUP7 CODECOPY PUSH3 0x6CF JUMP JUMPDEST SUB SWAP1 DUP6 CREATE DUP1 ISZERO PUSH3 0x58F JUMPI SWAP1 DUP4 DUP14 SWAP3 AND SWAP12 DUP11 DUP13 MLOAD SWAP4 DUP5 ADD MSTORE DUP14 DUP4 MSTORE PUSH3 0x392 DUP4 PUSH3 0x5D6 JUMP JUMPDEST DUP14 DUP14 DUP14 MLOAD SWAP5 DUP6 SWAP3 PUSH4 0x347D5E25 PUSH1 0xE2 SHL SWAP1 DUP5 ADD MSTORE DUP10 DUP4 ADD SWAP2 PUSH3 0x3B4 SWAP3 PUSH3 0x6CF JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE PUSH3 0x3C6 SWAP1 DUP4 PUSH3 0x609 JUMP JUMPDEST DUP14 DUP5 DUP9 SLOAD AND SWAP2 DUP13 MLOAD SWAP5 DUP2 DUP7 ADD SWAP3 DUP7 DUP5 LT SWAP1 DUP5 GT OR PUSH3 0x57D JUMPI SWAP2 PUSH3 0x3F1 SWAP4 SWAP2 DUP7 SWAP6 SWAP4 DUP7 CODECOPY PUSH3 0x6CF JUMP JUMPDEST SUB SWAP1 DUP4 CREATE DUP1 ISZERO PUSH3 0x52F JUMPI AND SWAP3 DUP2 DUP11 PUSH3 0x436 DUP12 DUP12 MLOAD DUP12 DUP5 DUP3 ADD MSTORE DUP4 DUP2 MSTORE PUSH3 0x41A DUP2 PUSH3 0x5D6 JUMP JUMPDEST DUP13 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xB74E9E3 PUSH1 0xE2 SHL DUP4 MSTORE DUP13 DUP11 DUP5 ADD PUSH3 0x6CF JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0x573 JUMPI PUSH3 0x539 JUMPI JUMPDEST POP DUP9 EXTCODESIZE ISZERO PUSH3 0x182 JUMPI DUP8 MLOAD SWAP4 PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP6 MSTORE DUP2 DUP6 ADD MSTORE DUP2 DUP5 DUP5 DUP2 DUP4 DUP14 GAS CALL SWAP11 DUP12 ISZERO PUSH3 0x52F JUMPI DUP10 SWAP11 SWAP12 SWAP10 SWAP8 SWAP9 SWAP10 PUSH3 0x4D7 JUMPI JUMPDEST POP POP POP POP POP PUSH32 0x6596C1670EB3390048D23721809C3DA5D3F531375AC0E2CAB0F77A808ED64331 SWAP2 PUSH3 0x4CE PUSH3 0x4C0 SWAP3 DUP8 MLOAD SWAP4 DUP5 SWAP4 DUP10 DUP6 MSTORE DUP10 DUP6 ADD SWAP1 PUSH3 0x68D JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB DUP12 DUP6 ADD MSTORE PUSH3 0x68D JUMP JUMPDEST SUB SWAP1 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP1 SWAP6 SWAP7 SWAP8 POP GT PUSH3 0x51F JUMPI POP POP POP DUP5 MSTORE DUP5 SWAP2 SWAP1 DUP2 PUSH3 0x4CE PUSH3 0x4C0 PUSH32 0x6596C1670EB3390048D23721809C3DA5D3F531375AC0E2CAB0F77A808ED64331 CODESIZE PUSH3 0x47E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 SWAP1 MSTORE REVERT JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x56B JUMPI JUMPDEST PUSH3 0x551 DUP2 DUP4 PUSH3 0x609 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x153 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH3 0x182 JUMPI CODESIZE PUSH3 0x447 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x545 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP11 MSTORE DUP9 DUP9 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP10 MSTORE DUP8 DUP8 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH3 0x182 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x182 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x5F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x5F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x688 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x5F3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH3 0x665 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH3 0x609 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0x688 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0x6BA JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH3 0x6F3 SWAP3 SWAP2 ADD SWAP1 PUSH3 0x68D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0x70B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH2 0x672 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x19 DUP3 DUP6 PUSH2 0x34D JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH2 0x23F JUMPI PUSH2 0x30 DUP2 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP2 SWAP3 SWAP2 DUP5 DUP3 GT PUSH2 0x23F JUMPI ADD SWAP1 DUP5 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x23F JUMPI DUP2 MLOAD SWAP2 PUSH2 0x62 DUP4 PUSH2 0x384 JUMP JUMPDEST SWAP3 PUSH2 0x6F DUP9 MLOAD SWAP5 DUP6 PUSH2 0x34D JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP5 ADD SWAP7 DUP6 DUP3 DUP5 ADD ADD GT PUSH2 0x23F JUMPI DUP7 DUP6 PUSH2 0x8C SWAP4 ADD PUSH2 0x39F JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2FB JUMPI DUP6 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2BB JUMPI JUMPDEST POP EXTCODESIZE ISZERO PUSH2 0x25E JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP7 MLOAD SWAP3 DUP2 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH1 0x0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x256 JUMPI JUMPDEST PUSH2 0x142 JUMPI JUMPDEST DUP8 MLOAD PUSH2 0x1FC SWAP1 DUP2 PUSH2 0x476 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x4 DUP5 DUP7 SWAP4 DUP2 SWAP4 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x20F JUMPI JUMPDEST POP DUP6 MLOAD SWAP4 PUSH1 0x60 DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x1F9 JUMPI DUP7 MSTORE PUSH1 0x27 DUP5 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP4 DUP6 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP5 DUP8 ADD MSTORE MLOAD PUSH2 0x1E3 SWAP5 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1F0 JUMPI RETURNDATASIZE PUSH2 0x1C7 DUP2 PUSH2 0x384 JUMP JUMPDEST SWAP1 PUSH2 0x1D4 DUP9 MLOAD SWAP3 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3C2 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x134 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x3C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x244 JUMPI JUMPDEST PUSH2 0x227 DUP2 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23F JUMPI PUSH2 0x238 SWAP1 PUSH2 0x370 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x15C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x21D JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x12F JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2E9 JUMPI JUMPDEST PUSH2 0x2D2 DUP2 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23F JUMPI PUSH2 0x2E3 SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE PUSH2 0xC3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2C8 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x1F9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1F9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3B2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A2 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x424 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x3D6 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x3DF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x437 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x467 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xC7 JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x60 JUMPI JUMPDEST POP PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x9E JUMPI PUSH2 0x98 SWAP3 PUSH1 0x40 MSTORE ADD PUSH2 0x161 JUMP JUMPDEST CODESIZE PUSH2 0x5A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x120 JUMPI POP PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x20 SWAP2 POP RETURNDATASIZE DUP3 GT PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0x9E JUMPI PUSH2 0x98 SWAP3 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x188 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12C JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x183 JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x183 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x183 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x183 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD CALL 0xB4 CHAINID EXTCODESIZE 0xCC 0xDC SDIV 0xC5 PUSH14 0xEEE162CA6730FF9D30EE0B3FC732 0xB7 LOG0 0xD6 0xA6 0xDA RETURNDATACOPY 0xA5 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xC 0xC5 CALLDATACOPY PUSH26 0xDB42882CE413EF85B141CBFFDAB9F9A7775C49E32D8935891A8B ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x1F PUSH2 0x45A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x324 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x116 JUMPI PUSH2 0x83 PUSH2 0x296 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC2 JUMPI DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH2 0x15D PUSH2 0x296 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x116 JUMPI PUSH2 0x1F6 PUSH2 0x296 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x235 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x1B881A5CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2AA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 PUSH27 0x697FA218AB66E1832A9CB889FEA738E8787D12399361A9390095DD DUP16 LOG1 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"376:3265:21:-:0;;;;;;;;;;;;;-1:-1:-1;;376:3265:21;;;;-1:-1:-1;;;;;;;376:3265:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;734:10:18;955:12:9;734:10:18;955:12:9;:::i;:::-;1451:6:21;;;:::i;:::-;376:3265;;;;;;;;;;;;;;;;;;;1477:32;376:3265;;;1477:32;376:3265;;;1519:50;376:3265;;;1519:50;376:3265;;;1602:42;;;;;;;;;;;;;;;376:3265;1602:42;;;;;;;376:3265;;1602:42;;;;;;;;;376:3265;;;1588:56;376:3265;;;1588:56;376:3265;;1519:50;376:3265;;;;;1677:51;;;;;;;;;;;;;;;376:3265;1677:51;;;;;;376:3265;;1677:51;;;;;;;;;376:3265;;;1654:74;376:3265;;;1654:74;376:3265;;1588:56;376:3265;;1747:37;;;;;;376:3265;;;;;;;;;;;1747:37;;;;376:3265;1747:37;;1654:74;1747:37;;376:3265;1747:37;;;;;;;;-1:-1:-1;376:3265:21;1654:74;376:3265;;1794:46;;;;;;376:3265;;;;;;;1794:46;;;;;;;1654:74;1794:46;;376:3265;1794:46;;;;;;;;-1:-1:-1;376:3265:21;;;;;;;;;1794:46;;;;;:::i;:::-;376:3265;;1794:46;;;376:3265;;;1794:46;376:3265;;;;;;;;;1794:46;376:3265;;;1747:37;;;;;;;:::i;:::-;;;;;;376:3265;;;;;;;;;1677:51;376:3265;;;;;;;;;1677:51;-1:-1:-1;;;376:3265:21;;;;;;;;1602:42;376:3265;;;;;;;;;;;;;;-1:-1:-1;;;376:3265:21;;;;;;;;;;;;;-1:-1:-1;;;;;376:3265:21;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:3265:21;;;;;;:::o;2426:187:9:-;2518:6;376:3265:21;;-1:-1:-1;;;;;376:3265:21;;;-1:-1:-1;;;;;;376:3265:21;;;;;;;;;2566:40:9;;2518:6;2566:40;2426:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_string":{"entryPoint":1580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_bytes":{"entryPoint":1743,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":1677,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1545,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_4148":{"entryPoint":1494,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":1782,"id":2194,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040818152600490813610156200001757600080fd5b600092833560e01c9081632f3a3d5d14620005af5750806334f359f91462000266578063715018a614620002055780638008334c14620001da5780638da5cb5b14620001b05780639651d0a81462000186578063ccf5a77c14620001575763f2fde38b146200008557600080fd5b346200015357602036600319011262000153576001600160a01b038235818116939192908490036200014f57620000bb620006f6565b8315620000fd57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b838234620001825781600319360112620001825760035490516001600160a01b039091168152602090f35b5080fd5b50903462000153578260031936011262000153575490516001600160a01b03909116815260209150f35b8382346200018257816003193601126200018257905490516001600160a01b039091168152602090f35b838234620001825781600319360112620001825760025490516001600160a01b039091168152602090f35b8334620002635780600319360112620002635762000222620006f6565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50913462000263576080366003190112620002635767ffffffffffffffff92823584811162000153576200029e90369085016200062c565b9260249384358681116200014f57620002bb90369084016200062c565b6001600160a01b0395606435878116949190859003620005ab57855196602098635e9d09fb60e11b8a8a01526080838a01528a89620003156200030260a483018a6200068d565b828103602319016044840152886200068d565b6044356064830152896084830152039962000339601f199b8c810183528262000609565b8260035416908a5190610672928383019483861090861117620005995782916200036c91620007509686888639620006cf565b039085f080156200058f5790838d92169b8a8c51938401528d83526200039283620005d6565b8d8d8d5194859263347d5e2560e21b9084015289830191620003b492620006cf565b039081018352620003c6908362000609565b8d84885416918c519481860192868410908411176200057d5791620003f193918695938639620006cf565b039083f080156200052f571692818a620004368b8b518b848201528381526200041a81620005d6565b8c51948580948193630b74e9e360e21b83528c8a8401620006cf565b03925af18015620005735762000539575b50883b15620001825787519363f2fde38b60e01b85528185015281848481838d5af19a8b156200052f57899a9b99979899620004d7575b50505050507f6596c1670eb3390048d23721809c3da5d3f531375ac0e2cab0f77a808ed6433191620004ce620004c0928751938493898552898501906200068d565b908382038b8501526200068d565b0390a351908152f35b909192938095969750116200051f57505050845284919081620004ce620004c07f6596c1670eb3390048d23721809c3da5d3f531375ac0e2cab0f77a808ed64331386200047e565b634e487b7160e01b825260419052fd5b88513d84823e3d90fd5b8a81813d83116200056b575b62000551818362000609565b810103126200015357518015150362000182573862000447565b503d62000545565b89513d85823e3d90fd5b634e487b7160e01b885260418a528888fd5b8a513d86823e3d90fd5b634e487b7160e01b8752604189528787fd5b8680fd5b84903462000182578160031936011262000182576001546001600160a01b03168152602090f35b6040810190811067ffffffffffffffff821117620005f357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117620005f357604052565b81601f82011215620006885780359067ffffffffffffffff8211620005f3576040519262000665601f8401601f19166020018562000609565b828452602083830101116200068857816000926020809301838601378301015290565b600080fd5b919082519283825260005b848110620006ba575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520162000698565b6001600160a01b039091168152604060208201819052620006f3929101906200068d565b90565b6000546001600160a01b031633036200070b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe60806040908082526106728038038091610019828561034d565b8339810190828183031261023f5761003081610370565b6020828101516001600160401b039391929184821161023f57019084601f8301121561023f5781519161006283610384565b9261006f8851948561034d565b8084528484019685828401011161023f57868561008c930161039f565b803b156102fb578551635c60da1b60e01b80825292916001600160a01b0316908481600481855afa9081156102f0576000916102bb575b503b1561025e577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b03191682179055865192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e600080a2825115801590610256575b610142575b87516101fc90816104768239f35b6004848693819382525afa91821561024b5760009261020f575b5085519360608501908111858210176101f9578652602784527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c83850152660819985a5b195960ca1b84870152516101e3946000918291845af4903d156101f0573d6101c781610384565b906101d48851928361034d565b8152600081943d92013e6103c2565b5038808080808080610134565b606092506103c2565b634e487b7160e01b600052604160045260246000fd5b9091508281813d8311610244575b610227818361034d565b8101031261023f5761023890610370565b903861015c565b600080fd5b503d61021d565b86513d6000823e3d90fd5b50600061012f565b865162461bcd60e51b815260048101859052603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b90508481813d83116102e9575b6102d2818361034d565b8101031261023f576102e390610370565b386100c3565b503d6102c8565b88513d6000823e3d90fd5b855162461bcd60e51b815260048101849052602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b601f909101601f19168101906001600160401b038211908210176101f957604052565b51906001600160a01b038216820361023f57565b6001600160401b0381116101f957601f01601f191660200190565b60005b8381106103b25750506000910152565b81810151838201526020016103a2565b9192901561042457508151156103d6575090565b3b156103df5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156104375750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610467815180928160248601526020868601910161039f565b601f01601f19168101030190fdfe608080604052366100c7577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100bb57600091610060575b506101a7565b905060203d6020116100b4575b601f8101601f191682019167ffffffffffffffff83118184101761009e576100989260405201610161565b3861005a565b634e487b7160e01b600052604160045260246000fd5b503d61006d565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100bb5760009161012057506101a7565b602091503d8211610159575b601f8201601f191681019167ffffffffffffffff83118284101761009e5761009892604052810190610188565b3d915061012c565b602090607f190112610183576080516001600160a01b03811681036101835790565b600080fd5b9081602091031261018357516001600160a01b03811681036101835790565b6000808092368280378136915af43d82803e156101c2573d90f35b3d90fdfea264697066735822122054f1b4463bccdc05c56deee162ca6730ff9d30ee0b3fc732b7a0d6a6da3ea58564736f6c63430008160033a2646970667358221220850cc53779db42882ce413ef85b141cbffdab9f9a7775c49e32d8935891a8b0864736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2F3A3D5D EQ PUSH3 0x5AF JUMPI POP DUP1 PUSH4 0x34F359F9 EQ PUSH3 0x266 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x205 JUMPI DUP1 PUSH4 0x8008334C EQ PUSH3 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x1B0 JUMPI DUP1 PUSH4 0x9651D0A8 EQ PUSH3 0x186 JUMPI DUP1 PUSH4 0xCCF5A77C EQ PUSH3 0x157 JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x153 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x153 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH3 0x14F JUMPI PUSH3 0xBB PUSH3 0x6F6 JUMP JUMPDEST DUP4 ISZERO PUSH3 0xFD JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x182 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x182 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x153 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x153 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x182 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x182 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x182 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x182 JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH3 0x263 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x263 JUMPI PUSH3 0x222 PUSH3 0x6F6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH3 0x263 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x263 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP3 CALLDATALOAD DUP5 DUP2 GT PUSH3 0x153 JUMPI PUSH3 0x29E SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH3 0x62C JUMP JUMPDEST SWAP3 PUSH1 0x24 SWAP4 DUP5 CALLDATALOAD DUP7 DUP2 GT PUSH3 0x14F JUMPI PUSH3 0x2BB SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH3 0x62C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 PUSH1 0x64 CALLDATALOAD DUP8 DUP2 AND SWAP5 SWAP2 SWAP1 DUP6 SWAP1 SUB PUSH3 0x5AB JUMPI DUP6 MLOAD SWAP7 PUSH1 0x20 SWAP9 PUSH4 0x5E9D09FB PUSH1 0xE1 SHL DUP11 DUP11 ADD MSTORE PUSH1 0x80 DUP4 DUP11 ADD MSTORE DUP11 DUP10 PUSH3 0x315 PUSH3 0x302 PUSH1 0xA4 DUP4 ADD DUP11 PUSH3 0x68D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x23 NOT ADD PUSH1 0x44 DUP5 ADD MSTORE DUP9 PUSH3 0x68D JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 DUP4 ADD MSTORE DUP10 PUSH1 0x84 DUP4 ADD MSTORE SUB SWAP10 PUSH3 0x339 PUSH1 0x1F NOT SWAP12 DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH3 0x609 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP11 MLOAD SWAP1 PUSH2 0x672 SWAP3 DUP4 DUP4 ADD SWAP5 DUP4 DUP7 LT SWAP1 DUP7 GT OR PUSH3 0x599 JUMPI DUP3 SWAP2 PUSH3 0x36C SWAP2 PUSH3 0x750 SWAP7 DUP7 DUP9 DUP7 CODECOPY PUSH3 0x6CF JUMP JUMPDEST SUB SWAP1 DUP6 CREATE DUP1 ISZERO PUSH3 0x58F JUMPI SWAP1 DUP4 DUP14 SWAP3 AND SWAP12 DUP11 DUP13 MLOAD SWAP4 DUP5 ADD MSTORE DUP14 DUP4 MSTORE PUSH3 0x392 DUP4 PUSH3 0x5D6 JUMP JUMPDEST DUP14 DUP14 DUP14 MLOAD SWAP5 DUP6 SWAP3 PUSH4 0x347D5E25 PUSH1 0xE2 SHL SWAP1 DUP5 ADD MSTORE DUP10 DUP4 ADD SWAP2 PUSH3 0x3B4 SWAP3 PUSH3 0x6CF JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE PUSH3 0x3C6 SWAP1 DUP4 PUSH3 0x609 JUMP JUMPDEST DUP14 DUP5 DUP9 SLOAD AND SWAP2 DUP13 MLOAD SWAP5 DUP2 DUP7 ADD SWAP3 DUP7 DUP5 LT SWAP1 DUP5 GT OR PUSH3 0x57D JUMPI SWAP2 PUSH3 0x3F1 SWAP4 SWAP2 DUP7 SWAP6 SWAP4 DUP7 CODECOPY PUSH3 0x6CF JUMP JUMPDEST SUB SWAP1 DUP4 CREATE DUP1 ISZERO PUSH3 0x52F JUMPI AND SWAP3 DUP2 DUP11 PUSH3 0x436 DUP12 DUP12 MLOAD DUP12 DUP5 DUP3 ADD MSTORE DUP4 DUP2 MSTORE PUSH3 0x41A DUP2 PUSH3 0x5D6 JUMP JUMPDEST DUP13 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xB74E9E3 PUSH1 0xE2 SHL DUP4 MSTORE DUP13 DUP11 DUP5 ADD PUSH3 0x6CF JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0x573 JUMPI PUSH3 0x539 JUMPI JUMPDEST POP DUP9 EXTCODESIZE ISZERO PUSH3 0x182 JUMPI DUP8 MLOAD SWAP4 PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP6 MSTORE DUP2 DUP6 ADD MSTORE DUP2 DUP5 DUP5 DUP2 DUP4 DUP14 GAS CALL SWAP11 DUP12 ISZERO PUSH3 0x52F JUMPI DUP10 SWAP11 SWAP12 SWAP10 SWAP8 SWAP9 SWAP10 PUSH3 0x4D7 JUMPI JUMPDEST POP POP POP POP POP PUSH32 0x6596C1670EB3390048D23721809C3DA5D3F531375AC0E2CAB0F77A808ED64331 SWAP2 PUSH3 0x4CE PUSH3 0x4C0 SWAP3 DUP8 MLOAD SWAP4 DUP5 SWAP4 DUP10 DUP6 MSTORE DUP10 DUP6 ADD SWAP1 PUSH3 0x68D JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB DUP12 DUP6 ADD MSTORE PUSH3 0x68D JUMP JUMPDEST SUB SWAP1 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP1 SWAP6 SWAP7 SWAP8 POP GT PUSH3 0x51F JUMPI POP POP POP DUP5 MSTORE DUP5 SWAP2 SWAP1 DUP2 PUSH3 0x4CE PUSH3 0x4C0 PUSH32 0x6596C1670EB3390048D23721809C3DA5D3F531375AC0E2CAB0F77A808ED64331 CODESIZE PUSH3 0x47E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 SWAP1 MSTORE REVERT JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x56B JUMPI JUMPDEST PUSH3 0x551 DUP2 DUP4 PUSH3 0x609 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x153 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH3 0x182 JUMPI CODESIZE PUSH3 0x447 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x545 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP11 MSTORE DUP9 DUP9 REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP10 MSTORE DUP8 DUP8 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH3 0x182 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x182 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x5F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x5F3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x688 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0x5F3 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH3 0x665 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH3 0x609 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0x688 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0x6BA JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH3 0x6F3 SWAP3 SWAP2 ADD SWAP1 PUSH3 0x68D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0x70B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH2 0x672 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x19 DUP3 DUP6 PUSH2 0x34D JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 DUP3 DUP2 DUP4 SUB SLT PUSH2 0x23F JUMPI PUSH2 0x30 DUP2 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 SWAP2 SWAP3 SWAP2 DUP5 DUP3 GT PUSH2 0x23F JUMPI ADD SWAP1 DUP5 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x23F JUMPI DUP2 MLOAD SWAP2 PUSH2 0x62 DUP4 PUSH2 0x384 JUMP JUMPDEST SWAP3 PUSH2 0x6F DUP9 MLOAD SWAP5 DUP6 PUSH2 0x34D JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP5 ADD SWAP7 DUP6 DUP3 DUP5 ADD ADD GT PUSH2 0x23F JUMPI DUP7 DUP6 PUSH2 0x8C SWAP4 ADD PUSH2 0x39F JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2FB JUMPI DUP6 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2BB JUMPI JUMPDEST POP EXTCODESIZE ISZERO PUSH2 0x25E JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP7 MLOAD SWAP3 DUP2 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E PUSH1 0x0 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x256 JUMPI JUMPDEST PUSH2 0x142 JUMPI JUMPDEST DUP8 MLOAD PUSH2 0x1FC SWAP1 DUP2 PUSH2 0x476 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x4 DUP5 DUP7 SWAP4 DUP2 SWAP4 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x20F JUMPI JUMPDEST POP DUP6 MLOAD SWAP4 PUSH1 0x60 DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH2 0x1F9 JUMPI DUP7 MSTORE PUSH1 0x27 DUP5 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP4 DUP6 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP5 DUP8 ADD MSTORE MLOAD PUSH2 0x1E3 SWAP5 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1F0 JUMPI RETURNDATASIZE PUSH2 0x1C7 DUP2 PUSH2 0x384 JUMP JUMPDEST SWAP1 PUSH2 0x1D4 DUP9 MLOAD SWAP3 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3C2 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x134 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x3C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x244 JUMPI JUMPDEST PUSH2 0x227 DUP2 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23F JUMPI PUSH2 0x238 SWAP1 PUSH2 0x370 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x15C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x21D JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x12F JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2E9 JUMPI JUMPDEST PUSH2 0x2D2 DUP2 DUP4 PUSH2 0x34D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23F JUMPI PUSH2 0x2E3 SWAP1 PUSH2 0x370 JUMP JUMPDEST CODESIZE PUSH2 0xC3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2C8 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x1F9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1F9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3B2 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3A2 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x424 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x3D6 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x3DF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x437 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x467 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0xC7 JUMPI PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x60 JUMPI JUMPDEST POP PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x9E JUMPI PUSH2 0x98 SWAP3 PUSH1 0x40 MSTORE ADD PUSH2 0x161 JUMP JUMPDEST CODESIZE PUSH2 0x5A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x6D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xBB JUMPI PUSH1 0x0 SWAP2 PUSH2 0x120 JUMPI POP PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x20 SWAP2 POP RETURNDATASIZE DUP3 GT PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP3 DUP5 LT OR PUSH2 0x9E JUMPI PUSH2 0x98 SWAP3 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x188 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x12C JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x7F NOT ADD SLT PUSH2 0x183 JUMPI PUSH1 0x80 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x183 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x183 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x183 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x1C2 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD CALL 0xB4 CHAINID EXTCODESIZE 0xCC 0xDC SDIV 0xC5 PUSH14 0xEEE162CA6730FF9D30EE0B3FC732 0xB7 LOG0 0xD6 0xA6 0xDA RETURNDATACOPY 0xA5 DUP6 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xC 0xC5 CALLDATACOPY PUSH26 0xDB42882CE413EF85B141CBFFDAB9F9A7775C49E32D8935891A8B ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"376:3265:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;376:3265:21;;;;-1:-1:-1;;;;;376:3265:21;;;;;;;;;;;;;;1063:62:9;;:::i;:::-;2162:22;;376:3265:21;;-1:-1:-1;;376:3265:21;;-1:-1:-1;;;;;;376:3265:21;;;;;;;2566:40:9;376:3265:21;;2566:40:9;376:3265:21;;;;;;;;;;;;;;;;;;;;;875:62;376:3265;875:62;;;376:3265;-1:-1:-1;;;376:3265:21;;;;;;;;;;;;;;;;;;;;;;;;;;;575:36;376:3265;;;-1:-1:-1;;;;;376:3265:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:3265:21;;;;;;;-1:-1:-1;376:3265:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:3265:21;;;;;;;;;;;;;;;;;;;;;;484:43;376:3265;;;-1:-1:-1;;;;;376:3265:21;;;;;;;;;;;;;;;;;;;;;1063:62:9;;:::i;:::-;376:3265:21;;-1:-1:-1;;;;;;376:3265:21;;;;;;-1:-1:-1;;;;;376:3265:21;2566:40:9;376:3265:21;;2566:40:9;376:3265:21;;;;;;;;;;;;;-1:-1:-1;;376:3265:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;376:3265:21;;;;;;;;;;;;;;;;;;;;;;2393:155;;;;376:3265;2393:155;;;875:62;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;875:62:21;376:3265;875:62;;;;;:::i;:::-;376:3265;;;875:62;;;;;;;376:3265;2393:155;;;;;;;;;;;;;:::i;:::-;875:62;2629:11;875:62;376:3265;;;;2592:82;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;376:3265;;;;;;;;;2976:34;;;875:62;2976:34;;;;;;:::i;:::-;376:3265;;;;;;;;;;2874:146;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;875:62;;;;376:3265;;;;3073:94;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;376:3265;;;;3296:95;376:3265;;;3356:34;;;;875:62;3356:34;;;;;;:::i;:::-;376:3265;;996:46;;;;;;;;;3296:95;;;;;;;:::i;:::-;;;;;;;;;;;376:3265;3465:67;;;;;;376:3265;;996:46;;;;3465:67;;;;;376:3265;3465:67;;;;;;;;;;;;;;;;;;;;;;376:3265;;;;;;3556:47;376:3265;996:46;;376:3265;;;996:46;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;3556:47;;;376:3265;;;;;3465:67;376:3265;;;;;;;;;;;;-1:-1:-1;;;376:3265:21;;;;;;996:46;;3556:47;3465:67;;;376:3265;-1:-1:-1;;;376:3265:21;;;;;;3465:67;376:3265;;875:62;376:3265;;875:62;;;;3296:95;;;;;;;;;;;;;;:::i;:::-;;;996:46;;;;;;;;;;;3296:95;;;;;;;;;376:3265;;875:62;376:3265;;875:62;;;;3073:94;-1:-1:-1;;;376:3265:21;;;;;;;;2592:82;376:3265;;875:62;376:3265;;875:62;;;;2592:82;-1:-1:-1;;;376:3265:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:3265:21;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;2393:155;;376:3265;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;2393:155;376:3265;;-1:-1:-1;;376:3265:21;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;376:3265:21;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;376:3265:21;;875:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:3265;2393:155;;376:3265;;;875:62;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;376:3265:21;;;;;875:62;;;;;;;;;;;;;:::i;:::-;;:::o;1359:130:9:-;1273:6;376:3265:21;-1:-1:-1;;;;;376:3265:21;734:10:18;1422:23:9;376:3265:21;;1359:130:9:o;376:3265:21:-;;;;;;;;;;;;;;;;;;875:62;376:3265;875:62;;;376:3265;"},"gasEstimates":{"creation":{"codeDepositCost":"715000","executionCost":"infinite","totalCost":"infinite"},"external":{"createToken(string,string,uint256,address)":"infinite","owner()":"2391","renounceOwnership()":"28122","securityModuleBeacon()":"2411","securityModuleImplementation()":"2369","tokenBeacon()":"2435","tokenImplementation()":"2289","transferOwnership(address)":"28298"}},"methodIdentifiers":{"createToken(string,string,uint256,address)":"34f359f9","owner()":"8da5cb5b","renounceOwnership()":"715018a6","securityModuleBeacon()":"9651d0a8","securityModuleImplementation()":"8008334c","tokenBeacon()":"ccf5a77c","tokenImplementation()":"2f3a3d5d","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenImpl_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"securityModuleImpl_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"securityModuleBeacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"securityModuleImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBeacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory for creating V4 tokens with modular architecture\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initialize the factory with implementation contracts\",\"params\":{\"owner_\":\"The owner of the factory\",\"securityModuleImpl_\":\"The security module implementation address\",\"tokenImpl_\":\"The token implementation address\"}},\"createToken(string,string,uint256,address)\":{\"details\":\"Create a new V4 token with default modules\",\"params\":{\"initialSupply\":\"Initial supply to mint\",\"name\":\"Token name\",\"owner\":\"Owner of the new token\",\"symbol\":\"Token symbol\"},\"returns\":{\"tokenAddress\":\"Address of the newly created token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"V4Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/V4Factory.sol\":\"V4Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"../ERC1967/ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\\n * conflict with the storage layout of the implementation behind the proxy.\\n *\\n * _Available since v3.4._\\n */\\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current beacon address.\\n     */\\n    function _beacon() internal view virtual returns (address) {\\n        return _getBeacon();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract.\\n     * - The implementation returned by `beacon` must be a contract.\\n     */\\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n}\\n\",\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"../../access/Ownable.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\\n * implementation contract, which is where they will delegate all function calls.\\n *\\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\\n */\\ncontract UpgradeableBeacon is IBeacon, Ownable {\\n    address private _implementation;\\n\\n    /**\\n     * @dev Emitted when the implementation returned by the beacon is changed.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\\n     * beacon.\\n     */\\n    constructor(address implementation_) {\\n        _setImplementation(implementation_);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function implementation() public view virtual override returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev Upgrades the beacon to a new implementation.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * Requirements:\\n     *\\n     * - msg.sender must be the owner of the contract.\\n     * - `newImplementation` must be a contract.\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Sets the implementation contract address for this beacon\\n     *\\n     * Requirements:\\n     *\\n     * - `newImplementation` must be a contract.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"UpgradeableBeacon: implementation is not a contract\\\");\\n        _implementation = newImplementation;\\n    }\\n}\\n\",\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"src/contracts/V4Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\nimport \\\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IV4TokenBase.sol\\\";\\n\\n/**\\n * @title V4Factory\\n * @dev Factory for creating V4 tokens with modular architecture\\n */\\ncontract V4Factory is Ownable {\\n    // Implementation addresses\\n    address public tokenImplementation;\\n    address public securityModuleImplementation;\\n    \\n    // Beacon contracts for upgrades\\n    UpgradeableBeacon public tokenBeacon;\\n    UpgradeableBeacon public securityModuleBeacon;\\n    \\n    // Events\\n    event TokenCreated(address indexed tokenAddress, string name, string symbol, address indexed owner);\\n    \\n    // Function selectors\\n    bytes4 private constant TOKEN_INITIALIZE_SELECTOR = bytes4(keccak256(\\\"initialize(string,string,uint256,address)\\\"));\\n    bytes4 private constant MODULE_INITIALIZE_SELECTOR = bytes4(keccak256(\\\"initialize(address,bytes)\\\"));\\n    \\n    /**\\n     * @dev Initialize the factory with implementation contracts\\n     * @param owner_ The owner of the factory\\n     * @param tokenImpl_ The token implementation address\\n     * @param securityModuleImpl_ The security module implementation address\\n     */\\n    constructor(\\n        address owner_,\\n        address tokenImpl_,\\n        address securityModuleImpl_\\n    ) {\\n        _transferOwnership(owner_);\\n        \\n        tokenImplementation = tokenImpl_;\\n        securityModuleImplementation = securityModuleImpl_;\\n        \\n        tokenBeacon = new UpgradeableBeacon(tokenImplementation);\\n        securityModuleBeacon = new UpgradeableBeacon(securityModuleImplementation);\\n        \\n        tokenBeacon.transferOwnership(owner_);\\n        securityModuleBeacon.transferOwnership(owner_);\\n    }\\n    \\n    /**\\n     * @dev Create a new V4 token with default modules\\n     * @param name Token name\\n     * @param symbol Token symbol\\n     * @param initialSupply Initial supply to mint\\n     * @param owner Owner of the new token\\n     * @return tokenAddress Address of the newly created token\\n     */\\n    function createToken(\\n        string memory name,\\n        string memory symbol,\\n        uint256 initialSupply,\\n        address owner\\n    ) external returns (address tokenAddress) {\\n        // Create token proxy\\n        bytes memory tokenData = abi.encodeWithSelector(\\n            TOKEN_INITIALIZE_SELECTOR,\\n            name,\\n            symbol,\\n            initialSupply,\\n            owner\\n        );\\n        \\n        BeaconProxy tokenProxy = new BeaconProxy(\\n            address(tokenBeacon),\\n            tokenData\\n        );\\n        tokenAddress = address(tokenProxy);\\n        \\n        // Create security module\\n        bytes32 securityModuleInitData = bytes32(uint256(uint160(owner)));\\n        bytes memory securityData = abi.encodeWithSelector(\\n            MODULE_INITIALIZE_SELECTOR,\\n            tokenAddress,\\n            abi.encode(securityModuleInitData)\\n        );\\n        \\n        BeaconProxy securityModuleProxy = new BeaconProxy(\\n            address(securityModuleBeacon),\\n            securityData\\n        );\\n        address securityModuleAddress = address(securityModuleProxy);\\n        \\n        // Add security module to token\\n        IV4TokenBase(tokenAddress).addModule(securityModuleAddress, abi.encode(securityModuleInitData));\\n        \\n        // Transfer token ownership to security module\\n        IV4TokenBase(tokenAddress).transferOwnership(securityModuleAddress);\\n        \\n        emit TokenCreated(tokenAddress, name, symbol, owner);\\n        return tokenAddress;\\n    }\\n} \",\"keccak256\":\"0x462969783192345c695fd180c20cbef62eb145758fa3bceba5aab9b743c646a9\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4TokenBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4TokenBase\\n * @dev Interface for the V4 token base\\n */\\ninterface IV4TokenBase {\\n    /**\\n     * @dev Initialize the token with basic parameters\\n     * @param name_ Token name\\n     * @param symbol_ Token symbol\\n     * @param initialSupply Initial supply to mint\\n     * @param owner_ Address that will receive the initial supply and become the owner\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupply,\\n        address owner_\\n    ) external;\\n    \\n    /**\\n     * @dev Add a module to the token\\n     * @param moduleAddress Address of the module to add\\n     * @param data Initialization data for the module\\n     * @return success Whether the module was successfully added\\n     */\\n    function addModule(address moduleAddress, bytes calldata data) external returns (bool);\\n    \\n    /**\\n     * @dev Remove a module from the token\\n     * @param moduleAddress Address of the module to remove\\n     * @return success Whether the module was successfully removed\\n     */\\n    function removeModule(address moduleAddress) external returns (bool);\\n    \\n    /**\\n     * @dev Check if a module is active\\n     * @param moduleAddress Address of the module to check\\n     * @return isActive Whether the module is active\\n     */\\n    function isModuleActive(address moduleAddress) external view returns (bool);\\n    \\n    /**\\n     * @dev Get all active modules\\n     * @return modules Array of active module addresses\\n     */\\n    function getModules() external view returns (address[] memory);\\n    \\n    /**\\n     * @dev Execute a function call from a module\\n     * @param target Target address for the call\\n     * @param data Call data\\n     * @return success Whether the call was successful\\n     * @return returnData Data returned by the call\\n     */\\n    function executeFromModule(address target, bytes calldata data) external returns (bool, bytes memory);\\n    \\n    /**\\n     * @dev Pause the token\\n     */\\n    function pause() external;\\n    \\n    /**\\n     * @dev Unpause the token\\n     */\\n    function unpause() external;\\n    \\n    /**\\n     * @dev Transfer ownership of the token\\n     * @param newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) external;\\n\\n    /**\\n     * @dev Get the current owner of the token\\n     * @return The address of the current owner\\n     */\\n    function owner() external view returns (address);\\n} \",\"keccak256\":\"0xdef03abd1361f901042d1e4fbd58ca222d1956f036d593e5278ba00e3875b9d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2147,"contract":"src/contracts/V4Factory.sol:V4Factory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":4182,"contract":"src/contracts/V4Factory.sol:V4Factory","label":"tokenImplementation","offset":0,"slot":"1","type":"t_address"},{"astId":4184,"contract":"src/contracts/V4Factory.sol:V4Factory","label":"securityModuleImplementation","offset":0,"slot":"2","type":"t_address"},{"astId":4187,"contract":"src/contracts/V4Factory.sol:V4Factory","label":"tokenBeacon","offset":0,"slot":"3","type":"t_contract(UpgradeableBeacon)2790"},{"astId":4190,"contract":"src/contracts/V4Factory.sol:V4Factory","label":"securityModuleBeacon","offset":0,"slot":"4","type":"t_contract(UpgradeableBeacon)2790"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(UpgradeableBeacon)2790":{"encoding":"inplace","label":"contract UpgradeableBeacon","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/V4SecurityModule.sol":{"V4SecurityModule":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"addSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"confirmOwnershipTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"emergencyPause","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyUnpause","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getModuleType","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getSigners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"proposeOwnershipTransfer","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"removeSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"threshold","type":"uint256"}],"name":"setThreshold","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"supportsFunction","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of security module with multi-sig capabilities","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"addSigner(address)":{"details":"Add a new signer to the multi-sig configuration","params":{"signer":"Address to add as a signer"},"returns":{"_0":"success Whether the signer was successfully added"}},"emergencyPause()":{"details":"Emergency pause for the token","returns":{"_0":"success Whether the pause was successful"}},"emergencyUnpause()":{"details":"Unpause the token after emergency","returns":{"_0":"success Whether the unpause was successful"}},"getModuleType()":{"details":"Get the type of this module","returns":{"_0":"moduleType Type identifier for this module"}},"getSigners()":{"details":"Get all current signers","returns":{"_0":"signers Array of current signer addresses"}},"getThreshold()":{"details":"Get the current signature threshold","returns":{"_0":"threshold The current signature threshold"}},"getToken()":{"details":"Get the token this module is attached to","returns":{"_0":"tokenAddress Address of the token"}},"initialize(address,bytes)":{"details":"Initialize the module","params":{"data":"Additional initialization data","tokenAddress":"Address of the token this module is attached to"}},"isSigner(address)":{"details":"Check if an address is a signer","params":{"account":"Address to check"},"returns":{"_0":"isSigner Whether the address is a signer"}},"owner()":{"details":"Returns the address of the current owner."},"proposeOwnershipTransfer(address)":{"details":"Propose a new owner (multi-sig process step 1)","params":{"newOwner":"Address of the proposed new owner"},"returns":{"_0":"proposalId Identifier for the ownership transfer proposal"}},"removeSigner(address)":{"details":"Remove a signer from the multi-sig configuration","params":{"signer":"Address to remove from signers"},"returns":{"_0":"success Whether the signer was successfully removed"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setThreshold(uint256)":{"details":"Set the required number of signatures for operations","params":{"threshold":"Number of required signatures"},"returns":{"_0":"success Whether the threshold was successfully set"}},"supportsFunction(bytes4)":{"details":"Check if this module has a specific function","params":{"functionSig":"Function signature to check for"},"returns":{"_0":"hasFunction Whether the module implements the function"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"V4SecurityModule","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100165761121f908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630b9349b914610cde575080630e316ab714610b7457806321040fc314610a1657806321df0da7146109ed5780634a4e3bd51461099e57806351858e27146108db578063715018a61461087e5780637df73e27146108385780638da5cb5b1461080f57806394cf795e14610709578063960bfe041461061c578063be46446414610507578063d1f578941461026f578063e500680114610252578063e75235b81461022f578063eb12d61e146101725763f2fde38b146100de57600080fd5b3461016e57602036600319011261016e576100f7610d18565b91610100610f78565b6001600160a01b0383161561011c578361011984610f2f565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50823461022c57602036600319011261022c575061018e610d18565b6033546001600160a01b0391906101a89083163314610d33565b16906101c1826000526067602052604060002054151590565b6101d9576020836101d18461117e565b505160018152f35b608490602084519162461bcd60e51b8352820152602760248201527f563453656375726974794d6f64756c653a207369676e657220616c72656164796044820152662065786973747360c81b6064820152fd5b80fd5b50503461024e578160031936011261024e576020906068549051908152f35b5080fd5b50503461024e57602036600319011261024e576020905160018152f35b503461016e578160031936011261016e57610288610d18565b9060249182359267ffffffffffffffff928385116105035736602386011215610503578481013593841161050357368285870101116105035786549360ff8560081c1615948580966104f6575b80156104df575b156104865760ff198116600117895585610475575b5060209586820361041d578301359086811061040c575b5087546001600160a01b0391821694906103309060081c60ff1661032b81610fd0565b610fd0565b61033933610f2f565b61034285610f2f565b169182156103b35750509061036e916bffffffffffffffffffffffff60a01b606554161760655561117e565b50600160685561037c578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a138808280f35b865162461bcd60e51b8152918201869052602e908201527f563453656375726974794d6f64756c653a20746f6b656e20616464726573732060448201526d63616e6e6f74206265207a65726f60901b6064820152608490fd5b60001990870360031b1b1638610308565b875162461bcd60e51b8152808401889052602d818601527f563453656375726974794d6f64756c653a20696e76616c696420696e6974696160448201526c6c697a6174696f6e206461746160981b6064820152608490fd5b61ffff1916610101178855386102f1565b875162461bcd60e51b8152602081850152602e818601527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156102dc5750600160ff8216146102dc565b50600160ff8216106102d5565b8680fd5b503461016e57602036600319011261016e57359063ffffffff60e01b821680920361016e57602092506321040fc360e01b821491821561060b575b82156105fa575b82156105e9575b82156105d8575b82156105c7575b82156105b6575b82156105a5575b8215610594575b8215610583575b50519015158152f35b634a4e3bd560e01b1491503861057a565b6351858e2760e01b81149250610573565b634a67bcaf60e11b8114925061056c565b631cea46b760e31b81149250610565565b637df73e2760e01b8114925061055e565b632582ff8160e21b81149250610557565b630e316ab760e01b81149250610550565b6375896b0f60e11b81149250610549565b63e500680160e01b81149250610542565b50913461022c57602036600319011261022c5750813561064760018060a01b03603354163314610d33565b80156106b357606654811161066457602092506068555160018152f35b815162461bcd60e51b81526020818501526024808201527f563453656375726974794d6f64756c653a207468726573686f6c6420746f6f206044820152630d0d2ced60e31b6064820152608490fd5b815162461bcd60e51b8152602081850152602a60248201527f563453656375726974794d6f64756c653a207468726573686f6c642063616e6e6044820152696f74206265207a65726f60b01b6064820152608490fd5b5082903461024e578160031936011261024e5782906066926066549161072e83610f17565b9061073b85519283610dbf565b83825261074784610f17565b6020968388019591601f1901368737845b8281106107a7575050505083519485948186019282875251809352850193925b82811061078757505050500390f35b83516001600160a01b031685528695509381019392810192600101610778565b818695979899965260018060a01b03817f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435401541687518210156107fc57600582901b8801870152949796959394600101610758565b634e487b7160e01b865260328552602486fd5b50503461024e578160031936011261024e5760335490516001600160a01b039091168152602090f35b50503461024e57602036600319011261024e576020906108756001600160a01b03610861610d18565b166000526067602052604060002054151590565b90519015158152f35b833461022c578060031936011261022c57610897610f78565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461016e578260031936011261016e5791806109569361091161090c336000526067602052604060002054151590565b610ebc565b8351638456cb5960e01b602082015281815290829061092f83610d8d565b60018060a01b036065541691829187519889958694859362ac0f6f60e71b85528401610e81565b03925af192831561099257602093610972575b50505160018152f35b61098d913d8091833e6109858183610dbf565b810190610e04565b610969565b509051903d90823e3d90fd5b503461016e578260031936011261016e579180610956936109cf61090c336000526067602052604060002054151590565b8351631fa5d41d60e11b602082015281815290829061092f83610d8d565b50503461024e578160031936011261024e5760655490516001600160a01b039091168152602090f35b5091903461024e57602036600319011261024e57610a32610d18565b6033546001600160a01b0390610a4b9082163314610d33565b808216918215610b1657610a5e90610f2f565b82519163f2fde38b60e01b6020840152602483015260248252606082019482861067ffffffffffffffff871117610b03575084835260655462ac0f6f60e71b865284918691168183605f1986610ab8818660648201610e81565b0301925af1938415610af757602094610ad4575b505051908152f35b6060610af2923d908187853e610aea8285610dbf565b010190610e04565b610acc565b505051903d90823e3d90fd5b634e487b7160e01b855260419052602484fd5b835162461bcd60e51b8152602081880152603260248201527f563453656375726974794d6f64756c653a206e6577206f776e65722063616e6e6044820152716f74206265207a65726f206164647265737360701b6064820152608490fd5b50823461022c57602036600319011261022c5750610b90610d18565b6033546001600160a01b039081169291610bab338514610d33565b1691610bc4836000526067602052604060002054151590565b15610c8b576066546068541015610c38578214610be7576020836101d18461107d565b608490602084519162461bcd60e51b8352820152602560248201527f563453656375726974794d6f64756c653a2063616e6e6f742072656d6f76652060448201526437bbb732b960d91b6064820152fd5b835162461bcd60e51b8152602081840152602760248201527f563453656375726974794d6f64756c653a20776f756c6420627265616b2074686044820152661c995cda1bdb1960ca1b6064820152608490fd5b835162461bcd60e51b8152602081840152602760248201527f563453656375726974794d6f64756c653a207369676e657220646f6573206e6f6044820152661d08195e1a5cdd60ca1b6064820152608490fd5b84903461024e578160031936011261024e57807fe8dfd5edbafe3b1a04db54003f904cfc4610e36b1414906e3f2255bd826e13cf60209252f35b600435906001600160a01b0382168203610d2e57565b600080fd5b15610d3a57565b60405162461bcd60e51b815260206004820152602560248201527f563453656375726974794d6f64756c653a2063616c6c6572206973206e6f742060448201526437bbb732b960d91b6064820152608490fd5b6040810190811067ffffffffffffffff821117610da957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610da957604052565b60005b838110610df45750506000910152565b8181015183820152602001610de4565b9190604083820312610d2e5782518015158103610d2e5792602081015167ffffffffffffffff91828211610d2e57019082601f83011215610d2e578151908111610da95760405192610e60601f8301601f191660200185610dbf565b81845260208284010111610d2e57610e7e9160208085019101610de1565b90565b909160609260018060a01b0316825260406020830152610eb08151809281604086015260208686019101610de1565b601f01601f1916010190565b15610ec357565b60405162461bcd60e51b815260206004820152602660248201527f563453656375726974794d6f64756c653a2063616c6c6572206973206e6f742060448201526539b4b3b732b960d11b6064820152608490fd5b67ffffffffffffffff8111610da95760051b60200190565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6033546001600160a01b03163303610f8c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610fd757565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6066548110156110675760666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540190600090565b634e487b7160e01b600052603260045260246000fd5b60008181526067602052604081205490919080156111795760001990808201818111611165576066549083820191821161115157808203611106575b50505060665480156110f2578101906110d182611030565b909182549160031b1b19169055606655815260676020526040812055600190565b634e487b7160e01b84526031600452602484fd5b61113b61111561112493611030565b90549060031b1c928392611030565b819391549060031b91821b91600019901b19161790565b90558452606760205260408420553880806110b9565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b505090565b6000818152606760205260408120546111e457606654680100000000000000008110156111d05790826111bc61112484600160409601606655611030565b905560665492815260676020522055600190565b634e487b7160e01b82526041600452602482fd5b90509056fea26469706673582212204bd81ed9ce4e5a70988ba4b423b3078ef511c0cc284fa2c15dd6bede12bf688864736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x121F SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xB9349B9 EQ PUSH2 0xCDE JUMPI POP DUP1 PUSH4 0xE316AB7 EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0x21040FC3 EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x9ED JUMPI DUP1 PUSH4 0x4A4E3BD5 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x8DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x87E JUMPI DUP1 PUSH4 0x7DF73E27 EQ PUSH2 0x838 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x80F JUMPI DUP1 PUSH4 0x94CF795E EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0x960BFE04 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0xBE464464 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xE5006801 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xE75235B8 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xEB12D61E EQ PUSH2 0x172 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16E JUMPI PUSH2 0xF7 PUSH2 0xD18 JUMP JUMPDEST SWAP2 PUSH2 0x100 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x11C JUMPI DUP4 PUSH2 0x119 DUP5 PUSH2 0xF2F JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x22C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22C JUMPI POP PUSH2 0x18E PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x1A8 SWAP1 DUP4 AND CALLER EQ PUSH2 0xD33 JUMP JUMPDEST AND SWAP1 PUSH2 0x1C1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1D9 JUMPI PUSH1 0x20 DUP4 PUSH2 0x1D1 DUP5 PUSH2 0x117E JUMP JUMPDEST POP MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A207369676E657220616C7265616479 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20657869737473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x68 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24E JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x16E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16E JUMPI PUSH2 0x288 PUSH2 0xD18 JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP6 GT PUSH2 0x503 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x503 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x503 JUMPI CALLDATASIZE DUP3 DUP6 DUP8 ADD ADD GT PUSH2 0x503 JUMPI DUP7 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0x4F6 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x4DF JUMPI JUMPDEST ISZERO PUSH2 0x486 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP10 SSTORE DUP6 PUSH2 0x475 JUMPI JUMPDEST POP PUSH1 0x20 SWAP6 DUP7 DUP3 SUB PUSH2 0x41D JUMPI DUP4 ADD CALLDATALOAD SWAP1 DUP7 DUP2 LT PUSH2 0x40C JUMPI JUMPDEST POP DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 SWAP1 PUSH2 0x330 SWAP1 PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0x32B DUP2 PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x339 CALLER PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x342 DUP6 PUSH2 0xF2F JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3B3 JUMPI POP POP SWAP1 PUSH2 0x36E SWAP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x65 SLOAD AND OR PUSH1 0x65 SSTORE PUSH2 0x117E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x68 SSTORE PUSH2 0x37C JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP2 PUSH2 0xFF00 NOT DUP5 SLOAD AND DUP5 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A20746F6B656E206164647265737320 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x63616E6E6F74206265207A65726F PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT SWAP1 DUP8 SUB PUSH1 0x3 SHL SHL AND CODESIZE PUSH2 0x308 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x2D DUP2 DUP7 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A20696E76616C696420696E69746961 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6C697A6174696F6E2064617461 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP9 SSTORE CODESIZE PUSH2 0x2F1 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x2E DUP2 DUP7 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DC JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x2DC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x2D5 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16E JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x16E JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x21040FC3 PUSH1 0xE0 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x60B JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5FA JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5E9 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5D8 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5C7 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5B6 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5A5 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x594 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x583 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4A4E3BD5 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0x57A JUMP JUMPDEST PUSH4 0x51858E27 PUSH1 0xE0 SHL DUP2 EQ SWAP3 POP PUSH2 0x573 JUMP JUMPDEST PUSH4 0x4A67BCAF PUSH1 0xE1 SHL DUP2 EQ SWAP3 POP PUSH2 0x56C JUMP JUMPDEST PUSH4 0x1CEA46B7 PUSH1 0xE3 SHL DUP2 EQ SWAP3 POP PUSH2 0x565 JUMP JUMPDEST PUSH4 0x7DF73E27 PUSH1 0xE0 SHL DUP2 EQ SWAP3 POP PUSH2 0x55E JUMP JUMPDEST PUSH4 0x2582FF81 PUSH1 0xE2 SHL DUP2 EQ SWAP3 POP PUSH2 0x557 JUMP JUMPDEST PUSH4 0xE316AB7 PUSH1 0xE0 SHL DUP2 EQ SWAP3 POP PUSH2 0x550 JUMP JUMPDEST PUSH4 0x75896B0F PUSH1 0xE1 SHL DUP2 EQ SWAP3 POP PUSH2 0x549 JUMP JUMPDEST PUSH4 0xE5006801 PUSH1 0xE0 SHL DUP2 EQ SWAP3 POP PUSH2 0x542 JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x22C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22C JUMPI POP DUP2 CALLDATALOAD PUSH2 0x647 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND CALLER EQ PUSH2 0xD33 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x66 SLOAD DUP2 GT PUSH2 0x664 JUMPI PUSH1 0x20 SWAP3 POP PUSH1 0x68 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A207468726573686F6C6420746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xD0D2CED PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A207468726573686F6C642063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6F74206265207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI DUP3 SWAP1 PUSH1 0x66 SWAP3 PUSH1 0x66 SLOAD SWAP2 PUSH2 0x72E DUP4 PUSH2 0xF17 JUMP JUMPDEST SWAP1 PUSH2 0x73B DUP6 MLOAD SWAP3 DUP4 PUSH2 0xDBF JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH2 0x747 DUP5 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x20 SWAP7 DUP4 DUP9 ADD SWAP6 SWAP2 PUSH1 0x1F NOT ADD CALLDATASIZE DUP8 CALLDATACOPY DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x7A7 JUMPI POP POP POP POP DUP4 MLOAD SWAP5 DUP6 SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x787 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x778 JUMP JUMPDEST DUP2 DUP7 SWAP6 SWAP8 SWAP9 SWAP10 SWAP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD SLOAD AND DUP8 MLOAD DUP3 LT ISZERO PUSH2 0x7FC JUMPI PUSH1 0x5 DUP3 SWAP1 SHL DUP9 ADD DUP8 ADD MSTORE SWAP5 SWAP8 SWAP7 SWAP6 SWAP4 SWAP5 PUSH1 0x1 ADD PUSH2 0x758 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x32 DUP6 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI PUSH1 0x33 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24E JUMPI PUSH1 0x20 SWAP1 PUSH2 0x875 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x861 PUSH2 0xD18 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x22C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22C JUMPI PUSH2 0x897 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16E JUMPI SWAP2 DUP1 PUSH2 0x956 SWAP4 PUSH2 0x911 PUSH2 0x90C CALLER PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST DUP4 MLOAD PUSH4 0x8456CB59 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP2 MSTORE SWAP1 DUP3 SWAP1 PUSH2 0x92F DUP4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x65 SLOAD AND SWAP2 DUP3 SWAP2 DUP8 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH3 0xAC0F6F PUSH1 0xE7 SHL DUP6 MSTORE DUP5 ADD PUSH2 0xE81 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x992 JUMPI PUSH1 0x20 SWAP4 PUSH2 0x972 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x98D SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x985 DUP2 DUP4 PUSH2 0xDBF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16E JUMPI SWAP2 DUP1 PUSH2 0x956 SWAP4 PUSH2 0x9CF PUSH2 0x90C CALLER PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x1FA5D41D PUSH1 0xE1 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP2 MSTORE SWAP1 DUP3 SWAP1 PUSH2 0x92F DUP4 PUSH2 0xD8D JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI PUSH1 0x65 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x24E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24E JUMPI PUSH2 0xA32 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xA4B SWAP1 DUP3 AND CALLER EQ PUSH2 0xD33 JUMP JUMPDEST DUP1 DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0xB16 JUMPI PUSH2 0xA5E SWAP1 PUSH2 0xF2F JUMP JUMPDEST DUP3 MLOAD SWAP2 PUSH4 0xF2FDE38B PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x24 DUP3 MSTORE PUSH1 0x60 DUP3 ADD SWAP5 DUP3 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0xB03 JUMPI POP DUP5 DUP4 MSTORE PUSH1 0x65 SLOAD PUSH3 0xAC0F6F PUSH1 0xE7 SHL DUP7 MSTORE DUP5 SWAP2 DUP7 SWAP2 AND DUP2 DUP4 PUSH1 0x5F NOT DUP7 PUSH2 0xAB8 DUP2 DUP7 PUSH1 0x64 DUP3 ADD PUSH2 0xE81 JUMP JUMPDEST SUB ADD SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x20 SWAP5 PUSH2 0xAD4 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 PUSH2 0xAF2 SWAP3 RETURNDATASIZE SWAP1 DUP2 DUP8 DUP6 RETURNDATACOPY PUSH2 0xAEA DUP3 DUP6 PUSH2 0xDBF JUMP JUMPDEST ADD ADD SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A206E6577206F776E65722063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6F74206265207A65726F2061646472657373 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x22C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22C JUMPI POP PUSH2 0xB90 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 PUSH2 0xBAB CALLER DUP6 EQ PUSH2 0xD33 JUMP JUMPDEST AND SWAP2 PUSH2 0xBC4 DUP4 PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xC8B JUMPI PUSH1 0x66 SLOAD PUSH1 0x68 SLOAD LT ISZERO PUSH2 0xC38 JUMPI DUP3 EQ PUSH2 0xBE7 JUMPI PUSH1 0x20 DUP4 PUSH2 0x1D1 DUP5 PUSH2 0x107D JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A2063616E6E6F742072656D6F766520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A20776F756C6420627265616B207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1C995CDA1BDB19 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A207369676E657220646F6573206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1D08195E1A5CDD PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI DUP1 PUSH32 0xE8DFD5EDBAFE3B1A04DB54003F904CFC4610E36B1414906E3F2255BD826E13CF PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD2E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST ISZERO PUSH2 0xD3A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A2063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xDF4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE4 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD2E JUMPI DUP3 MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xD2E JUMPI SWAP3 PUSH1 0x20 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xD2E JUMPI ADD SWAP1 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD2E JUMPI DUP2 MLOAD SWAP1 DUP2 GT PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE60 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xDBF JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0xD2E JUMPI PUSH2 0xE7E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0xDE1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xEB0 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xEC3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A2063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x39B4B3B732B9 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xDA9 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xF8C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0xFD7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x66 SLOAD DUP2 LT ISZERO PUSH2 0x1067 JUMPI PUSH1 0x66 PUSH1 0x0 MSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP1 ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 NOT SWAP1 DUP1 DUP3 ADD DUP2 DUP2 GT PUSH2 0x1165 JUMPI PUSH1 0x66 SLOAD SWAP1 DUP4 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x1151 JUMPI DUP1 DUP3 SUB PUSH2 0x1106 JUMPI JUMPDEST POP POP POP PUSH1 0x66 SLOAD DUP1 ISZERO PUSH2 0x10F2 JUMPI DUP2 ADD SWAP1 PUSH2 0x10D1 DUP3 PUSH2 0x1030 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x66 SSTORE DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0x113B PUSH2 0x1115 PUSH2 0x1124 SWAP4 PUSH2 0x1030 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 PUSH2 0x1030 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE DUP5 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x11E4 JUMPI PUSH1 0x66 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x11D0 JUMPI SWAP1 DUP3 PUSH2 0x11BC PUSH2 0x1124 DUP5 PUSH1 0x1 PUSH1 0x40 SWAP7 ADD PUSH1 0x66 SSTORE PUSH2 0x1030 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x66 SLOAD SWAP3 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD8 0x1E 0xD9 0xCE 0x4E GAS PUSH17 0x988BA4B423B3078EF511C0CC284FA2C15D 0xD6 0xBE 0xDE SLT 0xBF PUSH9 0x8864736F6C63430008 AND STOP CALLER ","sourceMap":"526:4986:22:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3352,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_boolt_bytes_fromMemory":{"entryPoint":3588,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address_bytes":{"entryPoint":3713,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":3863,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3553,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3519,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_16006":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":0},"fun_add":{"entryPoint":4478,"id":1579,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":3960,"id":69,"parameterSlots":0,"returnSlots":0},"fun_contains":{"entryPoint":null,"id":1682,"parameterSlots":1,"returnSlots":1},"fun_remove":{"entryPoint":4221,"id":1663,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership":{"entryPoint":3887,"id":126,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":3379,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":4048,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e140":{"entryPoint":3772,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":4144,"id":null,"parameterSlots":1,"returnSlots":2},"update_byte_slice_dynamic32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604081815260048036101561001557600080fd5b600092833560e01c9081630b9349b914610cde575080630e316ab714610b7457806321040fc314610a1657806321df0da7146109ed5780634a4e3bd51461099e57806351858e27146108db578063715018a61461087e5780637df73e27146108385780638da5cb5b1461080f57806394cf795e14610709578063960bfe041461061c578063be46446414610507578063d1f578941461026f578063e500680114610252578063e75235b81461022f578063eb12d61e146101725763f2fde38b146100de57600080fd5b3461016e57602036600319011261016e576100f7610d18565b91610100610f78565b6001600160a01b0383161561011c578361011984610f2f565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50823461022c57602036600319011261022c575061018e610d18565b6033546001600160a01b0391906101a89083163314610d33565b16906101c1826000526067602052604060002054151590565b6101d9576020836101d18461117e565b505160018152f35b608490602084519162461bcd60e51b8352820152602760248201527f563453656375726974794d6f64756c653a207369676e657220616c72656164796044820152662065786973747360c81b6064820152fd5b80fd5b50503461024e578160031936011261024e576020906068549051908152f35b5080fd5b50503461024e57602036600319011261024e576020905160018152f35b503461016e578160031936011261016e57610288610d18565b9060249182359267ffffffffffffffff928385116105035736602386011215610503578481013593841161050357368285870101116105035786549360ff8560081c1615948580966104f6575b80156104df575b156104865760ff198116600117895585610475575b5060209586820361041d578301359086811061040c575b5087546001600160a01b0391821694906103309060081c60ff1661032b81610fd0565b610fd0565b61033933610f2f565b61034285610f2f565b169182156103b35750509061036e916bffffffffffffffffffffffff60a01b606554161760655561117e565b50600160685561037c578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a138808280f35b865162461bcd60e51b8152918201869052602e908201527f563453656375726974794d6f64756c653a20746f6b656e20616464726573732060448201526d63616e6e6f74206265207a65726f60901b6064820152608490fd5b60001990870360031b1b1638610308565b875162461bcd60e51b8152808401889052602d818601527f563453656375726974794d6f64756c653a20696e76616c696420696e6974696160448201526c6c697a6174696f6e206461746160981b6064820152608490fd5b61ffff1916610101178855386102f1565b875162461bcd60e51b8152602081850152602e818601527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156102dc5750600160ff8216146102dc565b50600160ff8216106102d5565b8680fd5b503461016e57602036600319011261016e57359063ffffffff60e01b821680920361016e57602092506321040fc360e01b821491821561060b575b82156105fa575b82156105e9575b82156105d8575b82156105c7575b82156105b6575b82156105a5575b8215610594575b8215610583575b50519015158152f35b634a4e3bd560e01b1491503861057a565b6351858e2760e01b81149250610573565b634a67bcaf60e11b8114925061056c565b631cea46b760e31b81149250610565565b637df73e2760e01b8114925061055e565b632582ff8160e21b81149250610557565b630e316ab760e01b81149250610550565b6375896b0f60e11b81149250610549565b63e500680160e01b81149250610542565b50913461022c57602036600319011261022c5750813561064760018060a01b03603354163314610d33565b80156106b357606654811161066457602092506068555160018152f35b815162461bcd60e51b81526020818501526024808201527f563453656375726974794d6f64756c653a207468726573686f6c6420746f6f206044820152630d0d2ced60e31b6064820152608490fd5b815162461bcd60e51b8152602081850152602a60248201527f563453656375726974794d6f64756c653a207468726573686f6c642063616e6e6044820152696f74206265207a65726f60b01b6064820152608490fd5b5082903461024e578160031936011261024e5782906066926066549161072e83610f17565b9061073b85519283610dbf565b83825261074784610f17565b6020968388019591601f1901368737845b8281106107a7575050505083519485948186019282875251809352850193925b82811061078757505050500390f35b83516001600160a01b031685528695509381019392810192600101610778565b818695979899965260018060a01b03817f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435401541687518210156107fc57600582901b8801870152949796959394600101610758565b634e487b7160e01b865260328552602486fd5b50503461024e578160031936011261024e5760335490516001600160a01b039091168152602090f35b50503461024e57602036600319011261024e576020906108756001600160a01b03610861610d18565b166000526067602052604060002054151590565b90519015158152f35b833461022c578060031936011261022c57610897610f78565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461016e578260031936011261016e5791806109569361091161090c336000526067602052604060002054151590565b610ebc565b8351638456cb5960e01b602082015281815290829061092f83610d8d565b60018060a01b036065541691829187519889958694859362ac0f6f60e71b85528401610e81565b03925af192831561099257602093610972575b50505160018152f35b61098d913d8091833e6109858183610dbf565b810190610e04565b610969565b509051903d90823e3d90fd5b503461016e578260031936011261016e579180610956936109cf61090c336000526067602052604060002054151590565b8351631fa5d41d60e11b602082015281815290829061092f83610d8d565b50503461024e578160031936011261024e5760655490516001600160a01b039091168152602090f35b5091903461024e57602036600319011261024e57610a32610d18565b6033546001600160a01b0390610a4b9082163314610d33565b808216918215610b1657610a5e90610f2f565b82519163f2fde38b60e01b6020840152602483015260248252606082019482861067ffffffffffffffff871117610b03575084835260655462ac0f6f60e71b865284918691168183605f1986610ab8818660648201610e81565b0301925af1938415610af757602094610ad4575b505051908152f35b6060610af2923d908187853e610aea8285610dbf565b010190610e04565b610acc565b505051903d90823e3d90fd5b634e487b7160e01b855260419052602484fd5b835162461bcd60e51b8152602081880152603260248201527f563453656375726974794d6f64756c653a206e6577206f776e65722063616e6e6044820152716f74206265207a65726f206164647265737360701b6064820152608490fd5b50823461022c57602036600319011261022c5750610b90610d18565b6033546001600160a01b039081169291610bab338514610d33565b1691610bc4836000526067602052604060002054151590565b15610c8b576066546068541015610c38578214610be7576020836101d18461107d565b608490602084519162461bcd60e51b8352820152602560248201527f563453656375726974794d6f64756c653a2063616e6e6f742072656d6f76652060448201526437bbb732b960d91b6064820152fd5b835162461bcd60e51b8152602081840152602760248201527f563453656375726974794d6f64756c653a20776f756c6420627265616b2074686044820152661c995cda1bdb1960ca1b6064820152608490fd5b835162461bcd60e51b8152602081840152602760248201527f563453656375726974794d6f64756c653a207369676e657220646f6573206e6f6044820152661d08195e1a5cdd60ca1b6064820152608490fd5b84903461024e578160031936011261024e57807fe8dfd5edbafe3b1a04db54003f904cfc4610e36b1414906e3f2255bd826e13cf60209252f35b600435906001600160a01b0382168203610d2e57565b600080fd5b15610d3a57565b60405162461bcd60e51b815260206004820152602560248201527f563453656375726974794d6f64756c653a2063616c6c6572206973206e6f742060448201526437bbb732b960d91b6064820152608490fd5b6040810190811067ffffffffffffffff821117610da957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610da957604052565b60005b838110610df45750506000910152565b8181015183820152602001610de4565b9190604083820312610d2e5782518015158103610d2e5792602081015167ffffffffffffffff91828211610d2e57019082601f83011215610d2e578151908111610da95760405192610e60601f8301601f191660200185610dbf565b81845260208284010111610d2e57610e7e9160208085019101610de1565b90565b909160609260018060a01b0316825260406020830152610eb08151809281604086015260208686019101610de1565b601f01601f1916010190565b15610ec357565b60405162461bcd60e51b815260206004820152602660248201527f563453656375726974794d6f64756c653a2063616c6c6572206973206e6f742060448201526539b4b3b732b960d11b6064820152608490fd5b67ffffffffffffffff8111610da95760051b60200190565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6033546001600160a01b03163303610f8c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610fd757565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6066548110156110675760666000527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540190600090565b634e487b7160e01b600052603260045260246000fd5b60008181526067602052604081205490919080156111795760001990808201818111611165576066549083820191821161115157808203611106575b50505060665480156110f2578101906110d182611030565b909182549160031b1b19169055606655815260676020526040812055600190565b634e487b7160e01b84526031600452602484fd5b61113b61111561112493611030565b90549060031b1c928392611030565b819391549060031b91821b91600019901b19161790565b90558452606760205260408420553880806110b9565b634e487b7160e01b86526011600452602486fd5b634e487b7160e01b85526011600452602485fd5b505090565b6000818152606760205260408120546111e457606654680100000000000000008110156111d05790826111bc61112484600160409601606655611030565b905560665492815260676020522055600190565b634e487b7160e01b82526041600452602482fd5b90509056fea26469706673582212204bd81ed9ce4e5a70988ba4b423b3078ef511c0cc284fa2c15dd6bede12bf688864736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xB9349B9 EQ PUSH2 0xCDE JUMPI POP DUP1 PUSH4 0xE316AB7 EQ PUSH2 0xB74 JUMPI DUP1 PUSH4 0x21040FC3 EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x9ED JUMPI DUP1 PUSH4 0x4A4E3BD5 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x8DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x87E JUMPI DUP1 PUSH4 0x7DF73E27 EQ PUSH2 0x838 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x80F JUMPI DUP1 PUSH4 0x94CF795E EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0x960BFE04 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0xBE464464 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xE5006801 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xE75235B8 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xEB12D61E EQ PUSH2 0x172 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16E JUMPI PUSH2 0xF7 PUSH2 0xD18 JUMP JUMPDEST SWAP2 PUSH2 0x100 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x11C JUMPI DUP4 PUSH2 0x119 DUP5 PUSH2 0xF2F JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x22C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22C JUMPI POP PUSH2 0x18E PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x1A8 SWAP1 DUP4 AND CALLER EQ PUSH2 0xD33 JUMP JUMPDEST AND SWAP1 PUSH2 0x1C1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1D9 JUMPI PUSH1 0x20 DUP4 PUSH2 0x1D1 DUP5 PUSH2 0x117E JUMP JUMPDEST POP MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A207369676E657220616C7265616479 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20657869737473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x68 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24E JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x16E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16E JUMPI PUSH2 0x288 PUSH2 0xD18 JUMP JUMPDEST SWAP1 PUSH1 0x24 SWAP2 DUP3 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP6 GT PUSH2 0x503 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x503 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x503 JUMPI CALLDATASIZE DUP3 DUP6 DUP8 ADD ADD GT PUSH2 0x503 JUMPI DUP7 SLOAD SWAP4 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO SWAP5 DUP6 DUP1 SWAP7 PUSH2 0x4F6 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x4DF JUMPI JUMPDEST ISZERO PUSH2 0x486 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP10 SSTORE DUP6 PUSH2 0x475 JUMPI JUMPDEST POP PUSH1 0x20 SWAP6 DUP7 DUP3 SUB PUSH2 0x41D JUMPI DUP4 ADD CALLDATALOAD SWAP1 DUP7 DUP2 LT PUSH2 0x40C JUMPI JUMPDEST POP DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP5 SWAP1 PUSH2 0x330 SWAP1 PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0x32B DUP2 PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0xFD0 JUMP JUMPDEST PUSH2 0x339 CALLER PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x342 DUP6 PUSH2 0xF2F JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3B3 JUMPI POP POP SWAP1 PUSH2 0x36E SWAP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x65 SLOAD AND OR PUSH1 0x65 SSTORE PUSH2 0x117E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x68 SSTORE PUSH2 0x37C JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP2 PUSH2 0xFF00 NOT DUP5 SLOAD AND DUP5 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A20746F6B656E206164647265737320 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x63616E6E6F74206265207A65726F PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT SWAP1 DUP8 SUB PUSH1 0x3 SHL SHL AND CODESIZE PUSH2 0x308 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x2D DUP2 DUP7 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A20696E76616C696420696E69746961 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6C697A6174696F6E2064617461 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP9 SSTORE CODESIZE PUSH2 0x2F1 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x2E DUP2 DUP7 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DC JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x2DC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x2D5 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16E JUMPI CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x16E JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x21040FC3 PUSH1 0xE0 SHL DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x60B JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5FA JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5E9 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5D8 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5C7 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5B6 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x5A5 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x594 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x583 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4A4E3BD5 PUSH1 0xE0 SHL EQ SWAP2 POP CODESIZE PUSH2 0x57A JUMP JUMPDEST PUSH4 0x51858E27 PUSH1 0xE0 SHL DUP2 EQ SWAP3 POP PUSH2 0x573 JUMP JUMPDEST PUSH4 0x4A67BCAF PUSH1 0xE1 SHL DUP2 EQ SWAP3 POP PUSH2 0x56C JUMP JUMPDEST PUSH4 0x1CEA46B7 PUSH1 0xE3 SHL DUP2 EQ SWAP3 POP PUSH2 0x565 JUMP JUMPDEST PUSH4 0x7DF73E27 PUSH1 0xE0 SHL DUP2 EQ SWAP3 POP PUSH2 0x55E JUMP JUMPDEST PUSH4 0x2582FF81 PUSH1 0xE2 SHL DUP2 EQ SWAP3 POP PUSH2 0x557 JUMP JUMPDEST PUSH4 0xE316AB7 PUSH1 0xE0 SHL DUP2 EQ SWAP3 POP PUSH2 0x550 JUMP JUMPDEST PUSH4 0x75896B0F PUSH1 0xE1 SHL DUP2 EQ SWAP3 POP PUSH2 0x549 JUMP JUMPDEST PUSH4 0xE5006801 PUSH1 0xE0 SHL DUP2 EQ SWAP3 POP PUSH2 0x542 JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x22C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22C JUMPI POP DUP2 CALLDATALOAD PUSH2 0x647 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x33 SLOAD AND CALLER EQ PUSH2 0xD33 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B3 JUMPI PUSH1 0x66 SLOAD DUP2 GT PUSH2 0x664 JUMPI PUSH1 0x20 SWAP3 POP PUSH1 0x68 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A207468726573686F6C6420746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xD0D2CED PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A207468726573686F6C642063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6F74206265207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI DUP3 SWAP1 PUSH1 0x66 SWAP3 PUSH1 0x66 SLOAD SWAP2 PUSH2 0x72E DUP4 PUSH2 0xF17 JUMP JUMPDEST SWAP1 PUSH2 0x73B DUP6 MLOAD SWAP3 DUP4 PUSH2 0xDBF JUMP JUMPDEST DUP4 DUP3 MSTORE PUSH2 0x747 DUP5 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x20 SWAP7 DUP4 DUP9 ADD SWAP6 SWAP2 PUSH1 0x1F NOT ADD CALLDATASIZE DUP8 CALLDATACOPY DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x7A7 JUMPI POP POP POP POP DUP4 MLOAD SWAP5 DUP6 SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x787 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x778 JUMP JUMPDEST DUP2 DUP7 SWAP6 SWAP8 SWAP9 SWAP10 SWAP7 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD SLOAD AND DUP8 MLOAD DUP3 LT ISZERO PUSH2 0x7FC JUMPI PUSH1 0x5 DUP3 SWAP1 SHL DUP9 ADD DUP8 ADD MSTORE SWAP5 SWAP8 SWAP7 SWAP6 SWAP4 SWAP5 PUSH1 0x1 ADD PUSH2 0x758 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x32 DUP6 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI PUSH1 0x33 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24E JUMPI PUSH1 0x20 SWAP1 PUSH2 0x875 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x861 PUSH2 0xD18 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x22C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22C JUMPI PUSH2 0x897 PUSH2 0xF78 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x16E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16E JUMPI SWAP2 DUP1 PUSH2 0x956 SWAP4 PUSH2 0x911 PUSH2 0x90C CALLER PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xEBC JUMP JUMPDEST DUP4 MLOAD PUSH4 0x8456CB59 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP2 MSTORE SWAP1 DUP3 SWAP1 PUSH2 0x92F DUP4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x65 SLOAD AND SWAP2 DUP3 SWAP2 DUP8 MLOAD SWAP9 DUP10 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH3 0xAC0F6F PUSH1 0xE7 SHL DUP6 MSTORE DUP5 ADD PUSH2 0xE81 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x992 JUMPI PUSH1 0x20 SWAP4 PUSH2 0x972 JUMPI JUMPDEST POP POP MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x98D SWAP2 RETURNDATASIZE DUP1 SWAP2 DUP4 RETURNDATACOPY PUSH2 0x985 DUP2 DUP4 PUSH2 0xDBF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x16E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x16E JUMPI SWAP2 DUP1 PUSH2 0x956 SWAP4 PUSH2 0x9CF PUSH2 0x90C CALLER PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x1FA5D41D PUSH1 0xE1 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP2 MSTORE SWAP1 DUP3 SWAP1 PUSH2 0x92F DUP4 PUSH2 0xD8D JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI PUSH1 0x65 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x24E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24E JUMPI PUSH2 0xA32 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xA4B SWAP1 DUP3 AND CALLER EQ PUSH2 0xD33 JUMP JUMPDEST DUP1 DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0xB16 JUMPI PUSH2 0xA5E SWAP1 PUSH2 0xF2F JUMP JUMPDEST DUP3 MLOAD SWAP2 PUSH4 0xF2FDE38B PUSH1 0xE0 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x24 DUP3 MSTORE PUSH1 0x60 DUP3 ADD SWAP5 DUP3 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0xB03 JUMPI POP DUP5 DUP4 MSTORE PUSH1 0x65 SLOAD PUSH3 0xAC0F6F PUSH1 0xE7 SHL DUP7 MSTORE DUP5 SWAP2 DUP7 SWAP2 AND DUP2 DUP4 PUSH1 0x5F NOT DUP7 PUSH2 0xAB8 DUP2 DUP7 PUSH1 0x64 DUP3 ADD PUSH2 0xE81 JUMP JUMPDEST SUB ADD SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x20 SWAP5 PUSH2 0xAD4 JUMPI JUMPDEST POP POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 PUSH2 0xAF2 SWAP3 RETURNDATASIZE SWAP1 DUP2 DUP8 DUP6 RETURNDATACOPY PUSH2 0xAEA DUP3 DUP6 PUSH2 0xDBF JUMP JUMPDEST ADD ADD SWAP1 PUSH2 0xE04 JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A206E6577206F776E65722063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6F74206265207A65726F2061646472657373 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x22C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22C JUMPI POP PUSH2 0xB90 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 PUSH2 0xBAB CALLER DUP6 EQ PUSH2 0xD33 JUMP JUMPDEST AND SWAP2 PUSH2 0xBC4 DUP4 PUSH1 0x0 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xC8B JUMPI PUSH1 0x66 SLOAD PUSH1 0x68 SLOAD LT ISZERO PUSH2 0xC38 JUMPI DUP3 EQ PUSH2 0xBE7 JUMPI PUSH1 0x20 DUP4 PUSH2 0x1D1 DUP5 PUSH2 0x107D JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A2063616E6E6F742072656D6F766520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A20776F756C6420627265616B207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1C995CDA1BDB19 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A207369676E657220646F6573206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1D08195E1A5CDD PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x24E JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24E JUMPI DUP1 PUSH32 0xE8DFD5EDBAFE3B1A04DB54003F904CFC4610E36B1414906E3F2255BD826E13CF PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD2E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST ISZERO PUSH2 0xD3A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A2063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDA9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xDF4 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDE4 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 DUP4 DUP3 SUB SLT PUSH2 0xD2E JUMPI DUP3 MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xD2E JUMPI SWAP3 PUSH1 0x20 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xD2E JUMPI ADD SWAP1 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xD2E JUMPI DUP2 MLOAD SWAP1 DUP2 GT PUSH2 0xDA9 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE60 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xDBF JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0xD2E JUMPI PUSH2 0xE7E SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0xDE1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xEB0 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xEC3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x563453656375726974794D6F64756C653A2063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x39B4B3B732B9 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xDA9 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xF8C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0xFD7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x66 SLOAD DUP2 LT ISZERO PUSH2 0x1067 JUMPI PUSH1 0x66 PUSH1 0x0 MSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP1 ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 NOT SWAP1 DUP1 DUP3 ADD DUP2 DUP2 GT PUSH2 0x1165 JUMPI PUSH1 0x66 SLOAD SWAP1 DUP4 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x1151 JUMPI DUP1 DUP3 SUB PUSH2 0x1106 JUMPI JUMPDEST POP POP POP PUSH1 0x66 SLOAD DUP1 ISZERO PUSH2 0x10F2 JUMPI DUP2 ADD SWAP1 PUSH2 0x10D1 DUP3 PUSH2 0x1030 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x66 SSTORE DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH2 0x113B PUSH2 0x1115 PUSH2 0x1124 SWAP4 PUSH2 0x1030 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 PUSH2 0x1030 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE DUP5 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x11E4 JUMPI PUSH1 0x66 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x11D0 JUMPI SWAP1 DUP3 PUSH2 0x11BC PUSH2 0x1124 DUP5 PUSH1 0x1 PUSH1 0x40 SWAP7 ADD PUSH1 0x66 SSTORE PUSH2 0x1030 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x66 SLOAD SWAP3 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD8 0x1E 0xD9 0xCE 0x4E GAS PUSH17 0x988BA4B423B3078EF511C0CC284FA2C15D 0xD6 0xBE 0xDE SLT 0xBF PUSH9 0x8864736F6C63430008 AND STOP CALLER ","sourceMap":"526:4986:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5375:36;526:4986;5375:36;;;5042:34;526:4986;5042:34;;;526:4986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;:::i;:::-;1324:62:0;;;:::i;:::-;-1:-1:-1;;;;;526:4986:22;;2423:22:0;526:4986:22;;2517:8:0;;;;:::i;:::-;526:4986:22;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;;:::i;:::-;1534:6:0;526:4986:22;-1:-1:-1;;;;;526:4986:22;;3156:71;;526:4986;;3164:10;:21;3156:71;:::i;:::-;526:4986;8974:55:8;;;-1:-1:-1;526:4986:22;4362:12:8;526:4986:22;;;-1:-1:-1;526:4986:22;;4362:24:8;;4266:127;;8974:55;526:4986:22;;;8409:50:8;;;;:::i;:::-;;526:4986:22;3371:4;526:4986;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;;;;;;;;4496:10;526:4986;;;;;;;;;;;;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:14:1;3347:34;;;;;;526:4986:22;3346:108:1;;;;526:4986:22;;;;-1:-1:-1;;526:4986:22;;3551:1:1;526:4986:22;;;;3562:65:1;;526:4986:22;;;958:17;;;;526:4986;;1075:13;526:4986;;;;;;;;;-1:-1:-1;526:4986:22;;-1:-1:-1;;;;;526:4986:22;;;;;5366:69:1;;526:4986:22;;;;5366:69:1;526:4986:22;5366:69:1;:::i;:::-;;:::i;:::-;1216:12:0;965:10:7;1216:12:0;:::i;:::-;1146:5:22;;;:::i;:::-;526:4986;1179:26;;;526:4986;;;;;8409:50:8;526:4986:22;;;;1266:21;526:4986;;;1266:21;526:4986;8409:50:8;:::i;:::-;;3551:1:1;1335:14:22;526:4986;3647:99:1;;526:4986:22;;;3647:99:1;3721:14;526:4986:22;;;;;;;;;3551:1:1;526:4986:22;;3721:14:1;3647:99;;526:4986:22;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;3562:65:1;-1:-1:-1;;526:4986:22;;;;;3562:65:1;;;526:4986:22;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;3346:108:1;3426:4;;1713:19:6;:23;3387:66:1;;3346:108;3387:66;526:4986:22;3452:1:1;526:4986:22;;;3436:17:1;3346:108;;3347:34;526:4986:22;3380:1:1;526:4986:22;;;3365:16:1;3347:34;;526:4986:22;;;;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1608:66:22;;;:148;;;;526:4986;1608:215;;;;526:4986;1608:285;;;;526:4986;1608:355;;;;526:4986;1608:421;;;;526:4986;1608:491;;;;526:4986;1608:559;;;;526:4986;1608:631;;;;526:4986;1608:705;;;;526:4986;;;;;;;;;1608:705;-1:-1:-1;;;2255:58:22;;-1:-1:-1;1608:705:22;;;:631;-1:-1:-1;;;2183:56:22;;;-1:-1:-1;1608:631:22;;:559;-1:-1:-1;;;2115:52:22;;;-1:-1:-1;1608:559:22;;:491;-1:-1:-1;;;2045:54:22;;;-1:-1:-1;1608:491:22;;:421;-1:-1:-1;;;1979:50:22;;;-1:-1:-1;1608:421:22;;:355;-1:-1:-1;;;1909:54:22;;;-1:-1:-1;1608:355:22;;:285;-1:-1:-1;;;1839:54:22;;;-1:-1:-1;1608:285:22;;:215;-1:-1:-1;;;1772:51:22;;;-1:-1:-1;1608:215:22;;:148;-1:-1:-1;;;1690:66:22;;;-1:-1:-1;1608:148:22;;526:4986;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;;3964:71;526:4986;;;;;1534:6:0;526:4986:22;;3972:10;:21;3964:71;:::i;:::-;4053:13;;526:4986;;4144:8;526:4986;4131:30;;526:4986;;;;;4221:22;526:4986;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;;;;;;4622:8;;;526:4986;4622:8;526:4986;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;526:4986:22;;;;4721:13;4736:10;;;;;;526:4986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;526:4986:22;;;;;-1:-1:-1;526:4986:22;;;;;;;;;;;;4748:3;526:4986;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4721:13;;;;526:4986;;4721:13;;526:4986;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;;;;;;1534:6:0;526:4986:22;;;-1:-1:-1;;;;;526:4986:22;;;;;;;;;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;8974:55:8;-1:-1:-1;;;;;526:4986:22;;:::i;:::-;;-1:-1:-1;526:4986:22;4362:12:8;526:4986:22;;;-1:-1:-1;526:4986:22;;4362:24:8;;4266:127;;8974:55;526:4986:22;;;;;;;;;;;;;;;;;;;;;1324:62:0;;:::i;:::-;2779:6;526:4986:22;;-1:-1:-1;;;;;;526:4986:22;;;;;;;-1:-1:-1;;;;;526:4986:22;2827:40:0;526:4986:22;;2827:40:0;526:4986:22;;;;;;;;;;;;;;;4949:10;;5086:52;4949:10;4923:80;8974:55:8;4949:10:22;-1:-1:-1;526:4986:22;4362:12:8;526:4986:22;;;-1:-1:-1;526:4986:22;;4362:24:8;;4266:127;;8974:55;4923:80:22;:::i;:::-;526:4986;;-1:-1:-1;;;5042:34:22;;;;;;;526:4986;;;5042:34;526:4986;5042:34;:::i;:::-;526:4986;;;;;5099:6;526:4986;;;;;;;;;;;;;;;;;5086:52;;;;;:::i;:::-;;;;;;;;;;5042:34;5086:52;;;526:4986;;;;5164:4;526:4986;;;5086:52;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;526:4986;;;;;;;;;;;;;;;;;;;;;;;;5282:10;;5421:52;5282:10;5256:80;8974:55:8;5282:10:22;-1:-1:-1;526:4986:22;4362:12:8;526:4986:22;;;-1:-1:-1;526:4986:22;;4362:24:8;;4266:127;;5256:80:22;526:4986;;-1:-1:-1;;;5375:36:22;;;;;;;526:4986;;;5375:36;526:4986;5375:36;:::i;526:4986::-;;;;;;;;;;;;;;2408:6;526:4986;;;-1:-1:-1;;;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;:::i;:::-;1534:6:0;526:4986:22;-1:-1:-1;;;;;526:4986:22;2529:71;;526:4986;;2537:10;:21;2529:71;:::i;:::-;526:4986;;;2618:22;;;526:4986;;2733:8;;;:::i;:::-;526:4986;;2781:63;;;;526:4986;2781:63;;;;;;526:4986;2781:63;;;526:4986;;;;;;;;;;;;;-1:-1:-1;526:4986:22;;;2867:6;526:4986;-1:-1:-1;;;2854:52:22;;526:4986;;;;;;;-1:-1:-1;;2854:52:22;;;526:4986;2854:52;;;;:::i;:::-;;;;;;;;;;;526:4986;2854:52;;;526:4986;;;;;;;;2854:52;526:4986;2854:52;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;526:4986;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;2781:63;526:4986;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;-1:-1:-1;;526:4986:22;;;;;;;:::i;:::-;1534:6:0;526:4986:22;-1:-1:-1;;;;;526:4986:22;;;;;3473:71;3481:10;:21;;3473:71;:::i;:::-;526:4986;8974:55:8;;;-1:-1:-1;526:4986:22;4362:12:8;526:4986:22;;;-1:-1:-1;526:4986:22;;4362:24:8;;4266:127;;8974:55;526:4986:22;;;3562:8;526:4986;3669:10;526:4986;-1:-1:-1;526:4986:22;;;3741:17;;526:4986;;;8730:53:8;;;;:::i;526:4986:22:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;;;;;;1449:28;526:4986;;;;;;;;-1:-1:-1;;;;;526:4986:22;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;5375:36;526:4986;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;526:4986:22;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;526:4986:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;526:4986:22;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;;:::o;2687:187:0:-;2779:6;526:4986:22;;-1:-1:-1;;;;;526:4986:22;;;-1:-1:-1;;;;;;526:4986:22;;;;;;;;;;2827:40:0;-1:-1:-1;;2827:40:0;2687:187::o;1620:130::-;1534:6;526:4986:22;-1:-1:-1;;;;;526:4986:22;965:10:7;1683:23:0;526:4986:22;;1620:130:0:o;526:4986:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;526:4986:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;3562:8;526:4986;;;;;;3562:8;-1:-1:-1;526:4986:22;;;;-1:-1:-1;526:4986:22;:::o;:::-;;;;;;;;;;;;2797:1388:8;-1:-1:-1;526:4986:22;;;3000:12:8;526:4986:22;;;;;;-1:-1:-1;;526:4986:22;3034:15:8;;;;-1:-1:-1;;526:4986:22;;;;;;;;;3562:8;526:4986;;;;;;;;;;3516:26:8;;;3512:398;;3030:1149;526:4986:22;;;3562:8;526:4986;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3562:8;526:4986;;;3000:12:8;526:4986:22;;;;;;3000:12:8;4114:11;:::o;526:4986:22:-;-1:-1:-1;;;526:4986:22;;;;;;;;3512:398:8;526:4986:22;3582:22:8;3704:26;3582:22;;:::i;:::-;526:4986:22;;;;;;3704:26:8;;;;:::i;:::-;526:4986:22;;;;;;;;;;;;;;;;;;;;;;;;;3000:12:8;526:4986:22;;;;;;3512:398:8;;;;;526:4986:22;-1:-1:-1;;;526:4986:22;;;;;;;;;-1:-1:-1;;;526:4986:22;;;;;;;;3030:1149:8;4156:12;;;:::o;2225:404::-;-1:-1:-1;526:4986:22;;;4362:12:8;526:4986:22;;;;;;;;1306:8;526:4986;;;;;;;;;;;;4362:12:8;526:4986:22;;;1306:8;526:4986;;:::i;:::-;;;1306:8;526:4986;;;;4362:12:8;526:4986:22;;;;4362:12:8;2558:11;:::o;526:4986:22:-;-1:-1:-1;;;526:4986:22;;;;;;;;2304:319:8;2600:12;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"927800","executionCost":"970","totalCost":"928770"},"external":{"addSigner(address)":"82135","confirmOwnershipTransfer(bytes32)":"457","emergencyPause()":"infinite","emergencyUnpause()":"infinite","getModuleType()":"168","getSigners()":"infinite","getThreshold()":"2585","getToken()":"2364","initialize(address,bytes)":"infinite","isSigner(address)":"2609","owner()":"2474","proposeOwnershipTransfer(address)":"infinite","removeSigner(address)":"51944","renounceOwnership()":"28213","setThreshold(uint256)":"26812","supportsFunction(bytes4)":"949","transferOwnership(address)":"28585"}},"methodIdentifiers":{"addSigner(address)":"eb12d61e","confirmOwnershipTransfer(bytes32)":"e5006801","emergencyPause()":"51858e27","emergencyUnpause()":"4a4e3bd5","getModuleType()":"0b9349b9","getSigners()":"94cf795e","getThreshold()":"e75235b8","getToken()":"21df0da7","initialize(address,bytes)":"d1f57894","isSigner(address)":"7df73e27","owner()":"8da5cb5b","proposeOwnershipTransfer(address)":"21040fc3","removeSigner(address)":"0e316ab7","renounceOwnership()":"715018a6","setThreshold(uint256)":"960bfe04","supportsFunction(bytes4)":"be464464","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"confirmOwnershipTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyUnpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModuleType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"proposeOwnershipTransfer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"supportsFunction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of security module with multi-sig capabilities\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addSigner(address)\":{\"details\":\"Add a new signer to the multi-sig configuration\",\"params\":{\"signer\":\"Address to add as a signer\"},\"returns\":{\"_0\":\"success Whether the signer was successfully added\"}},\"emergencyPause()\":{\"details\":\"Emergency pause for the token\",\"returns\":{\"_0\":\"success Whether the pause was successful\"}},\"emergencyUnpause()\":{\"details\":\"Unpause the token after emergency\",\"returns\":{\"_0\":\"success Whether the unpause was successful\"}},\"getModuleType()\":{\"details\":\"Get the type of this module\",\"returns\":{\"_0\":\"moduleType Type identifier for this module\"}},\"getSigners()\":{\"details\":\"Get all current signers\",\"returns\":{\"_0\":\"signers Array of current signer addresses\"}},\"getThreshold()\":{\"details\":\"Get the current signature threshold\",\"returns\":{\"_0\":\"threshold The current signature threshold\"}},\"getToken()\":{\"details\":\"Get the token this module is attached to\",\"returns\":{\"_0\":\"tokenAddress Address of the token\"}},\"initialize(address,bytes)\":{\"details\":\"Initialize the module\",\"params\":{\"data\":\"Additional initialization data\",\"tokenAddress\":\"Address of the token this module is attached to\"}},\"isSigner(address)\":{\"details\":\"Check if an address is a signer\",\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"isSigner Whether the address is a signer\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposeOwnershipTransfer(address)\":{\"details\":\"Propose a new owner (multi-sig process step 1)\",\"params\":{\"newOwner\":\"Address of the proposed new owner\"},\"returns\":{\"_0\":\"proposalId Identifier for the ownership transfer proposal\"}},\"removeSigner(address)\":{\"details\":\"Remove a signer from the multi-sig configuration\",\"params\":{\"signer\":\"Address to remove from signers\"},\"returns\":{\"_0\":\"success Whether the signer was successfully removed\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setThreshold(uint256)\":{\"details\":\"Set the required number of signatures for operations\",\"params\":{\"threshold\":\"Number of required signatures\"},\"returns\":{\"_0\":\"success Whether the threshold was successfully set\"}},\"supportsFunction(bytes4)\":{\"details\":\"Check if this module has a specific function\",\"params\":{\"functionSig\":\"Function signature to check for\"},\"returns\":{\"_0\":\"hasFunction Whether the module implements the function\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"V4SecurityModule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/V4SecurityModule.sol\":\"V4SecurityModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSetUpgradeable {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastValue;\\n                // Update the index for the moved value\\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\"},\"src/contracts/V4SecurityModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\\\";\\nimport \\\"./interfaces/IV4SecurityModule.sol\\\";\\nimport \\\"./interfaces/IV4Module.sol\\\";\\nimport \\\"./interfaces/IV4TokenBase.sol\\\";\\n\\n/**\\n * @title V4SecurityModule\\n * @dev Implementation of security module with multi-sig capabilities\\n */\\ncontract V4SecurityModule is \\n    Initializable, \\n    OwnableUpgradeable,\\n    IV4SecurityModule,\\n    IV4Module\\n{\\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\\n    \\n    address private _token;\\n    EnumerableSetUpgradeable.AddressSet private _signers;\\n    uint256 private _threshold;\\n    \\n    function initialize(address tokenAddress, bytes calldata data) external override initializer {\\n        require(data.length == 32, \\\"V4SecurityModule: invalid initialization data\\\");\\n        address owner = address(uint160(uint256(bytes32(data))));\\n        __Ownable_init();\\n        _transferOwnership(owner);\\n        \\n        require(tokenAddress != address(0), \\\"V4SecurityModule: token address cannot be zero\\\");\\n        _token = tokenAddress;\\n        \\n        _signers.add(owner);\\n        _threshold = 1;\\n    }\\n    \\n    function getModuleType() external pure override returns (bytes32) {\\n        return keccak256(\\\"SECURITY_MODULE\\\");\\n    }\\n    \\n    function supportsFunction(bytes4 functionSig) external pure override returns (bool) {\\n        return \\n            functionSig == IV4SecurityModule.proposeOwnershipTransfer.selector ||\\n            functionSig == IV4SecurityModule.confirmOwnershipTransfer.selector ||\\n            functionSig == IV4SecurityModule.addSigner.selector ||\\n            functionSig == IV4SecurityModule.removeSigner.selector ||\\n            functionSig == IV4SecurityModule.setThreshold.selector ||\\n            functionSig == IV4SecurityModule.isSigner.selector ||\\n            functionSig == IV4SecurityModule.getThreshold.selector ||\\n            functionSig == IV4SecurityModule.getSigners.selector ||\\n            functionSig == IV4SecurityModule.emergencyPause.selector ||\\n            functionSig == IV4SecurityModule.emergencyUnpause.selector;\\n    }\\n    \\n    function getToken() external view override returns (address) {\\n        return _token;\\n    }\\n    \\n    function proposeOwnershipTransfer(address newOwner) external override returns (bytes32) {\\n        require(msg.sender == owner(), \\\"V4SecurityModule: caller is not owner\\\");\\n        require(newOwner != address(0), \\\"V4SecurityModule: new owner cannot be zero address\\\");\\n        \\n        _transferOwnership(newOwner);\\n        \\n        bytes memory data = abi.encodeWithSignature(\\\"transferOwnership(address)\\\", newOwner);\\n        IV4TokenBase(_token).executeFromModule(_token, data);\\n        \\n        return bytes32(0);\\n    }\\n    \\n    function confirmOwnershipTransfer(bytes32) external pure override returns (bool) {\\n        return true;\\n    }\\n    \\n    function addSigner(address signer) external override returns (bool) {\\n        require(msg.sender == owner(), \\\"V4SecurityModule: caller is not owner\\\");\\n        require(!_signers.contains(signer), \\\"V4SecurityModule: signer already exists\\\");\\n        \\n        _signers.add(signer);\\n        return true;\\n    }\\n    \\n    function removeSigner(address signer) external override returns (bool) {\\n        require(msg.sender == owner(), \\\"V4SecurityModule: caller is not owner\\\");\\n        require(_signers.contains(signer), \\\"V4SecurityModule: signer does not exist\\\");\\n        require(_signers.length() > _threshold, \\\"V4SecurityModule: would break threshold\\\");\\n        require(signer != owner(), \\\"V4SecurityModule: cannot remove owner\\\");\\n        \\n        _signers.remove(signer);\\n        return true;\\n    }\\n    \\n    function setThreshold(uint256 threshold) external override returns (bool) {\\n        require(msg.sender == owner(), \\\"V4SecurityModule: caller is not owner\\\");\\n        require(threshold > 0, \\\"V4SecurityModule: threshold cannot be zero\\\");\\n        require(threshold <= _signers.length(), \\\"V4SecurityModule: threshold too high\\\");\\n        \\n        _threshold = threshold;\\n        return true;\\n    }\\n    \\n    function isSigner(address account) external view override returns (bool) {\\n        return _signers.contains(account);\\n    }\\n    \\n    function getThreshold() external view override returns (uint256) {\\n        return _threshold;\\n    }\\n    \\n    function getSigners() external view override returns (address[] memory) {\\n        uint256 length = _signers.length();\\n        address[] memory signers = new address[](length);\\n        \\n        for (uint256 i = 0; i < length; i++) {\\n            signers[i] = _signers.at(i);\\n        }\\n        \\n        return signers;\\n    }\\n    \\n    function emergencyPause() external override returns (bool) {\\n        require(_signers.contains(msg.sender), \\\"V4SecurityModule: caller is not signer\\\");\\n        \\n        bytes memory data = abi.encodeWithSignature(\\\"pause()\\\");\\n        IV4TokenBase(_token).executeFromModule(_token, data);\\n        \\n        return true;\\n    }\\n    \\n    function emergencyUnpause() external override returns (bool) {\\n        require(_signers.contains(msg.sender), \\\"V4SecurityModule: caller is not signer\\\");\\n        \\n        bytes memory data = abi.encodeWithSignature(\\\"unpause()\\\");\\n        IV4TokenBase(_token).executeFromModule(_token, data);\\n        \\n        return true;\\n    }\\n} \",\"keccak256\":\"0x7433c15f58ea9807c9f293a106a9a4a92fb7bcc823d590df52cffd27bf19ca57\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4Module.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4Module\\n * @dev Interface for all V4 modules\\n */\\ninterface IV4Module {\\n    /**\\n     * @dev Initialize the module\\n     * @param tokenAddress Address of the token this module is attached to\\n     * @param data Additional initialization data\\n     */\\n    function initialize(address tokenAddress, bytes calldata data) external;\\n    \\n    /**\\n     * @dev Get the type of this module\\n     * @return moduleType Type identifier for this module\\n     */\\n    function getModuleType() external pure returns (bytes32);\\n    \\n    /**\\n     * @dev Check if this module has a specific function\\n     * @param functionSig Function signature to check for\\n     * @return hasFunction Whether the module implements the function\\n     */\\n    function supportsFunction(bytes4 functionSig) external pure returns (bool);\\n    \\n    /**\\n     * @dev Get the token this module is attached to\\n     * @return tokenAddress Address of the token\\n     */\\n    function getToken() external view returns (address);\\n} \",\"keccak256\":\"0xbfa89c396644cc001c310540892c7b0156d548f31e610cc02fd3239fc732fd71\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4SecurityModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4SecurityModule\\n * @dev Interface for the security module with multi-sig capabilities\\n */\\ninterface IV4SecurityModule {\\n    /**\\n     * @dev Propose a new owner (multi-sig process step 1)\\n     * @param newOwner Address of the proposed new owner\\n     * @return proposalId Identifier for the ownership transfer proposal\\n     */\\n    function proposeOwnershipTransfer(address newOwner) external returns (bytes32);\\n    \\n    /**\\n     * @dev Confirm an ownership transfer proposal (multi-sig process step 2)\\n     * @param proposalId Identifier of the proposal to confirm\\n     * @return success Whether the ownership was successfully transferred\\n     */\\n    function confirmOwnershipTransfer(bytes32 proposalId) external returns (bool);\\n    \\n    /**\\n     * @dev Add a new signer to the multi-sig configuration\\n     * @param signer Address to add as a signer\\n     * @return success Whether the signer was successfully added\\n     */\\n    function addSigner(address signer) external returns (bool);\\n    \\n    /**\\n     * @dev Remove a signer from the multi-sig configuration\\n     * @param signer Address to remove from signers\\n     * @return success Whether the signer was successfully removed\\n     */\\n    function removeSigner(address signer) external returns (bool);\\n    \\n    /**\\n     * @dev Set the required number of signatures for operations\\n     * @param threshold Number of required signatures\\n     * @return success Whether the threshold was successfully set\\n     */\\n    function setThreshold(uint256 threshold) external returns (bool);\\n    \\n    /**\\n     * @dev Check if an address is a signer\\n     * @param account Address to check\\n     * @return isSigner Whether the address is a signer\\n     */\\n    function isSigner(address account) external view returns (bool);\\n    \\n    /**\\n     * @dev Get the current signature threshold\\n     * @return threshold The current signature threshold\\n     */\\n    function getThreshold() external view returns (uint256);\\n    \\n    /**\\n     * @dev Get all current signers\\n     * @return signers Array of current signer addresses\\n     */\\n    function getSigners() external view returns (address[] memory);\\n    \\n    /**\\n     * @dev Emergency pause for the token\\n     * @return success Whether the pause was successful\\n     */\\n    function emergencyPause() external returns (bool);\\n    \\n    /**\\n     * @dev Unpause the token after emergency\\n     * @return success Whether the unpause was successful\\n     */\\n    function emergencyUnpause() external returns (bool);\\n} \",\"keccak256\":\"0xcda8a7d7ccac4ee4ede2e5b8c3faf47bb12bc092b270d7b3fad9bbf7112cbf67\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4TokenBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4TokenBase\\n * @dev Interface for the V4 token base\\n */\\ninterface IV4TokenBase {\\n    /**\\n     * @dev Initialize the token with basic parameters\\n     * @param name_ Token name\\n     * @param symbol_ Token symbol\\n     * @param initialSupply Initial supply to mint\\n     * @param owner_ Address that will receive the initial supply and become the owner\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupply,\\n        address owner_\\n    ) external;\\n    \\n    /**\\n     * @dev Add a module to the token\\n     * @param moduleAddress Address of the module to add\\n     * @param data Initialization data for the module\\n     * @return success Whether the module was successfully added\\n     */\\n    function addModule(address moduleAddress, bytes calldata data) external returns (bool);\\n    \\n    /**\\n     * @dev Remove a module from the token\\n     * @param moduleAddress Address of the module to remove\\n     * @return success Whether the module was successfully removed\\n     */\\n    function removeModule(address moduleAddress) external returns (bool);\\n    \\n    /**\\n     * @dev Check if a module is active\\n     * @param moduleAddress Address of the module to check\\n     * @return isActive Whether the module is active\\n     */\\n    function isModuleActive(address moduleAddress) external view returns (bool);\\n    \\n    /**\\n     * @dev Get all active modules\\n     * @return modules Array of active module addresses\\n     */\\n    function getModules() external view returns (address[] memory);\\n    \\n    /**\\n     * @dev Execute a function call from a module\\n     * @param target Target address for the call\\n     * @param data Call data\\n     * @return success Whether the call was successful\\n     * @return returnData Data returned by the call\\n     */\\n    function executeFromModule(address target, bytes calldata data) external returns (bool, bytes memory);\\n    \\n    /**\\n     * @dev Pause the token\\n     */\\n    function pause() external;\\n    \\n    /**\\n     * @dev Unpause the token\\n     */\\n    function unpause() external;\\n    \\n    /**\\n     * @dev Transfer ownership of the token\\n     * @param newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) external;\\n\\n    /**\\n     * @dev Get the current owner of the token\\n     * @return The address of the current owner\\n     */\\n    function owner() external view returns (address);\\n} \",\"keccak256\":\"0xdef03abd1361f901042d1e4fbd58ca222d1956f036d593e5278ba00e3875b9d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1525,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":11,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":131,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"},{"astId":4409,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_token","offset":0,"slot":"101","type":"t_address"},{"astId":4412,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_signers","offset":0,"slot":"102","type":"t_struct(AddressSet)1852_storage"},{"astId":4414,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_threshold","offset":0,"slot":"104","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)1852_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.AddressSet","members":[{"astId":1851,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)1537_storage"}],"numberOfBytes":"64"},"t_struct(Set)1537_storage":{"encoding":"inplace","label":"struct EnumerableSetUpgradeable.Set","members":[{"astId":1532,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":1536,"contract":"src/contracts/V4SecurityModule.sol:V4SecurityModule","label":"_indexes","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/V4TokenBase.sol":{"V4TokenBase":{"abi":[{"inputs":[],"name":"ModuleDoesNotExist","type":"error"},{"inputs":[],"name":"ModuleExists","type":"error"},{"inputs":[],"name":"PermissionDenied","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"moduleAddress","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"addModule","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeFromModule","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getModules","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"owner_","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"moduleAddress","type":"address"}],"name":"isModuleActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"moduleAddress","type":"address"}],"name":"removeModule","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Base implementation for V4 tokens with modular architecture","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"addModule(address,bytes)":{"details":"Add a module to the token","params":{"data":"Initialization data for the module","moduleAddress":"Address of the module to add"},"returns":{"_0":"success Whether the module was successfully added"}},"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"executeFromModule(address,bytes)":{"details":"Execute a function call from a module","params":{"data":"Call data","target":"Target address for the call"},"returns":{"returnData":"Data returned by the call","success":"Whether the call was successful"}},"getModules()":{"details":"Get all active modules","returns":{"_0":"modules Array of active module addresses"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"initialize(string,string,uint256,address)":{"details":"Initialize the token with basic parameters","params":{"initialSupply":"Initial supply to mint","name_":"Token name","owner_":"Address that will receive the initial supply and become the owner","symbol_":"Token symbol"}},"isModuleActive(address)":{"details":"Check if a module is active","params":{"moduleAddress":"Address of the module to check"},"returns":{"_0":"isActive Whether the module is active"}},"name()":{"details":"Returns the name of the token."},"pause()":{"details":"Pause the token"},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"removeModule(address)":{"details":"Remove a module from the token","params":{"moduleAddress":"Address of the module to remove"},"returns":{"_0":"success Whether the module was successfully removed"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"unpause()":{"details":"Unpause the token"}},"title":"V4TokenBase","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608080604052346100165761178f908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461100157508063095ea7b314610fdb57806318160ddd14610fbd57806323b872dd14610eff5780632dd3a78c14610ed4578063313ce56714610eb85780633950935114610e675780633f4ba83a14610dc45780635607b78014610d355780635c975abb14610d1257806370a0823114610cd8578063715018a614610c7b5780638456cb5914610bc75780638da5cb5b14610b9e57806395d89b4114610ac9578063a063246114610978578063a457c2d7146108d1578063a9059cbb146108a0578063b2494df3146107d8578063bd3a13f614610248578063d21b9fbd14610209578063dd62ed3e146101b85763f2fde38b1461011c57600080fd5b346101b35760203660031901126101b3576101356110da565b61013d611618565b610145611618565b6001600160a01b0381161561015f5761015d90611670565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101b35760403660031901126101b3576101d16110da565b6101d96110f0565b9060018060a01b038091166000526034602052604060002091166000526020526020604060002054604051908152f35b346101b35760203660031901126101b3576001600160a01b0361022a6110da565b1660005260c9602052602060ff604060002054166040519015158152f35b346101b35760803660031901126101b35760043567ffffffffffffffff81116101b3576102799036906004016111a1565b60243567ffffffffffffffff81116101b3576102999036906004016111a1565b6064356001600160a01b03811690036101b3576000549060ff8260081c1615918280936107cb575b80156107b4575b156107585760ff19811660011760005582610746575b506102f960ff60005460081c166102f4816116b9565b6116b9565b825167ffffffffffffffff8111610648576103156036546111e8565b601f81116106dd575b506020601f8211600114610669578192939460009261065e575b50508160011b916000199060031b1c1916176036555b80519067ffffffffffffffff821161064857819061036d6037546111e8565b601f81116105d1575b50602090601f83116001146105595760009261054e575b50508160011b916000199060031b1c1916176037555b6103b860ff60005460081c166102f4816116b9565b6103c133611670565b6103d660ff60005460081c166102f4816116b9565b60ff19609754166097556103eb606435611670565b604435610431575b6103f957005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b6064356001600160a01b0316156105095760ff609754166104b35761045a60443560355461138f565b6035556064356001600160a01b03166000818152603360209081526040808320805460443590810190915590519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a36103f3565b60405162461bcd60e51b815260206004820152602860248201527f5634546f6b656e426173653a20746f6b656e207472616e73666572207768696c60448201526719481c185d5cd95960c21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b01519050838061038d565b9250603760005260008051602061173a833981519152906000935b601f19841685106105b6576001945083601f1981161061059d575b505050811b016037556103a3565b015160001960f88460031b161c1916905583808061058f565b81810151835560209485019460019093019290910190610574565b9091506037600052601f830160051c60008051602061173a833981519152019060208410610632575b90601f8493920160051c60008051602061173a83398151915201905b8181106106235750610376565b60008155849350600101610616565b60008051602061173a83398151915291506105fa565b634e487b7160e01b600052604160045260246000fd5b015190508480610338565b603660005260008051602061171a8339815191529060005b601f19841681106106c55750600193949583601f198116106106ac575b505050811b0160365561034e565b015160001960f88460031b161c1916905584808061069e565b9091602060018192858a015181550193019101610681565b6036600052601f820160051c60008051602061171a8339815191520160208310610731575b601f820160051c60008051602061171a833981519152018110610725575061031e565b60008155600101610702565b5060008051602061171a833981519152610702565b61ffff191661010117600055836102de565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156102c85750600160ff8216146102c8565b50600160ff8216106102c1565b346101b35760003660031901126101b3576040518060ca548083526020809301809160ca6000527f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee19060005b8682821061088357868661083a82880383611163565b604051928392818401908285525180915260408401929160005b82811061086357505050500390f35b83516001600160a01b031685528695509381019392810192600101610854565b83546001600160a01b031685529093019260019283019201610824565b346101b35760403660031901126101b3576108c66108bc6110da565b602435903361149e565b602060405160018152f35b346101b35760403660031901126101b3576108ea6110da565b60243590336000526034602052604060002060018060a01b03821660005260205260406000205491808310610925576108c69203903361139c565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b346101b35760203660031901126101b3576109916110da565b610999611618565b6001600160a01b03908116600081815260c9602052604090205460ff1615610ab757600081815260c960205260408120805460ff19169055905b60ca9182549283821015610aad578493836109ed84611222565b979054600398891b1c1614610a0a575092935060010191506109d3565b9093925060001991828201918211610a9757610a3984610a2c610a5794611222565b905490891b1c1691611222565b90919060018060a01b038084549260031b9316831b921b1916179055565b82548015610a81570192610a6a84611222565b81939154921b1b1916905555602060405160018152f35b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b50505050506108c6565b604051630286c71d60e01b8152600490fd5b346101b35760003660031901126101b357604051603754600082610aec836111e8565b9182825260209360019085600182169182600014610b7e575050600114610b33575b50610b1b92500383611163565b610b2f60405192828493845283019061109a565b0390f35b849150603760005260008051602061173a833981519152906000915b858310610b66575050610b1b935082010185610b0e565b80548389018501528794508693909201918101610b4f565b60ff191685820152610b1b95151560051b8501019250879150610b0e9050565b346101b35760003660031901126101b3576065546040516001600160a01b039091168152602090f35b346101b35760003660031901126101b3573360005260c960205260ff6040600020541615610c695760975460ff8116610c315760019060ff1916176097557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b604051630782484160e21b8152600490fd5b346101b35760003660031901126101b357610c94611618565b606580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101b35760203660031901126101b3576001600160a01b03610cf96110da565b1660005260336020526020604060002054604051908152f35b346101b35760003660031901126101b357602060ff609754166040519015158152f35b346101b357610d4336611106565b913360005260c960205260ff6040600020541615610c695782600080949381946040519384928337810182815203925af13d15610dbc573d90610d8582611185565b91610d936040519384611163565b82523d6000602084013e5b610b2f6040519283921515835260406020840152604083019061109a565b606090610d9e565b346101b35760003660031901126101b3573360005260c960205260ff6040600020541615610c695760975460ff811615610e2b5760ff19166097557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b346101b35760403660031901126101b3576108c6610e836110da565b336000526034602052604060002060018060a01b038216600052602052610eb160243560406000205461138f565b903361139c565b346101b35760003660031901126101b357602060405160128152f35b346101b3576020610ef5610ee736611106565b91610ef0611618565b61126f565b6040519015158152f35b346101b35760603660031901126101b357610f186110da565b610f206110f0565b6044359060018060a01b0383166000526034602052604060002033600052602052604060002054926000198403610f5c575b6108c6935061149e565b828410610f7857610f73836108c69503338361139c565b610f52565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b346101b35760003660031901126101b3576020603554604051908152f35b346101b35760403660031901126101b3576108c6610ff76110da565b602435903361139c565b346101b35760003660031901126101b357603654600082611021836111e8565b9182825260209360019085600182169182600014610b7e57505060011461104f5750610b1b92500383611163565b849150603660005260008051602061171a833981519152906000915b858310611082575050610b1b935082010185610b0e565b8054838901850152879450869390920191810161106b565b919082519283825260005b8481106110c6575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016110a5565b600435906001600160a01b03821682036101b357565b602435906001600160a01b03821682036101b357565b60406003198201126101b3576004356001600160a01b03811681036101b3579160243567ffffffffffffffff928382116101b357806023830112156101b35781600401359384116101b357602484830101116101b3576024019190565b90601f8019910116810190811067ffffffffffffffff82111761064857604052565b67ffffffffffffffff811161064857601f01601f191660200190565b81601f820112156101b3578035906111b882611185565b926111c66040519485611163565b828452602083830101116101b357816000926020809301838601378301015290565b90600182811c92168015611218575b602083101461120257565b634e487b7160e01b600052602260045260246000fd5b91607f16916111f7565b60ca548110156112595760ca6000527f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee10190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116600081815260c960205260408082205493959194909360ff1661137e57823b1561137a5781606486928651948593849263347d5e2560e21b8452306004850152896024850152816044850152848401378181018301859052601f01601f1916810103018183865af1908161134b575b506112f4575050905090565b825260c96020528120805460ff1916600117905560ca549068010000000000000000821015611337575090610a39826001611332940160ca55611222565b600190565b634e487b7160e01b81526041600452602490fd5b67ffffffffffffffff819592951161136657835292386112e8565b634e487b7160e01b82526041600452602482fd5b8480fd5b835163bdf91dc160e01b8152600490fd5b91908201809211610a9757565b6001600160a01b0390811691821561144d57169182156113fd5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b039081169182156115c557169182156115745760ff609754166104b3576000828152603360205260408120549180831061152057604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6065546001600160a01b0316330361162c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b606580546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156116c057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfe4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b842a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31aea2646970667358221220a9006a5e4ba36a7c99d0e3a0717cba938d8c5f08a9b821ed0df07f2cdea2ffe664736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x178F SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x1001 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFDB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFBD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEFF JUMPI DUP1 PUSH4 0x2DD3A78C EQ PUSH2 0xED4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xEB8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xE67 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xDC4 JUMPI DUP1 PUSH4 0x5607B780 EQ PUSH2 0xD35 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xD12 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCD8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC7B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xBC7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xAC9 JUMPI DUP1 PUSH4 0xA0632461 EQ PUSH2 0x978 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x8D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8A0 JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xBD3A13F6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xD21B9FBD EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B8 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x135 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x15F JUMPI PUSH2 0x15D SWAP1 PUSH2 0x1670 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x1D1 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x22A PUSH2 0x10DA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B3 JUMPI PUSH2 0x279 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B3 JUMPI PUSH2 0x299 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x1B3 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO SWAP2 DUP3 DUP1 SWAP4 PUSH2 0x7CB JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x7B4 JUMPI JUMPDEST ISZERO PUSH2 0x758 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP3 PUSH2 0x746 JUMPI JUMPDEST POP PUSH2 0x2F9 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x2F4 DUP2 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x16B9 JUMP JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x648 JUMPI PUSH2 0x315 PUSH1 0x36 SLOAD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x6DD JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x669 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x65E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x36 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x648 JUMPI DUP2 SWAP1 PUSH2 0x36D PUSH1 0x37 SLOAD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x5D1 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x559 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x54E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x37 SSTORE JUMPDEST PUSH2 0x3B8 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x2F4 DUP2 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x3C1 CALLER PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x3D6 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x2F4 DUP2 PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x97 SLOAD AND PUSH1 0x97 SSTORE PUSH2 0x3EB PUSH1 0x64 CALLDATALOAD PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x431 JUMPI JUMPDEST PUSH2 0x3F9 JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x509 JUMPI PUSH1 0xFF PUSH1 0x97 SLOAD AND PUSH2 0x4B3 JUMPI PUSH2 0x45A PUSH1 0x44 CALLDATALOAD PUSH1 0x35 SLOAD PUSH2 0x138F JUMP JUMPDEST PUSH1 0x35 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634546F6B656E426173653A20746F6B656E207472616E73666572207768696C PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x19481C185D5CD959 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x38D JUMP JUMPDEST SWAP3 POP PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x5B6 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x59D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x37 SSTORE PUSH2 0x3A3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x58F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x574 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP5 LT PUSH2 0x632 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x623 JUMPI POP PUSH2 0x376 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x616 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x5FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x6C5 JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x6AC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x36 SSTORE PUSH2 0x34E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x69E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x681 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP4 LT PUSH2 0x731 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0x725 JUMPI POP PUSH2 0x31E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x702 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x702 JUMP JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP4 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C8 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x2C8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x2C1 JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xCA SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 SWAP4 ADD DUP1 SWAP2 PUSH1 0xCA PUSH1 0x0 MSTORE PUSH32 0x42D72674974F694B5F5159593243114D38A5C39C89D6B62FEE061FF523240EE1 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x883 JUMPI DUP7 DUP7 PUSH2 0x83A DUP3 DUP9 SUB DUP4 PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x863 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x854 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x824 JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x8C6 PUSH2 0x8BC PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x149E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x8EA PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x925 JUMPI PUSH2 0x8C6 SWAP3 SUB SWAP1 CALLER PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x991 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x999 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 JUMPDEST PUSH1 0xCA SWAP2 DUP3 SLOAD SWAP3 DUP4 DUP3 LT ISZERO PUSH2 0xAAD JUMPI DUP5 SWAP4 DUP4 PUSH2 0x9ED DUP5 PUSH2 0x1222 JUMP JUMPDEST SWAP8 SWAP1 SLOAD PUSH1 0x3 SWAP9 DUP10 SHL SHR AND EQ PUSH2 0xA0A JUMPI POP SWAP3 SWAP4 POP PUSH1 0x1 ADD SWAP2 POP PUSH2 0x9D3 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 POP PUSH1 0x0 NOT SWAP2 DUP3 DUP3 ADD SWAP2 DUP3 GT PUSH2 0xA97 JUMPI PUSH2 0xA39 DUP5 PUSH2 0xA2C PUSH2 0xA57 SWAP5 PUSH2 0x1222 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP10 SHL SHR AND SWAP2 PUSH2 0x1222 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 SLOAD DUP1 ISZERO PUSH2 0xA81 JUMPI ADD SWAP3 PUSH2 0xA6A DUP5 PUSH2 0x1222 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP3 SHL SHL NOT AND SWAP1 SSTORE SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x286C71D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x37 SLOAD PUSH1 0x0 DUP3 PUSH2 0xAEC DUP4 PUSH2 0x11E8 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xB7E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xB33 JUMPI JUMPDEST POP PUSH2 0xB1B SWAP3 POP SUB DUP4 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0xB2F PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x109A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SWAP2 POP PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0xB66 JUMPI POP POP PUSH2 0xB1B SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0xB0E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0xB4F JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP3 ADD MSTORE PUSH2 0xB1B SWAP6 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 SWAP2 POP PUSH2 0xB0E SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC69 JUMPI PUSH1 0x97 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0xC31 JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR PUSH1 0x97 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7824841 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0xC94 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCF9 PUSH2 0x10DA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x97 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH2 0xD43 CALLDATASIZE PUSH2 0x1106 JUMP JUMPDEST SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC69 JUMPI DUP3 PUSH1 0x0 DUP1 SWAP5 SWAP4 DUP2 SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP3 DUP2 MSTORE SUB SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xDBC JUMPI RETURNDATASIZE SWAP1 PUSH2 0xD85 DUP3 PUSH2 0x1185 JUMP JUMPDEST SWAP2 PUSH2 0xD93 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1163 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST PUSH2 0xB2F PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0xD9E JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC69 JUMPI PUSH1 0x97 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0xE2B JUMPI PUSH1 0xFF NOT AND PUSH1 0x97 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x8C6 PUSH2 0xE83 PUSH2 0x10DA JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xEB1 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x138F JUMP JUMPDEST SWAP1 CALLER PUSH2 0x139C JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 PUSH2 0xEF5 PUSH2 0xEE7 CALLDATASIZE PUSH2 0x1106 JUMP JUMPDEST SWAP2 PUSH2 0xEF0 PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0xF18 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0xF20 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0xF5C JUMPI JUMPDEST PUSH2 0x8C6 SWAP4 POP PUSH2 0x149E JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0xF78 JUMPI PUSH2 0xF73 DUP4 PUSH2 0x8C6 SWAP6 SUB CALLER DUP4 PUSH2 0x139C JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x20 PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x8C6 PUSH2 0xFF7 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x139C JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x36 SLOAD PUSH1 0x0 DUP3 PUSH2 0x1021 DUP4 PUSH2 0x11E8 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xB7E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x104F JUMPI POP PUSH2 0xB1B SWAP3 POP SUB DUP4 PUSH2 0x1163 JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1082 JUMPI POP POP PUSH2 0xB1B SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0xB0E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x106B JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x10C6 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B3 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1B3 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x1B3 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1B3 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x1B3 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x1B3 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x648 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x648 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1B3 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x11B8 DUP3 PUSH2 0x1185 JUMP JUMPDEST SWAP3 PUSH2 0x11C6 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1163 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1B3 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1218 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1202 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0xCA SLOAD DUP2 LT ISZERO PUSH2 0x1259 JUMPI PUSH1 0xCA PUSH1 0x0 MSTORE PUSH32 0x42D72674974F694B5F5159593243114D38A5C39C89D6B62FEE061FF523240EE1 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP4 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 PUSH1 0xFF AND PUSH2 0x137E JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0x137A JUMPI DUP2 PUSH1 0x64 DUP7 SWAP3 DUP7 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x347D5E25 PUSH1 0xE2 SHL DUP5 MSTORE ADDRESS PUSH1 0x4 DUP6 ADD MSTORE DUP10 PUSH1 0x24 DUP6 ADD MSTORE DUP2 PUSH1 0x44 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD DUP2 DUP4 DUP7 GAS CALL SWAP1 DUP2 PUSH2 0x134B JUMPI JUMPDEST POP PUSH2 0x12F4 JUMPI POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x1337 JUMPI POP SWAP1 PUSH2 0xA39 DUP3 PUSH1 0x1 PUSH2 0x1332 SWAP5 ADD PUSH1 0xCA SSTORE PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SWAP6 SWAP3 SWAP6 GT PUSH2 0x1366 JUMPI DUP4 MSTORE SWAP3 CODESIZE PUSH2 0x12E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xBDF91DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA97 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x144D JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x13FD JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x34 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x15C5 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1574 JUMPI PUSH1 0xFF PUSH1 0x97 SLOAD AND PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1520 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x33 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x162C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x16C0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x4A GT 0xF9 0x4E KECCAK256 0xA9 EXTCODECOPY PUSH26 0xF6EC743A1954EC4FC2C08429AE2122118BF234B2185C81B842A7 0xB7 0xDD PUSH25 0x5CD69714A189DFFB3FD7D7174EDC9ECE837694CE50F7078F7C BALANCE 0xAE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 STOP PUSH11 0x5E4BA36A7C99D0E3A0717C 0xBA SWAP4 DUP14 DUP13 PUSH0 ADDMOD 0xA9 0xB8 0x21 0xED 0xD CREATE PUSH32 0x2CDEA2FFE664736F6C6343000816003300000000000000000000000000000000 ","sourceMap":"543:3110:23:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4314,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_21170":{"entryPoint":4336,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_bytes_calldata":{"entryPoint":4358,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_string":{"entryPoint":4513,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4250,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_string":{"entryPoint":4485,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":5007,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4584,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4451,"id":null,"parameterSlots":2,"returnSlots":0},"fun_addModule_inner":{"entryPoint":4719,"id":null,"parameterSlots":3,"returnSlots":1},"fun_approve":{"entryPoint":5020,"id":971,"parameterSlots":3,"returnSlots":0},"fun_checkOwner":{"entryPoint":5656,"id":69,"parameterSlots":0,"returnSlots":0},"fun_transfer":{"entryPoint":5278,"id":797,"parameterSlots":3,"returnSlots":0},"fun_transferOwnership":{"entryPoint":5744,"id":126,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":5817,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn_ptr":{"entryPoint":4642,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461100157508063095ea7b314610fdb57806318160ddd14610fbd57806323b872dd14610eff5780632dd3a78c14610ed4578063313ce56714610eb85780633950935114610e675780633f4ba83a14610dc45780635607b78014610d355780635c975abb14610d1257806370a0823114610cd8578063715018a614610c7b5780638456cb5914610bc75780638da5cb5b14610b9e57806395d89b4114610ac9578063a063246114610978578063a457c2d7146108d1578063a9059cbb146108a0578063b2494df3146107d8578063bd3a13f614610248578063d21b9fbd14610209578063dd62ed3e146101b85763f2fde38b1461011c57600080fd5b346101b35760203660031901126101b3576101356110da565b61013d611618565b610145611618565b6001600160a01b0381161561015f5761015d90611670565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101b35760403660031901126101b3576101d16110da565b6101d96110f0565b9060018060a01b038091166000526034602052604060002091166000526020526020604060002054604051908152f35b346101b35760203660031901126101b3576001600160a01b0361022a6110da565b1660005260c9602052602060ff604060002054166040519015158152f35b346101b35760803660031901126101b35760043567ffffffffffffffff81116101b3576102799036906004016111a1565b60243567ffffffffffffffff81116101b3576102999036906004016111a1565b6064356001600160a01b03811690036101b3576000549060ff8260081c1615918280936107cb575b80156107b4575b156107585760ff19811660011760005582610746575b506102f960ff60005460081c166102f4816116b9565b6116b9565b825167ffffffffffffffff8111610648576103156036546111e8565b601f81116106dd575b506020601f8211600114610669578192939460009261065e575b50508160011b916000199060031b1c1916176036555b80519067ffffffffffffffff821161064857819061036d6037546111e8565b601f81116105d1575b50602090601f83116001146105595760009261054e575b50508160011b916000199060031b1c1916176037555b6103b860ff60005460081c166102f4816116b9565b6103c133611670565b6103d660ff60005460081c166102f4816116b9565b60ff19609754166097556103eb606435611670565b604435610431575b6103f957005b61ff0019600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b6064356001600160a01b0316156105095760ff609754166104b35761045a60443560355461138f565b6035556064356001600160a01b03166000818152603360209081526040808320805460443590810190915590519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a36103f3565b60405162461bcd60e51b815260206004820152602860248201527f5634546f6b656e426173653a20746f6b656e207472616e73666572207768696c60448201526719481c185d5cd95960c21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b01519050838061038d565b9250603760005260008051602061173a833981519152906000935b601f19841685106105b6576001945083601f1981161061059d575b505050811b016037556103a3565b015160001960f88460031b161c1916905583808061058f565b81810151835560209485019460019093019290910190610574565b9091506037600052601f830160051c60008051602061173a833981519152019060208410610632575b90601f8493920160051c60008051602061173a83398151915201905b8181106106235750610376565b60008155849350600101610616565b60008051602061173a83398151915291506105fa565b634e487b7160e01b600052604160045260246000fd5b015190508480610338565b603660005260008051602061171a8339815191529060005b601f19841681106106c55750600193949583601f198116106106ac575b505050811b0160365561034e565b015160001960f88460031b161c1916905584808061069e565b9091602060018192858a015181550193019101610681565b6036600052601f820160051c60008051602061171a8339815191520160208310610731575b601f820160051c60008051602061171a833981519152018110610725575061031e565b60008155600101610702565b5060008051602061171a833981519152610702565b61ffff191661010117600055836102de565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156102c85750600160ff8216146102c8565b50600160ff8216106102c1565b346101b35760003660031901126101b3576040518060ca548083526020809301809160ca6000527f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee19060005b8682821061088357868661083a82880383611163565b604051928392818401908285525180915260408401929160005b82811061086357505050500390f35b83516001600160a01b031685528695509381019392810192600101610854565b83546001600160a01b031685529093019260019283019201610824565b346101b35760403660031901126101b3576108c66108bc6110da565b602435903361149e565b602060405160018152f35b346101b35760403660031901126101b3576108ea6110da565b60243590336000526034602052604060002060018060a01b03821660005260205260406000205491808310610925576108c69203903361139c565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b346101b35760203660031901126101b3576109916110da565b610999611618565b6001600160a01b03908116600081815260c9602052604090205460ff1615610ab757600081815260c960205260408120805460ff19169055905b60ca9182549283821015610aad578493836109ed84611222565b979054600398891b1c1614610a0a575092935060010191506109d3565b9093925060001991828201918211610a9757610a3984610a2c610a5794611222565b905490891b1c1691611222565b90919060018060a01b038084549260031b9316831b921b1916179055565b82548015610a81570192610a6a84611222565b81939154921b1b1916905555602060405160018152f35b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b50505050506108c6565b604051630286c71d60e01b8152600490fd5b346101b35760003660031901126101b357604051603754600082610aec836111e8565b9182825260209360019085600182169182600014610b7e575050600114610b33575b50610b1b92500383611163565b610b2f60405192828493845283019061109a565b0390f35b849150603760005260008051602061173a833981519152906000915b858310610b66575050610b1b935082010185610b0e565b80548389018501528794508693909201918101610b4f565b60ff191685820152610b1b95151560051b8501019250879150610b0e9050565b346101b35760003660031901126101b3576065546040516001600160a01b039091168152602090f35b346101b35760003660031901126101b3573360005260c960205260ff6040600020541615610c695760975460ff8116610c315760019060ff1916176097557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b604051630782484160e21b8152600490fd5b346101b35760003660031901126101b357610c94611618565b606580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101b35760203660031901126101b3576001600160a01b03610cf96110da565b1660005260336020526020604060002054604051908152f35b346101b35760003660031901126101b357602060ff609754166040519015158152f35b346101b357610d4336611106565b913360005260c960205260ff6040600020541615610c695782600080949381946040519384928337810182815203925af13d15610dbc573d90610d8582611185565b91610d936040519384611163565b82523d6000602084013e5b610b2f6040519283921515835260406020840152604083019061109a565b606090610d9e565b346101b35760003660031901126101b3573360005260c960205260ff6040600020541615610c695760975460ff811615610e2b5760ff19166097557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b346101b35760403660031901126101b3576108c6610e836110da565b336000526034602052604060002060018060a01b038216600052602052610eb160243560406000205461138f565b903361139c565b346101b35760003660031901126101b357602060405160128152f35b346101b3576020610ef5610ee736611106565b91610ef0611618565b61126f565b6040519015158152f35b346101b35760603660031901126101b357610f186110da565b610f206110f0565b6044359060018060a01b0383166000526034602052604060002033600052602052604060002054926000198403610f5c575b6108c6935061149e565b828410610f7857610f73836108c69503338361139c565b610f52565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b346101b35760003660031901126101b3576020603554604051908152f35b346101b35760403660031901126101b3576108c6610ff76110da565b602435903361139c565b346101b35760003660031901126101b357603654600082611021836111e8565b9182825260209360019085600182169182600014610b7e57505060011461104f5750610b1b92500383611163565b849150603660005260008051602061171a833981519152906000915b858310611082575050610b1b935082010185610b0e565b8054838901850152879450869390920191810161106b565b919082519283825260005b8481106110c6575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016110a5565b600435906001600160a01b03821682036101b357565b602435906001600160a01b03821682036101b357565b60406003198201126101b3576004356001600160a01b03811681036101b3579160243567ffffffffffffffff928382116101b357806023830112156101b35781600401359384116101b357602484830101116101b3576024019190565b90601f8019910116810190811067ffffffffffffffff82111761064857604052565b67ffffffffffffffff811161064857601f01601f191660200190565b81601f820112156101b3578035906111b882611185565b926111c66040519485611163565b828452602083830101116101b357816000926020809301838601378301015290565b90600182811c92168015611218575b602083101461120257565b634e487b7160e01b600052602260045260246000fd5b91607f16916111f7565b60ca548110156112595760ca6000527f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee10190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116600081815260c960205260408082205493959194909360ff1661137e57823b1561137a5781606486928651948593849263347d5e2560e21b8452306004850152896024850152816044850152848401378181018301859052601f01601f1916810103018183865af1908161134b575b506112f4575050905090565b825260c96020528120805460ff1916600117905560ca549068010000000000000000821015611337575090610a39826001611332940160ca55611222565b600190565b634e487b7160e01b81526041600452602490fd5b67ffffffffffffffff819592951161136657835292386112e8565b634e487b7160e01b82526041600452602482fd5b8480fd5b835163bdf91dc160e01b8152600490fd5b91908201809211610a9757565b6001600160a01b0390811691821561144d57169182156113fd5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b039081169182156115c557169182156115745760ff609754166104b3576000828152603360205260408120549180831061152057604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6065546001600160a01b0316330361162c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b606580546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156116c057565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfe4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b842a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31aea2646970667358221220a9006a5e4ba36a7c99d0e3a0717cba938d8c5f08a9b821ed0df07f2cdea2ffe664736f6c63430008160033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x1001 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xFDB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFBD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEFF JUMPI DUP1 PUSH4 0x2DD3A78C EQ PUSH2 0xED4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xEB8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xE67 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xDC4 JUMPI DUP1 PUSH4 0x5607B780 EQ PUSH2 0xD35 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xD12 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCD8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC7B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xBC7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xAC9 JUMPI DUP1 PUSH4 0xA0632461 EQ PUSH2 0x978 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x8D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8A0 JUMPI DUP1 PUSH4 0xB2494DF3 EQ PUSH2 0x7D8 JUMPI DUP1 PUSH4 0xBD3A13F6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xD21B9FBD EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B8 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x135 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x13D PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x15F JUMPI PUSH2 0x15D SWAP1 PUSH2 0x1670 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x1D1 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x10F0 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x22A PUSH2 0x10DA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B3 JUMPI PUSH2 0x279 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1B3 JUMPI PUSH2 0x299 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11A1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH2 0x1B3 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO SWAP2 DUP3 DUP1 SWAP4 PUSH2 0x7CB JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x7B4 JUMPI JUMPDEST ISZERO PUSH2 0x758 JUMPI PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 SSTORE DUP3 PUSH2 0x746 JUMPI JUMPDEST POP PUSH2 0x2F9 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x2F4 DUP2 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x16B9 JUMP JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x648 JUMPI PUSH2 0x315 PUSH1 0x36 SLOAD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x6DD JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x669 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x65E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x36 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x648 JUMPI DUP2 SWAP1 PUSH2 0x36D PUSH1 0x37 SLOAD PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x5D1 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x559 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x54E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x37 SSTORE JUMPDEST PUSH2 0x3B8 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x2F4 DUP2 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x3C1 CALLER PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x3D6 PUSH1 0xFF PUSH1 0x0 SLOAD PUSH1 0x8 SHR AND PUSH2 0x2F4 DUP2 PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x97 SLOAD AND PUSH1 0x97 SSTORE PUSH2 0x3EB PUSH1 0x64 CALLDATALOAD PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x431 JUMPI JUMPDEST PUSH2 0x3F9 JUMPI STOP JUMPDEST PUSH2 0xFF00 NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x509 JUMPI PUSH1 0xFF PUSH1 0x97 SLOAD AND PUSH2 0x4B3 JUMPI PUSH2 0x45A PUSH1 0x44 CALLDATALOAD PUSH1 0x35 SLOAD PUSH2 0x138F JUMP JUMPDEST PUSH1 0x35 SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG3 PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5634546F6B656E426173653A20746F6B656E207472616E73666572207768696C PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x19481C185D5CD959 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP4 DUP1 PUSH2 0x38D JUMP JUMPDEST SWAP3 POP PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x5B6 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x59D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x37 SSTORE PUSH2 0x3A3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 DUP1 PUSH2 0x58F JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x574 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP5 LT PUSH2 0x632 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x623 JUMPI POP PUSH2 0x376 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x616 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x5FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP5 DUP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x6C5 JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x6AC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x36 SSTORE PUSH2 0x34E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP5 DUP1 DUP1 PUSH2 0x69E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x681 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH1 0x20 DUP4 LT PUSH2 0x731 JUMPI JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP2 LT PUSH2 0x725 JUMPI POP PUSH2 0x31E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x702 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x702 JUMP JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR PUSH1 0x0 SSTORE DUP4 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C8 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP3 AND EQ PUSH2 0x2C8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP3 AND LT PUSH2 0x2C1 JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xCA SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 SWAP4 ADD DUP1 SWAP2 PUSH1 0xCA PUSH1 0x0 MSTORE PUSH32 0x42D72674974F694B5F5159593243114D38A5C39C89D6B62FEE061FF523240EE1 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x883 JUMPI DUP7 DUP7 PUSH2 0x83A DUP3 DUP9 SUB DUP4 PUSH2 0x1163 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x863 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x854 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x824 JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x8C6 PUSH2 0x8BC PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x149E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x8EA PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x925 JUMPI PUSH2 0x8C6 SWAP3 SUB SWAP1 CALLER PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x991 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x999 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 JUMPDEST PUSH1 0xCA SWAP2 DUP3 SLOAD SWAP3 DUP4 DUP3 LT ISZERO PUSH2 0xAAD JUMPI DUP5 SWAP4 DUP4 PUSH2 0x9ED DUP5 PUSH2 0x1222 JUMP JUMPDEST SWAP8 SWAP1 SLOAD PUSH1 0x3 SWAP9 DUP10 SHL SHR AND EQ PUSH2 0xA0A JUMPI POP SWAP3 SWAP4 POP PUSH1 0x1 ADD SWAP2 POP PUSH2 0x9D3 JUMP JUMPDEST SWAP1 SWAP4 SWAP3 POP PUSH1 0x0 NOT SWAP2 DUP3 DUP3 ADD SWAP2 DUP3 GT PUSH2 0xA97 JUMPI PUSH2 0xA39 DUP5 PUSH2 0xA2C PUSH2 0xA57 SWAP5 PUSH2 0x1222 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP10 SHL SHR AND SWAP2 PUSH2 0x1222 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP5 SLOAD SWAP3 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 SLOAD DUP1 ISZERO PUSH2 0xA81 JUMPI ADD SWAP3 PUSH2 0xA6A DUP5 PUSH2 0x1222 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP3 SHL SHL NOT AND SWAP1 SSTORE SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x286C71D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x37 SLOAD PUSH1 0x0 DUP3 PUSH2 0xAEC DUP4 PUSH2 0x11E8 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xB7E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0xB33 JUMPI JUMPDEST POP PUSH2 0xB1B SWAP3 POP SUB DUP4 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0xB2F PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x109A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SWAP2 POP PUSH1 0x37 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x173A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0xB66 JUMPI POP POP PUSH2 0xB1B SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0xB0E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0xB4F JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP3 ADD MSTORE PUSH2 0xB1B SWAP6 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 SWAP2 POP PUSH2 0xB0E SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC69 JUMPI PUSH1 0x97 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0xC31 JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR PUSH1 0x97 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7824841 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0xC94 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCF9 PUSH2 0x10DA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x97 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH2 0xD43 CALLDATASIZE PUSH2 0x1106 JUMP JUMPDEST SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC69 JUMPI DUP3 PUSH1 0x0 DUP1 SWAP5 SWAP4 DUP2 SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP3 DUP2 MSTORE SUB SWAP3 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xDBC JUMPI RETURNDATASIZE SWAP1 PUSH2 0xD85 DUP3 PUSH2 0x1185 JUMP JUMPDEST SWAP2 PUSH2 0xD93 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1163 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST PUSH2 0xB2F PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0xD9E JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC69 JUMPI PUSH1 0x97 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0xE2B JUMPI PUSH1 0xFF NOT AND PUSH1 0x97 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x8C6 PUSH2 0xE83 PUSH2 0x10DA JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xEB1 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x138F JUMP JUMPDEST SWAP1 CALLER PUSH2 0x139C JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x20 PUSH2 0xEF5 PUSH2 0xEE7 CALLDATASIZE PUSH2 0x1106 JUMP JUMPDEST SWAP2 PUSH2 0xEF0 PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0xF18 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0xF20 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 PUSH1 0x0 NOT DUP5 SUB PUSH2 0xF5C JUMPI JUMPDEST PUSH2 0x8C6 SWAP4 POP PUSH2 0x149E JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0xF78 JUMPI PUSH2 0xF73 DUP4 PUSH2 0x8C6 SWAP6 SUB CALLER DUP4 PUSH2 0x139C JUMP JUMPDEST PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x20 PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH2 0x8C6 PUSH2 0xFF7 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x139C JUMP JUMPDEST CALLVALUE PUSH2 0x1B3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x36 SLOAD PUSH1 0x0 DUP3 PUSH2 0x1021 DUP4 PUSH2 0x11E8 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0xB7E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x104F JUMPI POP PUSH2 0xB1B SWAP3 POP SUB DUP4 PUSH2 0x1163 JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x36 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x171A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1082 JUMPI POP POP PUSH2 0xB1B SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0xB0E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x106B JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x10C6 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B3 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x1B3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1B3 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x1B3 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1B3 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x1B3 JUMPI PUSH1 0x24 DUP5 DUP4 ADD ADD GT PUSH2 0x1B3 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x648 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x648 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1B3 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x11B8 DUP3 PUSH2 0x1185 JUMP JUMPDEST SWAP3 PUSH2 0x11C6 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1163 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1B3 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1218 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1202 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0xCA SLOAD DUP2 LT ISZERO PUSH2 0x1259 JUMPI PUSH1 0xCA PUSH1 0x0 MSTORE PUSH32 0x42D72674974F694B5F5159593243114D38A5C39C89D6B62FEE061FF523240EE1 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP4 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 PUSH1 0xFF AND PUSH2 0x137E JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0x137A JUMPI DUP2 PUSH1 0x64 DUP7 SWAP3 DUP7 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x347D5E25 PUSH1 0xE2 SHL DUP5 MSTORE ADDRESS PUSH1 0x4 DUP6 ADD MSTORE DUP10 PUSH1 0x24 DUP6 ADD MSTORE DUP2 PUSH1 0x44 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD DUP2 DUP4 DUP7 GAS CALL SWAP1 DUP2 PUSH2 0x134B JUMPI JUMPDEST POP PUSH2 0x12F4 JUMPI POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x1337 JUMPI POP SWAP1 PUSH2 0xA39 DUP3 PUSH1 0x1 PUSH2 0x1332 SWAP5 ADD PUSH1 0xCA SSTORE PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SWAP6 SWAP3 SWAP6 GT PUSH2 0x1366 JUMPI DUP4 MSTORE SWAP3 CODESIZE PUSH2 0x12E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xBDF91DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xA97 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x144D JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x13FD JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x34 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x15C5 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1574 JUMPI PUSH1 0xFF PUSH1 0x97 SLOAD AND PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x1520 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x33 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x162C JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST ISZERO PUSH2 0x16C0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID 0x4A GT 0xF9 0x4E KECCAK256 0xA9 EXTCODECOPY PUSH26 0xF6EC743A1954EC4FC2C08429AE2122118BF234B2185C81B842A7 0xB7 0xDD PUSH25 0x5CD69714A189DFFB3FD7D7174EDC9ECE837694CE50F7078F7C BALANCE 0xAE LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 STOP PUSH11 0x5E4BA36A7C99D0E3A0717C 0xBA SWAP4 DUP14 DUP13 PUSH0 ADDMOD 0xA9 0xB8 0x21 0xED 0xD CREATE PUSH32 0x2CDEA2FFE664736F6C6343000816003300000000000000000000000000000000 ","sourceMap":"543:3110:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;;:::i;:::-;1324:62:0;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;543:3110:23;;2423:22:0;543:3110:23;;2517:8:0;;;:::i;:::-;543:3110:23;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;4460:11:3;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;-1:-1:-1;;;;;543:3110:23;;:::i;:::-;;;;2530:8;543:3110;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;543:3110:23;;;;;;;;;;;;;;3301:14:1;3347:34;;;;;;543:3110:23;3346:108:1;;;;543:3110:23;;;;-1:-1:-1;;543:3110:23;;;;;;;3562:65:1;;543:3110:23;;5366:69:1;543:3110:23;;;;;;5366:69:1;;;:::i;:::-;;:::i;:::-;543:3110:23;;;;;;;;2404:13:3;543:3110:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11622:17:3;;;543:3110:23;;;;;;;2404:13:3;543:3110:23;;;;;;;;;;;;;2427:17:3;543:3110:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;11622:17:3;;;543:3110:23;;;;;;;2427:17:3;543:3110:23;;5366:69:1;543:3110:23;;;;;;5366:69:1;;;:::i;:::-;1216:12:0;965:10:7;1216:12:0;:::i;:::-;5366:69:1;543:3110:23;;;;;;5366:69:1;;;:::i;:::-;543:3110:23;;1260:15:2;543:3110:23;;1260:15:2;543:3110:23;1283:6;543:3110;;1283:6;:::i;:::-;543:3110;;1309:76;;543:3110;3647:99:1;;543:3110:23;3647:99:1;543:3110:23;;;;;;;3721:14:1;543:3110:23;;;;;;3721:14:1;543:3110:23;1309:76;543:3110;;-1:-1:-1;;;;;543:3110:23;8961:21:3;543:3110:23;;;1260:15:2;543:3110:23;;;;9089:22:3;543:3110:23;;9089:22:3;543:3110:23;9089:22:3;:::i;:::-;;543:3110:23;;;-1:-1:-1;;;;;543:3110:23;;;;;9257:9:3;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;9310:37:3;;543:3110:23;9310:37:3;1309:76:23;;543:3110;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:3110:23;;;;;;;2427:17:3;543:3110:23;;-1:-1:-1;;;;;;;;;;;543:3110:23;;;;-1:-1:-1;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;2427:17:3;543:3110:23;;;;;;11622:17:3;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2427:17:3;543:3110:23;;;;;;;-1:-1:-1;;;;;;;;;;;543:3110:23;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;543:3110:23;;;;;-1:-1:-1;;;;;;;;;;;543:3110:23;-1:-1:-1;543:3110:23;;;;;;;;;;;;;;;;;;-1:-1:-1;543:3110:23;;;;;2404:13:3;543:3110:23;;-1:-1:-1;;;;;;;;;;;543:3110:23;;;-1:-1:-1;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;2404:13:3;543:3110:23;;;;;;11622:17:3;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2404:13:3;543:3110:23;;;;;;;-1:-1:-1;;;;;;;;;;;543:3110:23;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;543:3110:23;;3562:65:1;-1:-1:-1;;543:3110:23;;;;;3562:65:1;;;543:3110:23;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;3346:108:1;3426:4;;1713:19:6;:23;3387:66:1;;3346:108;3387:66;543:3110:23;;;;;3436:17:1;3346:108;;3347:34;543:3110:23;;;;;3365:16:1;3347:34;;543:3110:23;;;;;;-1:-1:-1;;543:3110:23;;;;;;;2906:11;543:3110;;;;;;;;;;2906:11;543:3110;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:3110:23;;;;;-1:-1:-1;543:3110:23;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:3110:23;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;4252:6:3;543:3110:23;;:::i;:::-;;;965:10:7;;4252:6:3;:::i;:::-;543:3110:23;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;;:::i;:::-;;;965:10:7;;543:3110:23;;4460:11:3;543:3110:23;;;;;;;;;;;;;;;;;;;;7150:35:3;;;;543:3110:23;;7286:34:3;543:3110:23;;965:10:7;;7286:34:3;:::i;543:3110:23:-;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;;:::i;:::-;1324:62:0;;:::i;:::-;-1:-1:-1;;;;;543:3110:23;;;;;;;1959:8;543:3110;;;;;;;;1958:24;1954:82;;543:3110;;;;1959:8;543:3110;;;;;;;-1:-1:-1;;543:3110:23;;;;2173:3;2153:11;543:3110;;;2149:22;;;;;;;2196:14;;;;;;:::i;:::-;543:3110;;;;;;;;;2196:31;2192:180;;-1:-1:-1;2173:3:23;;-1:-1:-1;543:3110:23;;;-1:-1:-1;2137:10:23;;2192:180;11622:17:3;;;-1:-1:-1;;;11622:17:3;543:3110:23;;;;;;;;2247:14;2264:35;;2247:52;2264:35;;:::i;:::-;543:3110;;;;;;;2247:14;;:::i;:::-;:52;543:3110;;;;;;;;;;;;;;;;;;;;;;;;;2247:52;543:3110;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2149:22;;;;;;;;1954:82;543:3110;;-1:-1:-1;;;2005:20:23;;543:3110;;2005:20;543:3110;;;;;;-1:-1:-1;;543:3110:23;;;;;;2815:7:3;543:3110:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2815:7:3;543:3110:23;;-1:-1:-1;;;;;;;;;;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:3110:23;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;;;;;;;;;;;-1:-1:-1;543:3110:23;;-1:-1:-1;543:3110:23;;-1:-1:-1;543:3110:23;;;;;;;-1:-1:-1;;543:3110:23;;;;1534:6:0;543:3110:23;;;-1:-1:-1;;;;;543:3110:23;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;913:10;543:3110;;904:8;543:3110;;;;;;;;903:21;899:77;;1949:7:2;543:3110:23;;;;;;2519:4:2;543:3110:23;;;;;1949:7:2;543:3110:23;2538:20:2;543:3110:23;;;913:10;543:3110;;2538:20:2;543:3110:23;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;899:77;543:3110;;-1:-1:-1;;;947:18:23;;543:3110;;947:18;543:3110;;;;;;-1:-1:-1;;543:3110:23;;;;1324:62:0;;:::i;:::-;2779:6;543:3110:23;;-1:-1:-1;;;;;;543:3110:23;;;;;;;-1:-1:-1;;;;;543:3110:23;2827:40:0;543:3110:23;;2827:40:0;543:3110:23;;;;;;;-1:-1:-1;;543:3110:23;;;;-1:-1:-1;;;;;543:3110:23;;:::i;:::-;;;;3877:9:3;543:3110:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;;1949:7:2;543:3110:23;;;;;;;;;;;;;;;;;:::i;:::-;913:10;;543:3110;;904:8;543:3110;;;;;;;;903:21;899:77;;543:3110;;;;;;;;;;;;;;;;;;;2745:17;;;;543:3110;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;913:10;543:3110;;904:8;543:3110;;;;;;;;903:21;899:77;;1949:7:2;543:3110:23;;;;;;;;;;1949:7:2;543:3110:23;2785:22:2;543:3110:23;;;913:10;543:3110;;2785:22:2;543:3110:23;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;6379:38:3;543:3110:23;;:::i;:::-;965:10:7;543:3110:23;;4460:11:3;543:3110:23;;;;;;;;;;;;;;;;6379:38:3;543:3110:23;;;;;;6379:38:3;:::i;:::-;965:10:7;;6379:38:3;:::i;543:3110:23:-;;;;;;-1:-1:-1;;543:3110:23;;;;;;;3544:2:3;543:3110:23;;;;;;;;1378:1:0;543:3110:23;;;:::i;:::-;1324:62:0;;;:::i;:::-;1378:1;:::i;:::-;543:3110:23;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;4460:11:3;543:3110:23;;;;;965:10:7;543:3110:23;;;;;;;;11622:17:3;;;11602:37;;11598:243;;543:3110:23;5782:6:3;;;;:::i;11598:243::-;11663:26;;;543:3110:23;;11790:25:3;543:3110:23;5782:6:3;543:3110:23;;965:10:7;11790:25:3;;:::i;:::-;11598:243;;543:3110:23;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;;3700:12:3;543:3110:23;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;;4964:6:3;543:3110:23;;:::i;:::-;;;965:10:7;;4964:6:3;:::i;543:3110:23:-;;;;;;-1:-1:-1;;543:3110:23;;;;2602:5:3;543:3110:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2602:5:3;543:3110:23;;-1:-1:-1;;;;;;;;;;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:3110:23;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;543:3110:23;;;;;;:::o;:::-;;-1:-1:-1;;543:3110:23;;;;;;;-1:-1:-1;;;;;543:3110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;543:3110:23;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;543:3110:23;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;2153:11;543:3110;;;;;;2153:11;-1:-1:-1;543:3110:23;;;;-1:-1:-1;543:3110:23;:::o;:::-;;;;;;;;;;;;1401:445;-1:-1:-1;;;;;543:3110:23;;;;;;1521:8;543:3110;;;;;;;1401:445;;543:3110;;;;;;1517:75;;1614:56;;;;;543:3110;;;;;;;;;;;;;;1614:56;;1658:4;1614:56;;;543:3110;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;543:3110:23;;;1614:56;;;543:3110;1614:56;;;;;;;1401:445;-1:-1:-1;1610:230:23;;1817:12;;;;;:::o;1610:230::-;543:3110;;1521:8;543:3110;;;;;;-1:-1:-1;;543:3110:23;1711:4;543:3110;;;1729:11;543:3110;;;;;;;;;;;;1711:4;543:3110;;;1729:11;543:3110;;:::i;:::-;1711:4;1774:11;:::o;543:3110::-;-1:-1:-1;;;543:3110:23;;;1614:56;543:3110;;;;1614:56;543:3110;;;;;;;;;;1614:56;;;;543:3110;-1:-1:-1;;;543:3110:23;;;1614:56;543:3110;;;;1614:56;543:3110;;;1517:75;543:3110;;-1:-1:-1;;;1567:14:23;;;;;543:3110;;;;;;;;;;:::o;10815:340:3:-;-1:-1:-1;;;;;543:3110:23;;;;10916:19:3;;543:3110:23;;;10994:21:3;;;543:3110:23;;;11116:32:3;543:3110:23;;10933:1:3;543:3110:23;11065:11:3;543:3110:23;;;10933:1:3;543:3110:23;;10933:1:3;543:3110:23;;;;;10933:1:3;543:3110:23;;;;;;;11116:32:3;10815:340::o;543:3110:23:-;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;7814:788:3;-1:-1:-1;;;;;543:3110:23;;;;7910:18:3;;543:3110:23;;;7988:16:3;;;543:3110:23;;;1949:7:2;543:3110:23;;;;7926:1:3;543:3110:23;;;8126:9:3;543:3110:23;;;;;;8159:21:3;;;;543:3110:23;;;;;8521:26:3;543:3110:23;;;;;8126:9:3;543:3110:23;;;;;;;;;;;;;;;;;;;;;;8521:26:3;7814:788::o;543:3110:23:-;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;;1620:130:0;1534:6;543:3110:23;-1:-1:-1;;;;;543:3110:23;965:10:7;1683:23:0;543:3110:23;;1620:130:0:o;543:3110:23:-;;;;;;;;;;;;;;;;;;;;;;;;;2687:187:0;2779:6;543:3110:23;;-1:-1:-1;;;;;543:3110:23;;;-1:-1:-1;;;;;;543:3110:23;;;;;;;;;;2827:40:0;-1:-1:-1;;2827:40:0;2687:187::o;543:3110:23:-;;;;:::o;:::-;;;-1:-1:-1;;;543:3110:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:3110:23;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1206200","executionCost":"1263","totalCost":"1207463"},"external":{"addModule(address,bytes)":"infinite","allowance(address,address)":"3019","approve(address,uint256)":"24368","balanceOf(address)":"2629","decimals()":"265","decreaseAllowance(address,uint256)":"26978","executeFromModule(address,bytes)":"infinite","getModules()":"infinite","increaseAllowance(address,uint256)":"26782","initialize(string,string,uint256,address)":"infinite","isModuleActive(address)":"2861","name()":"infinite","owner()":"2568","pause()":"27860","paused()":"2468","removeModule(address)":"infinite","renounceOwnership()":"28305","symbol()":"infinite","totalSupply()":"2302","transfer(address,uint256)":"53245","transferFrom(address,address,uint256)":"79446","transferOwnership(address)":"infinite","unpause()":"27744"},"internal":{"_beforeTokenTransfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"addModule(address,bytes)":"2dd3a78c","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","executeFromModule(address,bytes)":"5607b780","getModules()":"b2494df3","increaseAllowance(address,uint256)":"39509351","initialize(string,string,uint256,address)":"bd3a13f6","isModuleActive(address)":"d21b9fbd","name()":"06fdde03","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","removeModule(address)":"a0632461","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ModuleDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermissionDenied\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"addModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"isModuleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base implementation for V4 tokens with modular architecture\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addModule(address,bytes)\":{\"details\":\"Add a module to the token\",\"params\":{\"data\":\"Initialization data for the module\",\"moduleAddress\":\"Address of the module to add\"},\"returns\":{\"_0\":\"success Whether the module was successfully added\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"executeFromModule(address,bytes)\":{\"details\":\"Execute a function call from a module\",\"params\":{\"data\":\"Call data\",\"target\":\"Target address for the call\"},\"returns\":{\"returnData\":\"Data returned by the call\",\"success\":\"Whether the call was successful\"}},\"getModules()\":{\"details\":\"Get all active modules\",\"returns\":{\"_0\":\"modules Array of active module addresses\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string,uint256,address)\":{\"details\":\"Initialize the token with basic parameters\",\"params\":{\"initialSupply\":\"Initial supply to mint\",\"name_\":\"Token name\",\"owner_\":\"Address that will receive the initial supply and become the owner\",\"symbol_\":\"Token symbol\"}},\"isModuleActive(address)\":{\"details\":\"Check if a module is active\",\"params\":{\"moduleAddress\":\"Address of the module to check\"},\"returns\":{\"_0\":\"isActive Whether the module is active\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pause the token\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeModule(address)\":{\"details\":\"Remove a module from the token\",\"params\":{\"moduleAddress\":\"Address of the module to remove\"},\"returns\":{\"_0\":\"success Whether the module was successfully removed\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpause the token\"}},\"title\":\"V4TokenBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/V4TokenBase.sol\":\"V4TokenBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\"},\"src/contracts/V4TokenBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"./interfaces/IV4TokenBase.sol\\\";\\nimport \\\"./interfaces/IV4Module.sol\\\";\\n\\n/**\\n * @title V4TokenBase\\n * @dev Base implementation for V4 tokens with modular architecture\\n */\\ncontract V4TokenBase is \\n    Initializable, \\n    ERC20Upgradeable, \\n    OwnableUpgradeable,\\n    PausableUpgradeable,\\n    IV4TokenBase\\n{    \\n    mapping(address => bool) private _modules;\\n    address[] private _moduleList;\\n    \\n    error ModuleExists();\\n    error ModuleDoesNotExist();\\n    error PermissionDenied();\\n    \\n    modifier onlyModule() {\\n        if (!_modules[msg.sender]) {\\n            revert PermissionDenied();\\n        }\\n        _;\\n    }\\n    \\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupply,\\n        address owner_\\n    ) public initializer {\\n        __ERC20_init(name_, symbol_);\\n        __Ownable_init();\\n        __Pausable_init();\\n        _transferOwnership(owner_);\\n        \\n        if (initialSupply > 0) {\\n            _mint(owner_, initialSupply);\\n        }\\n    }\\n    \\n    function addModule(address moduleAddress, bytes calldata data) external override onlyOwner returns (bool) {\\n        if (_modules[moduleAddress]) {\\n            revert ModuleExists();\\n        }\\n        \\n        try IV4Module(moduleAddress).initialize(address(this), data) {\\n            _modules[moduleAddress] = true;\\n            _moduleList.push(moduleAddress);\\n            return true;\\n        } catch {\\n            return false;\\n        }\\n    }\\n    \\n    function removeModule(address moduleAddress) external override onlyOwner returns (bool) {\\n        if (!_modules[moduleAddress]) {\\n            revert ModuleDoesNotExist();\\n        }\\n        \\n        _modules[moduleAddress] = false;\\n        \\n        // Remove from list\\n        for (uint i = 0; i < _moduleList.length; i++) {\\n            if (_moduleList[i] == moduleAddress) {\\n                _moduleList[i] = _moduleList[_moduleList.length - 1];\\n                _moduleList.pop();\\n                break;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n    \\n    function isModuleActive(address moduleAddress) external view override returns (bool) {\\n        return _modules[moduleAddress];\\n    }\\n    \\n    function executeFromModule(address target, bytes calldata data) external override onlyModule returns (bool success, bytes memory returnData) {\\n        (success, returnData) = target.call(data);\\n        return (success, returnData);\\n    }\\n    \\n    function getModules() external view override returns (address[] memory) {\\n        return _moduleList;\\n    }\\n    \\n    function pause() external override onlyModule {\\n        _pause();\\n    }\\n    \\n    function unpause() external override onlyModule {\\n        _unpause();\\n    }\\n    \\n    function transferOwnership(address newOwner) public override(OwnableUpgradeable, IV4TokenBase) onlyOwner {\\n        super.transferOwnership(newOwner);\\n    }\\n\\n    function owner() public view override(OwnableUpgradeable, IV4TokenBase) returns (address) {\\n        return super.owner();\\n    }\\n    \\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override {\\n        super._beforeTokenTransfer(from, to, amount);\\n        require(!paused(), \\\"V4TokenBase: token transfer while paused\\\");\\n    }\\n} \",\"keccak256\":\"0xf774a0e4472c30adc98c8ce40c824b5ac25aac10899679d846601d5f4383e15d\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4Module.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4Module\\n * @dev Interface for all V4 modules\\n */\\ninterface IV4Module {\\n    /**\\n     * @dev Initialize the module\\n     * @param tokenAddress Address of the token this module is attached to\\n     * @param data Additional initialization data\\n     */\\n    function initialize(address tokenAddress, bytes calldata data) external;\\n    \\n    /**\\n     * @dev Get the type of this module\\n     * @return moduleType Type identifier for this module\\n     */\\n    function getModuleType() external pure returns (bytes32);\\n    \\n    /**\\n     * @dev Check if this module has a specific function\\n     * @param functionSig Function signature to check for\\n     * @return hasFunction Whether the module implements the function\\n     */\\n    function supportsFunction(bytes4 functionSig) external pure returns (bool);\\n    \\n    /**\\n     * @dev Get the token this module is attached to\\n     * @return tokenAddress Address of the token\\n     */\\n    function getToken() external view returns (address);\\n} \",\"keccak256\":\"0xbfa89c396644cc001c310540892c7b0156d548f31e610cc02fd3239fc732fd71\",\"license\":\"MIT\"},\"src/contracts/interfaces/IV4TokenBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4TokenBase\\n * @dev Interface for the V4 token base\\n */\\ninterface IV4TokenBase {\\n    /**\\n     * @dev Initialize the token with basic parameters\\n     * @param name_ Token name\\n     * @param symbol_ Token symbol\\n     * @param initialSupply Initial supply to mint\\n     * @param owner_ Address that will receive the initial supply and become the owner\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupply,\\n        address owner_\\n    ) external;\\n    \\n    /**\\n     * @dev Add a module to the token\\n     * @param moduleAddress Address of the module to add\\n     * @param data Initialization data for the module\\n     * @return success Whether the module was successfully added\\n     */\\n    function addModule(address moduleAddress, bytes calldata data) external returns (bool);\\n    \\n    /**\\n     * @dev Remove a module from the token\\n     * @param moduleAddress Address of the module to remove\\n     * @return success Whether the module was successfully removed\\n     */\\n    function removeModule(address moduleAddress) external returns (bool);\\n    \\n    /**\\n     * @dev Check if a module is active\\n     * @param moduleAddress Address of the module to check\\n     * @return isActive Whether the module is active\\n     */\\n    function isModuleActive(address moduleAddress) external view returns (bool);\\n    \\n    /**\\n     * @dev Get all active modules\\n     * @return modules Array of active module addresses\\n     */\\n    function getModules() external view returns (address[] memory);\\n    \\n    /**\\n     * @dev Execute a function call from a module\\n     * @param target Target address for the call\\n     * @param data Call data\\n     * @return success Whether the call was successful\\n     * @return returnData Data returned by the call\\n     */\\n    function executeFromModule(address target, bytes calldata data) external returns (bool, bytes memory);\\n    \\n    /**\\n     * @dev Pause the token\\n     */\\n    function pause() external;\\n    \\n    /**\\n     * @dev Unpause the token\\n     */\\n    function unpause() external;\\n    \\n    /**\\n     * @dev Transfer ownership of the token\\n     * @param newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) external;\\n\\n    /**\\n     * @dev Get the current owner of the token\\n     * @return The address of the current owner\\n     */\\n    function owner() external view returns (address);\\n} \",\"keccak256\":\"0xdef03abd1361f901042d1e4fbd58ca222d1956f036d593e5278ba00e3875b9d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":139,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":142,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1525,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":449,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":455,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":457,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":459,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":461,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1041,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":11,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_owner","offset":0,"slot":"101","type":"t_address"},{"astId":131,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":323,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_paused","offset":0,"slot":"151","type":"t_bool"},{"astId":428,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":4920,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_modules","offset":0,"slot":"201","type":"t_mapping(t_address,t_bool)"},{"astId":4923,"contract":"src/contracts/V4TokenBase.sol:V4TokenBase","label":"_moduleList","offset":0,"slot":"202","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/interfaces/IV4DistributionModule.sol":{"IV4DistributionModule":{"abi":[{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"label","type":"string"},{"internalType":"bool","name":"locked","type":"bool"},{"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"addAllocation","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"wallets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"string[]","name":"labels","type":"string[]"},{"internalType":"bool[]","name":"lockStatus","type":"bool[]"},{"internalType":"uint256[]","name":"unlockTimes","type":"uint256[]"}],"name":"addMultipleAllocations","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executeDistribution","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllAllocations","outputs":[{"components":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"label","type":"string"},{"internalType":"bool","name":"locked","type":"bool"},{"internalType":"uint256","name":"unlockTime","type":"uint256"}],"internalType":"struct IV4DistributionModule.Allocation[]","name":"allocations","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"getAllocation","outputs":[{"components":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"label","type":"string"},{"internalType":"bool","name":"locked","type":"bool"},{"internalType":"uint256","name":"unlockTime","type":"uint256"}],"internalType":"struct IV4DistributionModule.Allocation","name":"allocation","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"label","type":"string"},{"internalType":"bool","name":"locked","type":"bool"},{"internalType":"uint256","name":"unlockTime","type":"uint256"}],"name":"modifyAllocation","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"removeAllocation","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"wallet","type":"address"}],"name":"unlockTokens","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the distribution module with allocation capabilities","kind":"dev","methods":{"addAllocation(address,uint256,string,bool,uint256)":{"details":"Add a new allocation","params":{"amount":"Amount of tokens to allocate","label":"Optional label for this allocation (e.g. \"Team\", \"Marketing\")","locked":"Whether the allocation should be time-locked","unlockTime":"Timestamp when tokens become unlocked (0 if not locked)","wallet":"Recipient wallet address"},"returns":{"success":"Whether the allocation was successfully added"}},"addMultipleAllocations(address[],uint256[],string[],bool[],uint256[])":{"details":"Add multiple allocations at once","params":{"amounts":"Array of token amounts","labels":"Array of labels","lockStatus":"Array of lock statuses","unlockTimes":"Array of unlock times","wallets":"Array of recipient wallet addresses"},"returns":{"success":"Whether all allocations were successfully added"}},"executeDistribution()":{"details":"Execute the distribution","returns":{"success":"Whether the distribution was successfully executed"}},"getAllAllocations()":{"details":"Get all allocations","returns":{"allocations":"Array of allocation details"}},"getAllocation(address)":{"details":"Get allocation for a specific wallet","params":{"wallet":"Recipient wallet address"},"returns":{"allocation":"The allocation details"}},"modifyAllocation(address,uint256,string,bool,uint256)":{"details":"Modify an existing allocation","params":{"amount":"New amount of tokens","label":"New label","locked":"New lock status","unlockTime":"New unlock time","wallet":"Recipient wallet address"},"returns":{"success":"Whether the allocation was successfully modified"}},"removeAllocation(address)":{"details":"Remove an allocation","params":{"wallet":"Recipient wallet address to remove"},"returns":{"success":"Whether the allocation was successfully removed"}},"unlockTokens(address)":{"details":"Unlock tokens for a wallet if the unlock time has passed","params":{"wallet":"Address of the wallet to unlock tokens for"},"returns":{"success":"Whether the tokens were successfully unlocked"}}},"title":"IV4DistributionModule","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addAllocation(address,uint256,string,bool,uint256)":"862c19c8","addMultipleAllocations(address[],uint256[],string[],bool[],uint256[])":"cc6becc8","executeDistribution()":"ff0ed114","getAllAllocations()":"1ca00f62","getAllocation(address)":"0e022923","modifyAllocation(address,uint256,string,bool,uint256)":"a8a4b4c0","removeAllocation(address)":"c58156e0","unlockTokens(address)":"cb67f948"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"addAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"labels\",\"type\":\"string[]\"},{\"internalType\":\"bool[]\",\"name\":\"lockStatus\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"unlockTimes\",\"type\":\"uint256[]\"}],\"name\":\"addMultipleAllocations\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeDistribution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IV4DistributionModule.Allocation[]\",\"name\":\"allocations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IV4DistributionModule.Allocation\",\"name\":\"allocation\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"modifyAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"removeAllocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"unlockTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the distribution module with allocation capabilities\",\"kind\":\"dev\",\"methods\":{\"addAllocation(address,uint256,string,bool,uint256)\":{\"details\":\"Add a new allocation\",\"params\":{\"amount\":\"Amount of tokens to allocate\",\"label\":\"Optional label for this allocation (e.g. \\\"Team\\\", \\\"Marketing\\\")\",\"locked\":\"Whether the allocation should be time-locked\",\"unlockTime\":\"Timestamp when tokens become unlocked (0 if not locked)\",\"wallet\":\"Recipient wallet address\"},\"returns\":{\"success\":\"Whether the allocation was successfully added\"}},\"addMultipleAllocations(address[],uint256[],string[],bool[],uint256[])\":{\"details\":\"Add multiple allocations at once\",\"params\":{\"amounts\":\"Array of token amounts\",\"labels\":\"Array of labels\",\"lockStatus\":\"Array of lock statuses\",\"unlockTimes\":\"Array of unlock times\",\"wallets\":\"Array of recipient wallet addresses\"},\"returns\":{\"success\":\"Whether all allocations were successfully added\"}},\"executeDistribution()\":{\"details\":\"Execute the distribution\",\"returns\":{\"success\":\"Whether the distribution was successfully executed\"}},\"getAllAllocations()\":{\"details\":\"Get all allocations\",\"returns\":{\"allocations\":\"Array of allocation details\"}},\"getAllocation(address)\":{\"details\":\"Get allocation for a specific wallet\",\"params\":{\"wallet\":\"Recipient wallet address\"},\"returns\":{\"allocation\":\"The allocation details\"}},\"modifyAllocation(address,uint256,string,bool,uint256)\":{\"details\":\"Modify an existing allocation\",\"params\":{\"amount\":\"New amount of tokens\",\"label\":\"New label\",\"locked\":\"New lock status\",\"unlockTime\":\"New unlock time\",\"wallet\":\"Recipient wallet address\"},\"returns\":{\"success\":\"Whether the allocation was successfully modified\"}},\"removeAllocation(address)\":{\"details\":\"Remove an allocation\",\"params\":{\"wallet\":\"Recipient wallet address to remove\"},\"returns\":{\"success\":\"Whether the allocation was successfully removed\"}},\"unlockTokens(address)\":{\"details\":\"Unlock tokens for a wallet if the unlock time has passed\",\"params\":{\"wallet\":\"Address of the wallet to unlock tokens for\"},\"returns\":{\"success\":\"Whether the tokens were successfully unlocked\"}}},\"title\":\"IV4DistributionModule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IV4DistributionModule.sol\":\"IV4DistributionModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/interfaces/IV4DistributionModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4DistributionModule\\n * @dev Interface for the distribution module with allocation capabilities\\n */\\ninterface IV4DistributionModule {\\n    /**\\n     * @dev Struct for each allocation entry\\n     */\\n    struct Allocation {\\n        address wallet;\\n        uint256 amount;\\n        string label;\\n        bool locked;\\n        uint256 unlockTime;\\n    }\\n    \\n    /**\\n     * @dev Add a new allocation\\n     * @param wallet Recipient wallet address\\n     * @param amount Amount of tokens to allocate\\n     * @param label Optional label for this allocation (e.g. \\\"Team\\\", \\\"Marketing\\\")\\n     * @param locked Whether the allocation should be time-locked\\n     * @param unlockTime Timestamp when tokens become unlocked (0 if not locked)\\n     * @return success Whether the allocation was successfully added\\n     */\\n    function addAllocation(\\n        address wallet, \\n        uint256 amount, \\n        string calldata label,\\n        bool locked,\\n        uint256 unlockTime\\n    ) external returns (bool success);\\n    \\n    /**\\n     * @dev Add multiple allocations at once\\n     * @param wallets Array of recipient wallet addresses\\n     * @param amounts Array of token amounts\\n     * @param labels Array of labels\\n     * @param lockStatus Array of lock statuses\\n     * @param unlockTimes Array of unlock times\\n     * @return success Whether all allocations were successfully added\\n     */\\n    function addMultipleAllocations(\\n        address[] calldata wallets,\\n        uint256[] calldata amounts,\\n        string[] calldata labels,\\n        bool[] calldata lockStatus,\\n        uint256[] calldata unlockTimes\\n    ) external returns (bool success);\\n    \\n    /**\\n     * @dev Remove an allocation\\n     * @param wallet Recipient wallet address to remove\\n     * @return success Whether the allocation was successfully removed\\n     */\\n    function removeAllocation(address wallet) external returns (bool success);\\n    \\n    /**\\n     * @dev Modify an existing allocation\\n     * @param wallet Recipient wallet address\\n     * @param amount New amount of tokens\\n     * @param label New label\\n     * @param locked New lock status\\n     * @param unlockTime New unlock time\\n     * @return success Whether the allocation was successfully modified\\n     */\\n    function modifyAllocation(\\n        address wallet,\\n        uint256 amount,\\n        string calldata label,\\n        bool locked,\\n        uint256 unlockTime\\n    ) external returns (bool success);\\n    \\n    /**\\n     * @dev Get all allocations\\n     * @return allocations Array of allocation details\\n     */\\n    function getAllAllocations() external view returns (Allocation[] memory allocations);\\n    \\n    /**\\n     * @dev Get allocation for a specific wallet\\n     * @param wallet Recipient wallet address\\n     * @return allocation The allocation details\\n     */\\n    function getAllocation(address wallet) external view returns (Allocation memory allocation);\\n    \\n    /**\\n     * @dev Execute the distribution\\n     * @return success Whether the distribution was successfully executed\\n     */\\n    function executeDistribution() external returns (bool success);\\n    \\n    /**\\n     * @dev Unlock tokens for a wallet if the unlock time has passed\\n     * @param wallet Address of the wallet to unlock tokens for\\n     * @return success Whether the tokens were successfully unlocked\\n     */\\n    function unlockTokens(address wallet) external returns (bool success);\\n} \",\"keccak256\":\"0x335e3df8483c8a9abd7e98f6fcc02a102080f8e216ba2fd928ea0c9633bb6810\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/interfaces/IV4Module.sol":{"IV4Module":{"abi":[{"inputs":[],"name":"getModuleType","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"functionSig","type":"bytes4"}],"name":"supportsFunction","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"}],"devdoc":{"details":"Interface for all V4 modules","kind":"dev","methods":{"getModuleType()":{"details":"Get the type of this module","returns":{"_0":"moduleType Type identifier for this module"}},"getToken()":{"details":"Get the token this module is attached to","returns":{"_0":"tokenAddress Address of the token"}},"initialize(address,bytes)":{"details":"Initialize the module","params":{"data":"Additional initialization data","tokenAddress":"Address of the token this module is attached to"}},"supportsFunction(bytes4)":{"details":"Check if this module has a specific function","params":{"functionSig":"Function signature to check for"},"returns":{"_0":"hasFunction Whether the module implements the function"}}},"title":"IV4Module","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getModuleType()":"0b9349b9","getToken()":"21df0da7","initialize(address,bytes)":"d1f57894","supportsFunction(bytes4)":"be464464"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getModuleType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"}],\"name\":\"supportsFunction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for all V4 modules\",\"kind\":\"dev\",\"methods\":{\"getModuleType()\":{\"details\":\"Get the type of this module\",\"returns\":{\"_0\":\"moduleType Type identifier for this module\"}},\"getToken()\":{\"details\":\"Get the token this module is attached to\",\"returns\":{\"_0\":\"tokenAddress Address of the token\"}},\"initialize(address,bytes)\":{\"details\":\"Initialize the module\",\"params\":{\"data\":\"Additional initialization data\",\"tokenAddress\":\"Address of the token this module is attached to\"}},\"supportsFunction(bytes4)\":{\"details\":\"Check if this module has a specific function\",\"params\":{\"functionSig\":\"Function signature to check for\"},\"returns\":{\"_0\":\"hasFunction Whether the module implements the function\"}}},\"title\":\"IV4Module\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IV4Module.sol\":\"IV4Module\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/interfaces/IV4Module.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4Module\\n * @dev Interface for all V4 modules\\n */\\ninterface IV4Module {\\n    /**\\n     * @dev Initialize the module\\n     * @param tokenAddress Address of the token this module is attached to\\n     * @param data Additional initialization data\\n     */\\n    function initialize(address tokenAddress, bytes calldata data) external;\\n    \\n    /**\\n     * @dev Get the type of this module\\n     * @return moduleType Type identifier for this module\\n     */\\n    function getModuleType() external pure returns (bytes32);\\n    \\n    /**\\n     * @dev Check if this module has a specific function\\n     * @param functionSig Function signature to check for\\n     * @return hasFunction Whether the module implements the function\\n     */\\n    function supportsFunction(bytes4 functionSig) external pure returns (bool);\\n    \\n    /**\\n     * @dev Get the token this module is attached to\\n     * @return tokenAddress Address of the token\\n     */\\n    function getToken() external view returns (address);\\n} \",\"keccak256\":\"0xbfa89c396644cc001c310540892c7b0156d548f31e610cc02fd3239fc732fd71\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/interfaces/IV4SecurityModule.sol":{"IV4SecurityModule":{"abi":[{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"addSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"proposalId","type":"bytes32"}],"name":"confirmOwnershipTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyPause","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyUnpause","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getSigners","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getThreshold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"proposeOwnershipTransfer","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"name":"removeSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"threshold","type":"uint256"}],"name":"setThreshold","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the security module with multi-sig capabilities","kind":"dev","methods":{"addSigner(address)":{"details":"Add a new signer to the multi-sig configuration","params":{"signer":"Address to add as a signer"},"returns":{"_0":"success Whether the signer was successfully added"}},"confirmOwnershipTransfer(bytes32)":{"details":"Confirm an ownership transfer proposal (multi-sig process step 2)","params":{"proposalId":"Identifier of the proposal to confirm"},"returns":{"_0":"success Whether the ownership was successfully transferred"}},"emergencyPause()":{"details":"Emergency pause for the token","returns":{"_0":"success Whether the pause was successful"}},"emergencyUnpause()":{"details":"Unpause the token after emergency","returns":{"_0":"success Whether the unpause was successful"}},"getSigners()":{"details":"Get all current signers","returns":{"_0":"signers Array of current signer addresses"}},"getThreshold()":{"details":"Get the current signature threshold","returns":{"_0":"threshold The current signature threshold"}},"isSigner(address)":{"details":"Check if an address is a signer","params":{"account":"Address to check"},"returns":{"_0":"isSigner Whether the address is a signer"}},"proposeOwnershipTransfer(address)":{"details":"Propose a new owner (multi-sig process step 1)","params":{"newOwner":"Address of the proposed new owner"},"returns":{"_0":"proposalId Identifier for the ownership transfer proposal"}},"removeSigner(address)":{"details":"Remove a signer from the multi-sig configuration","params":{"signer":"Address to remove from signers"},"returns":{"_0":"success Whether the signer was successfully removed"}},"setThreshold(uint256)":{"details":"Set the required number of signatures for operations","params":{"threshold":"Number of required signatures"},"returns":{"_0":"success Whether the threshold was successfully set"}}},"title":"IV4SecurityModule","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addSigner(address)":"eb12d61e","confirmOwnershipTransfer(bytes32)":"e5006801","emergencyPause()":"51858e27","emergencyUnpause()":"4a4e3bd5","getSigners()":"94cf795e","getThreshold()":"e75235b8","isSigner(address)":"7df73e27","proposeOwnershipTransfer(address)":"21040fc3","removeSigner(address)":"0e316ab7","setThreshold(uint256)":"960bfe04"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"addSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"confirmOwnershipTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyUnpause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"proposeOwnershipTransfer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"removeSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the security module with multi-sig capabilities\",\"kind\":\"dev\",\"methods\":{\"addSigner(address)\":{\"details\":\"Add a new signer to the multi-sig configuration\",\"params\":{\"signer\":\"Address to add as a signer\"},\"returns\":{\"_0\":\"success Whether the signer was successfully added\"}},\"confirmOwnershipTransfer(bytes32)\":{\"details\":\"Confirm an ownership transfer proposal (multi-sig process step 2)\",\"params\":{\"proposalId\":\"Identifier of the proposal to confirm\"},\"returns\":{\"_0\":\"success Whether the ownership was successfully transferred\"}},\"emergencyPause()\":{\"details\":\"Emergency pause for the token\",\"returns\":{\"_0\":\"success Whether the pause was successful\"}},\"emergencyUnpause()\":{\"details\":\"Unpause the token after emergency\",\"returns\":{\"_0\":\"success Whether the unpause was successful\"}},\"getSigners()\":{\"details\":\"Get all current signers\",\"returns\":{\"_0\":\"signers Array of current signer addresses\"}},\"getThreshold()\":{\"details\":\"Get the current signature threshold\",\"returns\":{\"_0\":\"threshold The current signature threshold\"}},\"isSigner(address)\":{\"details\":\"Check if an address is a signer\",\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"isSigner Whether the address is a signer\"}},\"proposeOwnershipTransfer(address)\":{\"details\":\"Propose a new owner (multi-sig process step 1)\",\"params\":{\"newOwner\":\"Address of the proposed new owner\"},\"returns\":{\"_0\":\"proposalId Identifier for the ownership transfer proposal\"}},\"removeSigner(address)\":{\"details\":\"Remove a signer from the multi-sig configuration\",\"params\":{\"signer\":\"Address to remove from signers\"},\"returns\":{\"_0\":\"success Whether the signer was successfully removed\"}},\"setThreshold(uint256)\":{\"details\":\"Set the required number of signatures for operations\",\"params\":{\"threshold\":\"Number of required signatures\"},\"returns\":{\"_0\":\"success Whether the threshold was successfully set\"}}},\"title\":\"IV4SecurityModule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IV4SecurityModule.sol\":\"IV4SecurityModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/interfaces/IV4SecurityModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4SecurityModule\\n * @dev Interface for the security module with multi-sig capabilities\\n */\\ninterface IV4SecurityModule {\\n    /**\\n     * @dev Propose a new owner (multi-sig process step 1)\\n     * @param newOwner Address of the proposed new owner\\n     * @return proposalId Identifier for the ownership transfer proposal\\n     */\\n    function proposeOwnershipTransfer(address newOwner) external returns (bytes32);\\n    \\n    /**\\n     * @dev Confirm an ownership transfer proposal (multi-sig process step 2)\\n     * @param proposalId Identifier of the proposal to confirm\\n     * @return success Whether the ownership was successfully transferred\\n     */\\n    function confirmOwnershipTransfer(bytes32 proposalId) external returns (bool);\\n    \\n    /**\\n     * @dev Add a new signer to the multi-sig configuration\\n     * @param signer Address to add as a signer\\n     * @return success Whether the signer was successfully added\\n     */\\n    function addSigner(address signer) external returns (bool);\\n    \\n    /**\\n     * @dev Remove a signer from the multi-sig configuration\\n     * @param signer Address to remove from signers\\n     * @return success Whether the signer was successfully removed\\n     */\\n    function removeSigner(address signer) external returns (bool);\\n    \\n    /**\\n     * @dev Set the required number of signatures for operations\\n     * @param threshold Number of required signatures\\n     * @return success Whether the threshold was successfully set\\n     */\\n    function setThreshold(uint256 threshold) external returns (bool);\\n    \\n    /**\\n     * @dev Check if an address is a signer\\n     * @param account Address to check\\n     * @return isSigner Whether the address is a signer\\n     */\\n    function isSigner(address account) external view returns (bool);\\n    \\n    /**\\n     * @dev Get the current signature threshold\\n     * @return threshold The current signature threshold\\n     */\\n    function getThreshold() external view returns (uint256);\\n    \\n    /**\\n     * @dev Get all current signers\\n     * @return signers Array of current signer addresses\\n     */\\n    function getSigners() external view returns (address[] memory);\\n    \\n    /**\\n     * @dev Emergency pause for the token\\n     * @return success Whether the pause was successful\\n     */\\n    function emergencyPause() external returns (bool);\\n    \\n    /**\\n     * @dev Unpause the token after emergency\\n     * @return success Whether the unpause was successful\\n     */\\n    function emergencyUnpause() external returns (bool);\\n} \",\"keccak256\":\"0xcda8a7d7ccac4ee4ede2e5b8c3faf47bb12bc092b270d7b3fad9bbf7112cbf67\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"src/contracts/interfaces/IV4TokenBase.sol":{"IV4TokenBase":{"abi":[{"inputs":[{"internalType":"address","name":"moduleAddress","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"addModule","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeFromModule","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getModules","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"address","name":"owner_","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"moduleAddress","type":"address"}],"name":"isModuleActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"moduleAddress","type":"address"}],"name":"removeModule","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the V4 token base","kind":"dev","methods":{"addModule(address,bytes)":{"details":"Add a module to the token","params":{"data":"Initialization data for the module","moduleAddress":"Address of the module to add"},"returns":{"_0":"success Whether the module was successfully added"}},"executeFromModule(address,bytes)":{"details":"Execute a function call from a module","params":{"data":"Call data","target":"Target address for the call"},"returns":{"_0":"success Whether the call was successful","_1":"returnData Data returned by the call"}},"getModules()":{"details":"Get all active modules","returns":{"_0":"modules Array of active module addresses"}},"initialize(string,string,uint256,address)":{"details":"Initialize the token with basic parameters","params":{"initialSupply":"Initial supply to mint","name_":"Token name","owner_":"Address that will receive the initial supply and become the owner","symbol_":"Token symbol"}},"isModuleActive(address)":{"details":"Check if a module is active","params":{"moduleAddress":"Address of the module to check"},"returns":{"_0":"isActive Whether the module is active"}},"owner()":{"details":"Get the current owner of the token","returns":{"_0":"The address of the current owner"}},"pause()":{"details":"Pause the token"},"removeModule(address)":{"details":"Remove a module from the token","params":{"moduleAddress":"Address of the module to remove"},"returns":{"_0":"success Whether the module was successfully removed"}},"transferOwnership(address)":{"details":"Transfer ownership of the token","params":{"newOwner":"Address of the new owner"}},"unpause()":{"details":"Unpause the token"}},"title":"IV4TokenBase","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"addModule(address,bytes)":"2dd3a78c","executeFromModule(address,bytes)":"5607b780","getModules()":"b2494df3","initialize(string,string,uint256,address)":"bd3a13f6","isModuleActive(address)":"d21b9fbd","owner()":"8da5cb5b","pause()":"8456cb59","removeModule(address)":"a0632461","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"addModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModules\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"isModuleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"removeModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the V4 token base\",\"kind\":\"dev\",\"methods\":{\"addModule(address,bytes)\":{\"details\":\"Add a module to the token\",\"params\":{\"data\":\"Initialization data for the module\",\"moduleAddress\":\"Address of the module to add\"},\"returns\":{\"_0\":\"success Whether the module was successfully added\"}},\"executeFromModule(address,bytes)\":{\"details\":\"Execute a function call from a module\",\"params\":{\"data\":\"Call data\",\"target\":\"Target address for the call\"},\"returns\":{\"_0\":\"success Whether the call was successful\",\"_1\":\"returnData Data returned by the call\"}},\"getModules()\":{\"details\":\"Get all active modules\",\"returns\":{\"_0\":\"modules Array of active module addresses\"}},\"initialize(string,string,uint256,address)\":{\"details\":\"Initialize the token with basic parameters\",\"params\":{\"initialSupply\":\"Initial supply to mint\",\"name_\":\"Token name\",\"owner_\":\"Address that will receive the initial supply and become the owner\",\"symbol_\":\"Token symbol\"}},\"isModuleActive(address)\":{\"details\":\"Check if a module is active\",\"params\":{\"moduleAddress\":\"Address of the module to check\"},\"returns\":{\"_0\":\"isActive Whether the module is active\"}},\"owner()\":{\"details\":\"Get the current owner of the token\",\"returns\":{\"_0\":\"The address of the current owner\"}},\"pause()\":{\"details\":\"Pause the token\"},\"removeModule(address)\":{\"details\":\"Remove a module from the token\",\"params\":{\"moduleAddress\":\"Address of the module to remove\"},\"returns\":{\"_0\":\"success Whether the module was successfully removed\"}},\"transferOwnership(address)\":{\"details\":\"Transfer ownership of the token\",\"params\":{\"newOwner\":\"Address of the new owner\"}},\"unpause()\":{\"details\":\"Unpause the token\"}},\"title\":\"IV4TokenBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IV4TokenBase.sol\":\"IV4TokenBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/interfaces/IV4TokenBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\n/**\\n * @title IV4TokenBase\\n * @dev Interface for the V4 token base\\n */\\ninterface IV4TokenBase {\\n    /**\\n     * @dev Initialize the token with basic parameters\\n     * @param name_ Token name\\n     * @param symbol_ Token symbol\\n     * @param initialSupply Initial supply to mint\\n     * @param owner_ Address that will receive the initial supply and become the owner\\n     */\\n    function initialize(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 initialSupply,\\n        address owner_\\n    ) external;\\n    \\n    /**\\n     * @dev Add a module to the token\\n     * @param moduleAddress Address of the module to add\\n     * @param data Initialization data for the module\\n     * @return success Whether the module was successfully added\\n     */\\n    function addModule(address moduleAddress, bytes calldata data) external returns (bool);\\n    \\n    /**\\n     * @dev Remove a module from the token\\n     * @param moduleAddress Address of the module to remove\\n     * @return success Whether the module was successfully removed\\n     */\\n    function removeModule(address moduleAddress) external returns (bool);\\n    \\n    /**\\n     * @dev Check if a module is active\\n     * @param moduleAddress Address of the module to check\\n     * @return isActive Whether the module is active\\n     */\\n    function isModuleActive(address moduleAddress) external view returns (bool);\\n    \\n    /**\\n     * @dev Get all active modules\\n     * @return modules Array of active module addresses\\n     */\\n    function getModules() external view returns (address[] memory);\\n    \\n    /**\\n     * @dev Execute a function call from a module\\n     * @param target Target address for the call\\n     * @param data Call data\\n     * @return success Whether the call was successful\\n     * @return returnData Data returned by the call\\n     */\\n    function executeFromModule(address target, bytes calldata data) external returns (bool, bytes memory);\\n    \\n    /**\\n     * @dev Pause the token\\n     */\\n    function pause() external;\\n    \\n    /**\\n     * @dev Unpause the token\\n     */\\n    function unpause() external;\\n    \\n    /**\\n     * @dev Transfer ownership of the token\\n     * @param newOwner Address of the new owner\\n     */\\n    function transferOwnership(address newOwner) external;\\n\\n    /**\\n     * @dev Get the current owner of the token\\n     * @return The address of the current owner\\n     */\\n    function owner() external view returns (address);\\n} \",\"keccak256\":\"0xdef03abd1361f901042d1e4fbd58ca222d1956f036d593e5278ba00e3875b9d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}